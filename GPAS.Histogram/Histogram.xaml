<UserControl x:Class="GPAS.Histogram.Histogram"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:GPAS.Histogram.Converters"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:histogram="clr-namespace:GPAS.Histogram"
             MinWidth="400"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="500">

    <UserControl.Resources>
        <converters:WidthConverter x:Key="WidthConverter"/>
        <converters:SortTypeToBooleanConverter x:Key="SortTypeToBooleanConverter"/>
        <converters:HyperLinkVisibilityConverter x:Key="LinkVisibilityConverter"/>
        <converters:ShowAllHyperLinkVisibilityConverter x:Key="ShowAllHyperLinkVisibilityConverter"/>
        <converters:HistogramItemToMaxValueConverter x:Key="HistogramItemToMaxValueConverter"/>
        <materialDesign:BooleanToVisibilityConverter x:Key="ReversBooleanToVisibilityConverter" FalseValue="Visible" TrueValue="Collapsed"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip" BasedOn="{StaticResource MaterialDesignToolTip}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                   MaxHeight="300" MaxWidth="500"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--قالب شخصی سازی شده برای 
        CheckBox
        به کار رفته در آیتم‌های نمایش درختی-->
        <Style x:Key="CustomCheckBox" TargetType="CheckBox">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Click">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox FlowDirection="LeftToRight" Height="{Binding (materialDesign:CheckBoxAssist.CheckBoxSize), RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="{Binding (materialDesign:CheckBoxAssist.CheckBoxSize), RelativeSource={RelativeSource TemplatedParent}}"
                                     Visibility="Collapsed">
                                <Canvas Height="24" Width="24" >
                                    <Path x:Name="Graphic" Data="M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3 M19,5L19,19 5,19 5,5 19,5z" Fill="{DynamicResource MaterialDesignCheckBoxOff}"/>
                                    <Ellipse x:Name="InteractionEllipse" Fill="{TemplateBinding Foreground}" Height="0" IsHitTestVisible="False" Canvas.Left="12" Opacity="0" RenderTransformOrigin="0.5,0.5" Canvas.Top="12" Width="0">
                                        <Ellipse.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Canvas>
                            </Viewbox>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="ButtonBase.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="HasContent" Value="True">
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="4,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True"/>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Data" TargetName="Graphic" Value="M10,17L5,12 6.41,10.58 10,14.17 17.59,6.58 19,8 M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3z"/>
                                <Setter Property="Fill" TargetName="Graphic" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource MaterialDesignCheckBoxDisabled}"/>
                                <Setter Property="Opacity" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Data" TargetName="Graphic" Value="M6,13L6,11 18,11 18,13 M19,3L5,3C3.89,3,3,3.89,3,5L3,19A2,2,0,0,0,5,21L19,21A2,2,0,0,0,21,19L21,5C21,3.89,20.1,3,19,3z"/>
                                <Setter Property="Fill" TargetName="Graphic" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="Validation.HasError" Value="True">
                                <Setter Property="Fill" TargetName="Graphic" Value="{DynamicResource ValidationErrorBrush}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource ValidationErrorBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--قالب شخصی سازی شده برای آیتم‌های نمایش درختی-->
        <Style x:Key="CustomTreeViewItem" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TreeView}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.6" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Expanded">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Collapsed">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                            <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                            <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <materialDesign:ScaleHost x:Name="ScaleHost"/>
                            <ToggleButton x:Name="Expander" ClickMode="Press" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Margin="8,0" VerticalAlignment="Center">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="Width" Value="16"/>
                                        <Setter Property="Height" Value="16"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="Transparent" Height="16" Width="16">
                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CheckStates">
                                                                <VisualStateGroup.Transitions>
                                                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="45"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualTransition>
                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualTransition>
                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualTransition>
                                                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                        <Storyboard>
                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                            </DoubleAnimationUsingKeyFrames>
                                                                        </Storyboard>
                                                                    </VisualTransition>
                                                                </VisualStateGroup.Transitions>
                                                                <VisualState x:Name="Checked">
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="45"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                                <VisualState x:Name="Unchecked">
                                                                    <Storyboard>
                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                        </DoubleAnimationUsingKeyFrames>
                                                                    </Storyboard>
                                                                </VisualState>
                                                            </VisualStateGroup>
                                                        </VisualStateManager.VisualStateGroups>
                                                        <Viewbox>
                                                            <Canvas Height="24" Width="24">
                                                                <Path x:Name="ExpandPath" Data="M8.59,16.58L13.17,12 8.59,7.41 10,6 16,12 10,18 8.59,16.58z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Stroke="{TemplateBinding Foreground}">
                                                                    <Path.RenderTransform>
                                                                        <TransformGroup>
                                                                            <ScaleTransform/>
                                                                            <SkewTransform/>
                                                                            <RotateTransform Angle="0" CenterY="4" CenterX="4"/>
                                                                            <TranslateTransform/>
                                                                        </TransformGroup>
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Canvas>
                                                        </Viewbox>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Border x:Name="MouseOverBorder" Grid.ColumnSpan="2" Grid.Column="1" IsHitTestVisible="False" Opacity="0">
                                <Border.Background>
                                    <TemplateBinding Property="Foreground">
                                        <TemplateBinding.Converter>
                                            <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                        </TemplateBinding.Converter>
                                    </TemplateBinding>
                                </Border.Background>
                            </Border>
                            <Border x:Name="SelectedBorder" Grid.ColumnSpan="2" Grid.Column="1" IsHitTestVisible="False" Opacity="0">
                                <Border.Background>
                                    <TemplateBinding Property="Foreground">
                                        <TemplateBinding.Converter>
                                            <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                        </TemplateBinding.Converter>
                                    </TemplateBinding>
                                </Border.Background>
                            </Border>
                            <Grid x:Name="ContentGrid" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="1">
                                <materialDesign:Ripple Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <materialDesign:Ripple.Feedback>
                                        <TemplateBinding Property="Foreground">
                                            <TemplateBinding.Converter>
                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                            </TemplateBinding.Converter>
                                        </TemplateBinding>
                                    </materialDesign:Ripple.Feedback>
                                    <ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header"/>
                                </materialDesign:Ripple>
                            </Grid>
                            <ContentControl x:Name="AdditionalContentControl" Grid.ColumnSpan="2" ContentTemplate="{Binding (materialDesign:TreeViewAssist.AdditionalTemplate), RelativeSource={RelativeSource Self}}" Content="{TemplateBinding Header}" Grid.Column="1" Grid.Row="1" Visibility="Collapsed"/>
                            <StackPanel x:Name="ItemsPanel" Grid.ColumnSpan="2" Grid.Column="1" Margin="-16,0,0,0" Grid.Row="2">
                                <StackPanel.Height>
                                    <MultiBinding UpdateSourceTrigger="Default">
                                        <MultiBinding.Converter>
                                            <materialDesign:MathMultipleConverter Operation="Multiply"/>
                                        </MultiBinding.Converter>
                                        <Binding ElementName="ItemsHost" Path="ActualHeight"/>
                                        <Binding ElementName="ScaleHost" Path="Scale"/>
                                    </MultiBinding>
                                </StackPanel.Height>
                                <ItemsPresenter x:Name="ItemsHost" Opacity="0" Visibility="Collapsed" VerticalAlignment="Top"/>
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Value="Visible">
                                <DataTrigger.Binding>
                                    <Binding Mode="OneWay" Path="(materialDesign:TreeViewAssist.AdditionalTemplate)" RelativeSource="{RelativeSource Self}">
                                        <Binding.Converter>
                                            <materialDesign:NullableToVisibilityConverter NullValue="Collapsed" NotNullValue="Visible"/>
                                        </Binding.Converter>
                                    </Binding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility" TargetName="AdditionalContentControl" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Value="Visible">
                                <DataTrigger.Binding>
                                    <Binding Mode="OneWay" Path="(materialDesign:TreeViewAssist.AdditionalTemplateSelector)" RelativeSource="{RelativeSource Self}">
                                        <Binding.Converter>
                                            <materialDesign:NullableToVisibilityConverter NullValue="Collapsed" NotNullValue="Visible"/>
                                        </Binding.Converter>
                                    </Binding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility" TargetName="AdditionalContentControl" Value="Visible"/>
                            </DataTrigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel IsItemsHost="True"/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">5</system:Double>
        <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">5</system:Double>

        <Style x:Key="NormalHyperlink" TargetType="Hyperlink">
            <Setter Property="Foreground" Value="DodgerBlue" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <!--برای اینکه از تمام هیستوگرام بتوان عکس گرفت از این اسکرول استفاده شده-->
    <ScrollViewer Name="ScrollViewer" PreviewMouseWheel="ScrollViewerOnPreviewMouseWheel">

        <!--گرید اصلی-->
        <Grid Name="MainGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!--قسمت عنوان و نمایه هیستوگرام-->
            <Grid Grid.Row="0" Name="HeaderGrid" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!--نمایه اصلی-->
                <Image Grid.Column="0" Source="{Binding Icon, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                   MaxHeight="60" MaxWidth="60" Margin="5"/>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <!--عنوان-->
                    <TextBlock Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                           Grid.Row="0" FontSize="16" Margin="5 15" Foreground="{DynamicResource MaterialDesignBody}"/>

                    <!--توضیحات-->
                    <TextBlock Text="{Binding Description, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                           Grid.Row="1" FontSize="12" Margin="5 0" Foreground="{DynamicResource MaterialDesignBody}"/>
                </Grid>


                <Grid Grid.Column="2" Name="ActionGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <!--دکمه گرفتن عکس از هیستوگرام-->
                    <Button Grid.Row="0" Name="SnapshotButton" VerticalAlignment="Bottom" Click="SnapshotButtonOnClick"
                            Padding="0" ToolTip="Take snapshot" Style="{StaticResource MaterialDesignFlatButton}"
                            Visibility="{Binding ShowSnapshotButton,
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl},
                        Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Camera" Height="25" Width="25" />
                        </StackPanel>
                    </Button>

                    <!--Sort by-->
                    <materialDesign:PopupBox Grid.Row="1" Name="SortByToolBar" ToolTip="Sort by" Background="Transparent"
                                         BorderThickness="0" Padding="0" Margin="5" PlacementMode="BottomAndAlignRightEdges"
                                         StaysOpen="True" Opened="SortByToolBar_OnOpened"
                                             Visibility="{Binding ShowSortButton,
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl},
                        Converter={StaticResource BooleanToVisibilityConverter}}">
                        <materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PackIcon Kind="SortVariant" Height="32" Width="32" 
                                                 Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        </materialDesign:PopupBox.ToggleContent>
                        <StackPanel MinWidth="140">
                            <StackPanel.Resources>
                                <Style TargetType="{x:Type Grid}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                    <EventSetter Event="MouseDown" Handler="ViewPopUpMouseDownHandler"/>
                                </Style>
                            </StackPanel.Resources>
                            <TextBlock Text="Sort by" Margin="5" FontSize="14" FontWeight="Bold"/>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Value" Margin="5" FontSize="14" Grid.Column="0" HorizontalAlignment="Left"/>
                                <RadioButton Margin="5" Grid.Column="1" GroupName="SortingPriority"
                                             Checked="SortPriorityRadioButton_Checked" Tag="{x:Static histogram:SortPriority.Value}"
                                             Name="ValueRadioButton" IsChecked="True"/>
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Title" Margin="5" FontSize="14" Grid.Column="0" HorizontalAlignment="Left"/>
                                <RadioButton Margin="5" Grid.Column="1" GroupName="SortingPriority" 
                                             Checked="SortPriorityRadioButton_Checked" Tag="{x:Static histogram:SortPriority.Title}"
                                             Name="TitleRadioButton"/>
                            </Grid>

                            <Separator VerticalAlignment="Top" Margin="5 0"/>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Ascending" Margin="5" FontSize="14" Grid.Column="0" HorizontalAlignment="Left"/>
                                <RadioButton Margin="5"  Grid.Column="1" GroupName="SortingOrder"
                                             Checked="SortOrderRadioButton_Checked" Tag="{x:Static histogram:SortOrder.Ascending}"
                                             Name="AscendingRadioButton"/>
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Descending" Margin="5" FontSize="14" Grid.Column="0" HorizontalAlignment="Left"/>
                                <RadioButton  Margin="5"  Grid.Column="1" GroupName="SortingOrder"
                                              Checked="SortOrderRadioButton_Checked" Tag="{x:Static histogram:SortOrder.Descending}"
                                              IsChecked="True" Name="DescendingRadioButton"/>
                            </Grid>
                        </StackPanel>
                    </materialDesign:PopupBox>
                </Grid>
            </Grid>

            <!--جدا کننده-->
            <Separator  Grid.Row="1" Margin="5"/>

            <!--قالب فرزندان آیتم‌های لایه دوم به بعد-->
            <TreeView Grid.Row="2" Name="ItemsTreeView" MouseDown="ItemsTreeView_OnMouseDown"
                  ItemsSource="{Binding SortedItems, RelativeSource={RelativeSource FindAncestor,AncestorType=UserControl}}">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource CustomTreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, FallbackValue=True, TargetNullValue=True}" />
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="Padding" Value="0" />
                        <EventSetter Event="MouseRightButtonDown" Handler="ItemsTreeViewItemOnMouseRightButtonDown" />
                        <EventSetter Event="PreviewMouseDown" Handler="ItemsTreeViewItemOnPreviewMouseLeftButtonDown" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignTextFieldBoxHoverBackground}" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UsePrimaryColor}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UsePrimaryColor}" Value="False">
                                <DataTrigger.Setters>
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>

                <!--دریافت وضعیت کلید کنترل -->
                <TreeView.InputBindings>
                    <KeyBinding Modifiers="Control" Key="LeftCtrl" Command="{Binding CtrlPressedCommand, 
                    RelativeSource={RelativeSource FindAncestor,AncestorType=UserControl}}" />

                    <KeyBinding Modifiers="Control" Key="RightCtrl" Command="{Binding CtrlPressedCommand, 
                    RelativeSource={RelativeSource FindAncestor,AncestorType=UserControl}}" />
                </TreeView.InputBindings>
                <b:Interaction.Behaviors>
                    <histogram:KeyUpWithArgsBehavior KeyUpCommand="{Binding CtrlUnpressedCommand, 
                    RelativeSource={RelativeSource FindAncestor,AncestorType=UserControl}}"   />
                </b:Interaction.Behaviors>

                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding ItemsToShow}">
                        <CheckBox IsChecked="{Binding IsSelected}" Style="{StaticResource CustomCheckBox}"
                              Unchecked="CheckBoxOnUnchecked">
                            <Grid Margin="8" 
                              Width="{Binding ActualWidth, ElementName=MainGrid, 
                                Converter={StaticResource WidthConverter}, ConverterParameter='0.78'}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Image Grid.Column="0" Source="{Binding Icon}" Margin="0 0 5 0"
                                   MaxWidth="25" MaxHeight="25"
                                   Visibility="{Binding IsLeaf, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                <Grid Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0" Text="{Binding Title}" ToolTip="{Binding Title}" FontSize="14" 
                                           ToolTipService.Placement="MousePoint" MaxHeight="20"
                                           VerticalAlignment="Center" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left"/>

                                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left">
                                        <TextBlock Margin="5" FontSize="14" HorizontalAlignment="Left"
                                               Visibility="{Binding IsLeaf, Converter={StaticResource ReversBooleanToVisibilityConverter}}">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="({0} / {1})">
                                                    <Binding Path="ItemsToShow.Count" />
                                                    <Binding Path="TotaleItemsCount" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>

                                        <!--هایپر لینک‌هایی برای مدیریت نمایش تعداد فرزندان آیتم‌ها-->
                                        <StackPanel Orientation="Horizontal" Margin="5" HorizontalAlignment="Right">
                                            <TextBlock Margin="5 0" VerticalAlignment="Center">
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource ShowAllHyperLinkVisibilityConverter}">
                                                        <Binding Path="Items.Count" />
                                                        <Binding Path="ItemsToShow.Count" />
                                                        <Binding Path="CanShowAll" />
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                                <Hyperlink Name="ShowAllHyperlink" TextDecorations="None"
                                                           Click="ShowAllHyperlinkOnClick"
                                                           Style="{StaticResource NormalHyperlink}">
                                                    <TextBlock Text="Show all" VerticalAlignment="Center" FontSize="13" />
                                                </Hyperlink>
                                            </TextBlock>
                                            <TextBlock Margin="5 0" VerticalAlignment="Center">
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource LinkVisibilityConverter}">
                                                        <Binding Path="Items.Count" />
                                                        <Binding Path="ItemsToShow.Count" />
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                                <Hyperlink Name="MoreHyperlink" TextDecorations="None"
                                                           Click="MoreHyperlinkOnClick"
                                                           Style="{StaticResource NormalHyperlink}">
                                                    <TextBlock Text="More" VerticalAlignment="Center" FontSize="13" />
                                                </Hyperlink>
                                            </TextBlock>
                                            <TextBlock Margin="5 0" VerticalAlignment="Center">
                                                <TextBlock.Visibility>
                                                    <MultiBinding Converter="{StaticResource LinkVisibilityConverter}">
                                                        <Binding Path="ItemsToShow.Count" />
                                                        <Binding Path="NumberLimitationToShow" />
                                                    </MultiBinding>
                                                </TextBlock.Visibility>
                                                <Hyperlink Name="LessHyperlink" TextDecorations="None"
                                                           Click="LessHyperlinkOnClick"
                                                           Style="{StaticResource NormalHyperlink}">
                                                    <TextBlock Text="Less" VerticalAlignment="Center" FontSize="13" />
                                                </Hyperlink>
                                            </TextBlock>
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>

                                <TextBlock Grid.Column="3" Text="{Binding Value}" Margin="5"
                                           VerticalAlignment="Center" FontSize="14" 
                                           Visibility="{Binding IsLeaf, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                <ProgressBar Grid.Column="4" Value="{Binding Value}"
                                             Height="10" Background="{DynamicResource PrimaryHueDarkBrush}"
                                             Foreground="{DynamicResource PrimaryHueLightBrush}" 
                                             BorderBrush="{DynamicResource PrimaryHueDarkBrush}"
                                             Width="{Binding ActualWidth, ElementName=MainGrid,
                                    Converter={StaticResource WidthConverter}, ConverterParameter='0.4'}"
                                             Visibility="{Binding IsLeaf, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <ProgressBar.Maximum>
                                        <MultiBinding Converter="{StaticResource HistogramItemToMaxValueConverter}">
                                            <Binding Path="Parent"/>
                                            <Binding Path="MaxValue" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}"/>
                                        </MultiBinding>
                                    </ProgressBar.Maximum>
                                </ProgressBar>
                            </Grid>
                        </CheckBox>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </Grid>
    </ScrollViewer>
</UserControl>
