<UserControl x:Class="GPAS.TreeViewPicker.TreeViewPicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:GPAS.TreeViewPicker"
             xmlns:converter="clr-namespace:GPAS.TreeViewPicker.Converter"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             materialDesign:ShadowAssist.CacheMode="{x:Null}"
             FontFamily="{materialDesign:MaterialDesignFont}" 
             d:DesignHeight="200" d:DesignWidth="300" Style="{DynamicResource UserControlStyle1}" >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TreeView.xaml" />

                <!-- secondary colour -->
                <ResourceDictionary>
                    <!-- include your secondary pallette -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/materialdesigncolor.Indigo.accent.xaml" />
                    </ResourceDictionary.MergedDictionaries>

                    <!-- include a single secondary accent color (and the associated forecolour) -->
                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="{StaticResource Accent200}"/>
                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="{StaticResource Accent200Foreground}"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="boolToVisibility" />
            <converter:SelectedItemToHeaderDefaultTitleConverter x:Key="SelectedItemToHeaderDefaultTitleConverter"/>
            <converter:SelectedItemToHeaderDefaultIconConverter x:Key="SelectedItemToHeaderDefaultIconConverter"/>
            <converter:IsSelectableToOpacitySelectedItemConverter x:Key="IsSelectableToOpacitySelectedItemConverter"/>
            <converter:IsSelectedToBrushCheck x:Key="IsSelectedToBrushCheck"/>
            <converter:DisplayModeToControlTemplateConverter x:Key="DisplayModeToControlTemplateConverter"/>
            <converter:AllBooleanToVisibilityConverter x:Key="AllBooleanToVisibilityConverter"/>

            <ControlTemplate x:Key="ExpanderTemplate1" TargetType="{x:Type Expander}">
                <Border x:Name="MainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="ExpansionStates">
                            <VisualStateGroup.Transitions>
                                <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Expanded">
                                    <VisualTransition.GeneratedEasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </VisualTransition.GeneratedEasingFunction>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Content">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content"/>
                                    </Storyboard>
                                </VisualTransition>
                                <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Collapsed">
                                    <VisualTransition.GeneratedEasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </VisualTransition.GeneratedEasingFunction>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Content">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Hidden</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content"/>
                                    </Storyboard>
                                </VisualTransition>
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Expanded">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content"/>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Content">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Collapsed">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Content"/>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_Content">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Hidden</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <materialDesign:ColorZone Mode="Standard" CornerRadius="2 0 2 2" Panel.ZIndex="1" materialDesign:ShadowAssist.ShadowDepth="Depth1">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <ToggleButton x:Name="HeaderToggleButton" Content="{TemplateBinding Header}" Foreground="{TemplateBinding Foreground}"
                                                          MinHeight="30" PreviewMouseLeftButtonDown="HeaderToggleButton_PreviewMouseLeftButtonDown"
                                                          IsChecked="{Binding IsExpanded, Mode=OneWayToSource, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.InputBindings>
                                        <KeyBinding Key="Up" Command="{Binding CollapseCommand,
                                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                        <KeyBinding Key="Down" Command="{Binding ExpandCommand,
                                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                    </ToggleButton.InputBindings>

                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border x:Name="HeaderSite" Background="Transparent">
                                                <Grid x:Name="HeaderPanel">
                                                    <ContentPresenter x:Name="PART_Header" Content="{TemplateBinding Content}" Focusable="False"/>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>

                                <Border x:Name="ContentSite" Grid.Row="1" Margin="0">
                                    <Popup x:Name="ContentPopup"
                                           IsOpen="{Binding IsExpanded, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                           Width="{Binding ElementName=ContentSite, Path=ActualWidth}"
                                           Opened="ContentPopup_Opened" StaysOpen="False" PlacementTarget="{Binding ElementName=HeaderToggleButton}">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid x:Name="ContentPanel" Width="Auto" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.LayoutTransform>
                                                    <ScaleTransform CenterY="0" CenterX="0.5" ScaleY="{Binding Opacity, ElementName=PART_Content}"/>
                                                </Grid.LayoutTransform>

                                                <Border BorderThickness="1" CornerRadius="3" BorderBrush="{TemplateBinding Foreground}" Margin="4">
                                                    <Grid Margin="4 0 4 0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Label Style="{DynamicResource MaterialDesignLabel}" Padding="0" VerticalContentAlignment="Center"
                                                                       Foreground="{TemplateBinding Foreground}">
                                                            <materialDesign:PackIcon Kind="Magnify" Opacity=".56" />
                                                        </Label>
                                                        <TextBox x:Name="SearchTextBox" Grid.Column="1"
                                                                         materialDesign:HintAssist.Hint="{Binding SearchBoxPlaceHolder,
                                                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                         materialDesign:TextFieldAssist.DecorationVisibility="Hidden" MinWidth="200"
                                                                         VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" 
                                                                         BorderThickness="0" Margin="8 0 0 0"
                                                                         Text="{Binding Path=CriteriaSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}">
                                                            <TextBox.InputBindings>
                                                                <KeyBinding Key="Down" Command="{Binding TreeViewGetFocusCommand,
                                                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                                                <KeyBinding Key="Up" Command="{Binding TreeViewGetFocusCommand,
                                                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                                            </TextBox.InputBindings>
                                                        </TextBox>
                                                    </Grid>
                                                </Border>
                                                <ContentPresenter Grid.Row="1" x:Name="PART_Content" ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                              Focusable="False" Opacity="0"/>
                                            </Grid>
                                        </Border>
                                    </Popup>
                                </Border>
                            </Grid>
                        </materialDesign:ColorZone>
                        <ToggleButton x:Name="ExpanderToggleButton" Grid.Column="1" BorderThickness="0" Cursor="Hand" VerticalAlignment="Top"
                                                  MinHeight="30" MinWidth="30" Visibility="{Binding ShowExpanderButton, Converter={StaticResource boolToVisibility},
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                  IsChecked="{Binding ElementName=HeaderToggleButton, Path=IsChecked}"
                                                  PreviewMouseLeftButtonDown="ExpanderToggleButton_PreviewMouseLeftButtonDown">
                            <ToggleButton.InputBindings>
                                <KeyBinding Key="Up" Command="{Binding CollapseCommand,
                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                <KeyBinding Key="Down" Command="{Binding ExpandCommand,
                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                            </ToggleButton.InputBindings>
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <materialDesign:ColorZone x:Name="MainColorZone" Grid.Column="1" Mode="Dark" Padding="8 4 8 4" CornerRadius="0 2 2 0"
                                                                          Panel.ZIndex="1" VerticalAlignment="Stretch" VerticalContentAlignment="Center"
                                                                          materialDesign:ShadowAssist.ShadowDepth="Depth1">
                                        <materialDesign:PackIcon Kind="HamburgerMenu" Width="25" Height="25" VerticalContentAlignment="Stretch"/>
                                    </materialDesign:ColorZone>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Opacity" TargetName="MainBorder" Value=".56"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="ExpanderStyle1" TargetType="{x:Type Expander}">
                <Setter Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
                <Setter Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
                <Setter Property="Template" Value="{StaticResource ExpanderTemplate1}"/>
            </Style>

            <Style x:Key="TreeViewItemStyle1" BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="{x:Type TreeViewItem}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                <Setter Property="Visibility"
                                                            Value="{Binding Path=IsMatchWithCriteriaSearch, Mode=OneWay,
                                                        Converter={StaticResource ResourceKey=boolToVisibility}}"/>
                <Setter Property="IsSelected" Value="{Binding IsCandidateForSelect, Mode=TwoWay}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState Name="Normal"/>
                                        <VisualState Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                                     To="0.1" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState Name="Disabled"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ExpansionStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" To="Expanded">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" 
                                                                                                                       Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                                                                         Storyboard.TargetName="ItemsHost" To="1" Duration="0:0:0.3"/>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition GeneratedDuration="0" To="Collapsed">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost"
                                                                                                                       Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                                                         Storyboard.TargetName="ItemsHost" To="0" Duration="0:0:0.3"/>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Expanded">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                                                                     Storyboard.TargetName="ItemsHost" To="1" Duration="0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost"
                                                                                                                   Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Collapsed">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                                                                     Storyboard.TargetName="ItemsHost" To="0" Duration="0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" 
                                                                                                                   Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ToggleButton x:Name="Expander" ClickMode="Press" 
                                                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                                  Style="{StaticResource MaterialDesignExpandCollapseToggleStyle}"
                                                                                  Foreground="{Binding Foreground,
                                                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                                                                  Margin="8 0 8 0"
                                                                                  VerticalAlignment="Center" />
                                <Border x:Name="MouseOverBorder" Grid.Column="1" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" 
                                                                            Background="{Binding Foreground, Converter={StaticResource BrushRoundConverter},
                                                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
                                <Border x:Name="SelectedBorder" Grid.Column="1" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0"
                                                                            Background="{Binding Foreground, Converter={StaticResource BrushRoundConverter},
                                                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
                                <Grid Grid.Column="1" Grid.ColumnSpan="2" x:Name="ContentGrid" Background="Transparent"
                                                                          PreviewMouseLeftButtonDown="Grid_PreviewMouseLeftButtonDown" >
                                    <ContentPresenter Margin="8" x:Name="PART_Header" ContentSource="Header" />
                                </Grid>
                                <ContentControl Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" x:Name="AdditionalContentControl"
                                                                                    Content="{TemplateBinding Header}" Visibility="Collapsed">
                                </ContentControl>

                                <StackPanel Grid.Column="1" Grid.Row="2" x:Name="ItemsPanel" Margin="-16 0 0 0" Grid.ColumnSpan="2">
                                    <StackPanel.Height>
                                        <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                                            <Binding ElementName="ItemsHost" Path="ActualHeight"/>
                                        </MultiBinding>
                                    </StackPanel.Height>
                                    <ItemsPresenter x:Name="ItemsHost" VerticalAlignment="Top" Opacity="0" Visibility="Collapsed"/>
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value=".56"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="SelectedBorder" Property="Opacity"
                                            Value="{Binding IsSelectable, Mode=TwoWay, Converter={StaticResource IsSelectableToOpacitySelectedItemConverter}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <HierarchicalDataTemplate x:Key="ChildrenItemDataTemplate" DataType="{x:Type local:TreeViewPickerItem}" ItemsSource="{Binding Children}">
                <Grid Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" MaxWidth="20" MaxHeight="20" VerticalAlignment="Center" Margin="0 0 5 0"
                                                               Source="{Binding Icon}"/>
                    <TextBlock Grid.Column="1" Text="{Binding Title}" VerticalAlignment="Center" />
                    <materialDesign:PackIcon Grid.Column="2" Kind="Check"
                                             Foreground="{Binding IsSelected, Converter={StaticResource IsSelectedToBrushCheck}}">
                        <!--Visibility="{Binding IsSelectable, Converter={StaticResource boolToVisibility}}"-->
                        <materialDesign:PackIcon.Visibility>
                            <MultiBinding Converter="{StaticResource AllBooleanToVisibilityConverter}">
                                <Binding Path="IsSelectable"/>
                                <Binding Path="DisplayCheckIconForSelectableItems"
                                         RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}"/>
                            </MultiBinding>
                        </materialDesign:PackIcon.Visibility>
                    </materialDesign:PackIcon>
                </Grid>
            </HierarchicalDataTemplate>

            <Style x:Key="TreeViewStyle1" TargetType="{x:Type TreeView}">
                <Setter Property="ItemsSource" Value="{Binding Path=Items, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
                <Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
                <Setter Property="ItemContainerStyle" Value="{StaticResource TreeViewItemStyle1}"/>
                <Setter Property="ItemTemplate" Value="{StaticResource ChildrenItemDataTemplate}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeView}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                                    BorderThickness="0" SnapsToDevicePixels="true">
                                <ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}"
                                              CanContentScroll="false" Focusable="false"
                                              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                              Padding="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <ScrollViewer.Resources>
                                        <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">5</system:Double>
                                        <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">5</system:Double>
                                    </ScrollViewer.Resources>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                    <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="DropDownControlTemplate" TargetType="{x:Type UserControl}">
                <Border x:Name="MainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="true">
                    <Grid >
                        <Expander Style="{DynamicResource ExpanderStyle1}" VerticalAlignment="Top"
                                              IsExpanded="{Binding IsExpanded,
                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                              Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Panel.ZIndex="100">
                            <Expander.Header>
                                <Border>
                                    <Grid Height="32">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal" Margin="10 0 " >
                                            <Image MaxWidth="20" MaxHeight="20" VerticalAlignment="Center" Margin="0 0 5 0">
                                                <Image.Source>
                                                    <MultiBinding Converter="{StaticResource SelectedItemToHeaderDefaultIconConverter}" Mode="OneWay">
                                                        <Binding Path="SelectedItem"
                                                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}"/>
                                                        <Binding Path="HeaderDefaultIcon"
                                                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}"/>
                                                    </MultiBinding>
                                                </Image.Source>
                                            </Image>
                                            <TextBlock VerticalAlignment="Center">
                                                <TextBlock.Text>
                                                    <MultiBinding Converter="{StaticResource SelectedItemToHeaderDefaultTitleConverter}" Mode="OneWay">
                                                        <Binding Path="SelectedItem"
                                                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}"/>
                                                        <Binding Path="HeaderDefaultTitle"
                                                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </StackPanel>
                                        <Button VerticalContentAlignment="Center" Grid.Column="1" Padding="0" Foreground="{TemplateBinding Foreground}"
                                                            Command="{Binding RemoveSelectedItemCommand,
                                                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <materialDesign:PackIcon x:Name="ClosePackIcon" Kind="Close" Foreground="Red" Background="Transparent"
                                                                                         VerticalAlignment="Center" Width="15" Margin="5"/>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </Grid>
                                </Border>
                            </Expander.Header>

                            <TreeView x:Name="treeView" Style="{StaticResource TreeViewStyle1}" SelectedItemChanged="TreeView_SelectedItemChanged">
                                <TreeView.InputBindings>
                                    <KeyBinding Key="Up" Command="{Binding SearchBoxGetFocusIfFirstItemIsSelectedCommand,
                                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                </TreeView.InputBindings>
                            </TreeView>
                        </Expander>
                    </Grid>
                </Border>
            </ControlTemplate>

            <ControlTemplate x:Key="ListControlTemplate" TargetType="{x:Type UserControl}">
                <Border x:Name="MainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="true">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Border BorderThickness="1" CornerRadius="3" BorderBrush="{TemplateBinding Foreground}" Margin="4">
                            <Grid Margin="4 0 4 0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Label Style="{DynamicResource MaterialDesignLabel}" Padding="0" VerticalContentAlignment="Center"
                                                                       Foreground="{TemplateBinding Foreground}">
                                    <materialDesign:PackIcon Kind="Magnify" Opacity=".56" />
                                </Label>
                                <TextBox x:Name="SearchTextBox" Grid.Column="1"
                                         materialDesign:HintAssist.Hint="{Binding SearchBoxPlaceHolder,
                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                         materialDesign:TextFieldAssist.DecorationVisibility="Hidden" MinWidth="200"
                                         VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" 
                                         BorderThickness="0" Margin="8 0 0 0"
                                         Text="{Binding Path=CriteriaSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}">
                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Down" Command="{Binding TreeViewGetFocusCommand,
                                                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                        <KeyBinding Key="Up" Command="{Binding TreeViewGetFocusCommand,
                                                                                RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                    </TextBox.InputBindings>
                                </TextBox>
                            </Grid>
                        </Border>
                        <TreeView x:Name="treeView" Grid.Row="1" Style="{StaticResource TreeViewStyle1}" SelectedItemChanged="TreeView_SelectedItemChanged">
                            <TreeView.InputBindings>
                                <KeyBinding Key="Up" Command="{Binding SearchBoxGetFocusIfFirstItemIsSelectedCommand,
                                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                            </TreeView.InputBindings>
                        </TreeView>
                    </Grid>
                </Border>
            </ControlTemplate>

            <Style x:Key="UserControlStyle1" TargetType="{x:Type UserControl}">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <Binding Path="DisplayMode" RelativeSource="{RelativeSource Mode=Self}" 
                                Converter="{StaticResource DisplayModeToControlTemplateConverter}">
                            <Binding.ConverterParameter>
                                <x:Array Type="{x:Type ControlTemplate}">
                                    <StaticResource ResourceKey="DropDownControlTemplate"/>
                                    <StaticResource ResourceKey="ListControlTemplate"/>
                                </x:Array>
                            </Binding.ConverterParameter>
                        </Binding>
                    </Setter.Value>
                </Setter> 
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="Enter" Command="{Binding SelectItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
        <KeyBinding Key="Esc" Command="{Binding CollapseCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
        <KeyBinding Key="Delete" Command="{Binding RemoveSelectedItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
    </UserControl.InputBindings>
</UserControl>
