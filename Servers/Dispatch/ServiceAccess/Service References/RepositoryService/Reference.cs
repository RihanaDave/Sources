//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GPAS.Dispatch.ServiceAccess.RepositoryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBObject", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities")]
    [System.SerializableAttribute()]
    public partial class DBObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LabelPropertyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> ResolvedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeUriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsGroup {
            get {
                return this.IsGroupField;
            }
            set {
                if ((this.IsGroupField.Equals(value) != true)) {
                    this.IsGroupField = value;
                    this.RaisePropertyChanged("IsGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LabelPropertyID {
            get {
                return this.LabelPropertyIDField;
            }
            set {
                if ((this.LabelPropertyIDField.Equals(value) != true)) {
                    this.LabelPropertyIDField = value;
                    this.RaisePropertyChanged("LabelPropertyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> ResolvedTo {
            get {
                return this.ResolvedToField;
            }
            set {
                if ((this.ResolvedToField.Equals(value) != true)) {
                    this.ResolvedToField = value;
                    this.RaisePropertyChanged("ResolvedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeUri {
            get {
                return this.TypeUriField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeUriField, value) != true)) {
                    this.TypeUriField = value;
                    this.RaisePropertyChanged("TypeUri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBProperty", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities")]
    [System.SerializableAttribute()]
    public partial class DBProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DataSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DataSourceID {
            get {
                return this.DataSourceIDField;
            }
            set {
                if ((this.DataSourceIDField.Equals(value) != true)) {
                    this.DataSourceIDField = value;
                    this.RaisePropertyChanged("DataSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeUri {
            get {
                return this.TypeUriField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeUriField, value) != true)) {
                    this.TypeUriField = value;
                    this.RaisePropertyChanged("TypeUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBRelationship", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities")]
    [System.SerializableAttribute()]
    public partial class DBRelationship : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DataSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.ServiceAccess.RepositoryService.RepositoryLinkDirection DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject TargetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeBeginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeURIField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DataSourceID {
            get {
                return this.DataSourceIDField;
            }
            set {
                if ((this.DataSourceIDField.Equals(value) != true)) {
                    this.DataSourceIDField = value;
                    this.RaisePropertyChanged("DataSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.ServiceAccess.RepositoryService.RepositoryLinkDirection Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject Target {
            get {
                return this.TargetField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetField, value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimeBegin {
            get {
                return this.TimeBeginField;
            }
            set {
                if ((this.TimeBeginField.Equals(value) != true)) {
                    this.TimeBeginField = value;
                    this.RaisePropertyChanged("TimeBegin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimeEnd {
            get {
                return this.TimeEndField;
            }
            set {
                if ((this.TimeEndField.Equals(value) != true)) {
                    this.TimeEndField = value;
                    this.RaisePropertyChanged("TimeEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeURI {
            get {
                return this.TypeURIField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeURIField, value) != true)) {
                    this.TypeURIField = value;
                    this.RaisePropertyChanged("TypeURI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RepositoryLinkDirection", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities")]
    public enum RepositoryLinkDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceToTarget = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TargetToSource = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bidirectional = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBMedia", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities")]
    [System.SerializableAttribute()]
    public partial class DBMedia : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DataSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URIField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DataSourceID {
            get {
                return this.DataSourceIDField;
            }
            set {
                if ((this.DataSourceIDField.Equals(value) != true)) {
                    this.DataSourceIDField = value;
                    this.RaisePropertyChanged("DataSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ObjectId {
            get {
                return this.ObjectIdField;
            }
            set {
                if ((this.ObjectIdField.Equals(value) != true)) {
                    this.ObjectIdField = value;
                    this.RaisePropertyChanged("ObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URI {
            get {
                return this.URIField;
            }
            set {
                if ((object.ReferenceEquals(this.URIField, value) != true)) {
                    this.URIField = value;
                    this.RaisePropertyChanged("URI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBAddedConcepts", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities")]
    [System.SerializableAttribute()]
    public partial class DBAddedConcepts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[] AddedMediaListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject[] AddedObjectListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] AddedPropertyListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] AddedRelationshipListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[] AddedMediaList {
            get {
                return this.AddedMediaListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedMediaListField, value) != true)) {
                    this.AddedMediaListField = value;
                    this.RaisePropertyChanged("AddedMediaList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject[] AddedObjectList {
            get {
                return this.AddedObjectListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedObjectListField, value) != true)) {
                    this.AddedObjectListField = value;
                    this.RaisePropertyChanged("AddedObjectList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] AddedPropertyList {
            get {
                return this.AddedPropertyListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedPropertyListField, value) != true)) {
                    this.AddedPropertyListField = value;
                    this.RaisePropertyChanged("AddedPropertyList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] AddedRelationshipList {
            get {
                return this.AddedRelationshipListField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedRelationshipListField, value) != true)) {
                    this.AddedRelationshipListField = value;
                    this.RaisePropertyChanged("AddedRelationshipList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBModifiedConcepts", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities")]
    [System.SerializableAttribute()]
    public partial class DBModifiedConcepts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] DeletedMediaIDListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.ServiceAccess.RepositoryService.DBModifiedProperty[] ModifiedPropertyListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] DeletedMediaIDList {
            get {
                return this.DeletedMediaIDListField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletedMediaIDListField, value) != true)) {
                    this.DeletedMediaIDListField = value;
                    this.RaisePropertyChanged("DeletedMediaIDList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBModifiedProperty[] ModifiedPropertyList {
            get {
                return this.ModifiedPropertyListField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedPropertyListField, value) != true)) {
                    this.ModifiedPropertyListField = value;
                    this.RaisePropertyChanged("ModifiedPropertyList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBModifiedProperty", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities")]
    [System.SerializableAttribute()]
    public partial class DBModifiedProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewValue {
            get {
                return this.NewValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NewValueField, value) != true)) {
                    this.NewValueField = value;
                    this.RaisePropertyChanged("NewValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBResolvedObject", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities.Publish")]
    [System.SerializableAttribute()]
    public partial class DBResolvedObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.ServiceAccess.RepositoryService.DBMatchedProperty[] MatchedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ResolutionMasterObjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] ResolvedObjectIDsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBMatchedProperty[] MatchedProperties {
            get {
                return this.MatchedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchedPropertiesField, value) != true)) {
                    this.MatchedPropertiesField = value;
                    this.RaisePropertyChanged("MatchedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ResolutionMasterObjectID {
            get {
                return this.ResolutionMasterObjectIDField;
            }
            set {
                if ((this.ResolutionMasterObjectIDField.Equals(value) != true)) {
                    this.ResolutionMasterObjectIDField = value;
                    this.RaisePropertyChanged("ResolutionMasterObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] ResolvedObjectIDs {
            get {
                return this.ResolvedObjectIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolvedObjectIDsField, value) != true)) {
                    this.ResolvedObjectIDsField = value;
                    this.RaisePropertyChanged("ResolvedObjectIDs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBMatchedProperty", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities.Publish")]
    [System.SerializableAttribute()]
    public partial class DBMatchedProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeUri {
            get {
                return this.TypeUriField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeUriField, value) != true)) {
                    this.TypeUriField = value;
                    this.RaisePropertyChanged("TypeUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBGraphArrangement", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities")]
    [System.SerializableAttribute()]
    public partial class DBGraphArrangement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DataSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] GraphArrangementXMLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] GraphImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DataSourceID {
            get {
                return this.DataSourceIDField;
            }
            set {
                if ((this.DataSourceIDField.Equals(value) != true)) {
                    this.DataSourceIDField = value;
                    this.RaisePropertyChanged("DataSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] GraphArrangementXML {
            get {
                return this.GraphArrangementXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.GraphArrangementXMLField, value) != true)) {
                    this.GraphArrangementXMLField = value;
                    this.RaisePropertyChanged("GraphArrangementXML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] GraphImage {
            get {
                return this.GraphImageField;
            }
            set {
                if ((object.ReferenceEquals(this.GraphImageField, value) != true)) {
                    this.GraphImageField = value;
                    this.RaisePropertyChanged("GraphImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodesCount {
            get {
                return this.NodesCountField;
            }
            set {
                if ((this.NodesCountField.Equals(value) != true)) {
                    this.NodesCountField = value;
                    this.RaisePropertyChanged("NodesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeCreated {
            get {
                return this.TimeCreatedField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeCreatedField, value) != true)) {
                    this.TimeCreatedField = value;
                    this.RaisePropertyChanged("TimeCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConceptType", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities")]
    public enum ConceptType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Property = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Relationship = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Media = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Object = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBDataSourceACL", Namespace="http://schemas.datacontract.org/2004/07/GPAS.RepositoryServer.Entities")]
    [System.SerializableAttribute()]
    public partial class DBDataSourceACL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.AccessControl.ACL AclField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.AccessControl.ACL Acl {
            get {
                return this.AclField;
            }
            set {
                if ((object.ReferenceEquals(this.AclField, value) != true)) {
                    this.AclField = value;
                    this.RaisePropertyChanged("Acl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RepositoryService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetObjects", ReplyAction="http://tempuri.org/IService/GetObjectsResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject[] GetObjects(long[] dbObjectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetObjects", ReplyAction="http://tempuri.org/IService/GetObjectsResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject[]> GetObjectsAsync(long[] dbObjectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveObjectsSequentialByIDRange", ReplyAction="http://tempuri.org/IService/RetrieveObjectsSequentialByIDRangeResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject[] RetrieveObjectsSequentialByIDRange(long firstID, long lastID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveObjectsSequentialByIDRange", ReplyAction="http://tempuri.org/IService/RetrieveObjectsSequentialByIDRangeResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject[]> RetrieveObjectsSequentialByIDRangeAsync(long firstID, long lastID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPropertiesOfObject", ReplyAction="http://tempuri.org/IService/GetPropertiesOfObjectResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] GetPropertiesOfObject(GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject dbObject, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPropertiesOfObject", ReplyAction="http://tempuri.org/IService/GetPropertiesOfObjectResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[]> GetPropertiesOfObjectAsync(GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject dbObject, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPropertiesOfObjectsWithoutAuthorization", ReplyAction="http://tempuri.org/IService/GetPropertiesOfObjectsWithoutAuthorizationResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] GetPropertiesOfObjectsWithoutAuthorization(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPropertiesOfObjectsWithoutAuthorization", ReplyAction="http://tempuri.org/IService/GetPropertiesOfObjectsWithoutAuthorizationResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[]> GetPropertiesOfObjectsWithoutAuthorizationAsync(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPropertiesOfObjects", ReplyAction="http://tempuri.org/IService/GetPropertiesOfObjectsResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] GetPropertiesOfObjects(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPropertiesOfObjects", ReplyAction="http://tempuri.org/IService/GetPropertiesOfObjectsResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[]> GetPropertiesOfObjectsAsync(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypes", ReplyAction="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypesResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] GetSpecifiedPropertiesOfObjectsByTypes(long[] objectsId, string[] propertiesType, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypes", ReplyAction="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypesResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[]> GetSpecifiedPropertiesOfObjectsByTypesAsync(long[] objectsId, string[] propertiesType, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypeAndValue", ReplyAction="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypeAndValueResponse" +
            "")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] GetSpecifiedPropertiesOfObjectsByTypeAndValue(long[] objectIDs, string propertyTypeUri, string propertyValue, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypeAndValue", ReplyAction="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypeAndValueResponse" +
            "")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[]> GetSpecifiedPropertiesOfObjectsByTypeAndValueAsync(long[] objectIDs, string propertyTypeUri, string propertyValue, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPropertiesByID", ReplyAction="http://tempuri.org/IService/GetPropertiesByIDResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] GetPropertiesByID(long[] dbPropertyIDs, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPropertiesByID", ReplyAction="http://tempuri.org/IService/GetPropertiesByIDResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[]> GetPropertiesByIDAsync(long[] dbPropertyIDs, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationships", ReplyAction="http://tempuri.org/IService/GetRelationshipsResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] GetRelationships(long[] dbRelationshipIDs, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationships", ReplyAction="http://tempuri.org/IService/GetRelationshipsResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> GetRelationshipsAsync(long[] dbRelationshipIDs, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveRelationships", ReplyAction="http://tempuri.org/IService/RetrieveRelationshipsResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] RetrieveRelationships(long[] dbRelationshipIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveRelationships", ReplyAction="http://tempuri.org/IService/RetrieveRelationshipsResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> RetrieveRelationshipsAsync(long[] dbRelationshipIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveRelationshipsSequentialByIDRange", ReplyAction="http://tempuri.org/IService/RetrieveRelationshipsSequentialByIDRangeResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] RetrieveRelationshipsSequentialByIDRange(long firstID, long lastID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveRelationshipsSequentialByIDRange", ReplyAction="http://tempuri.org/IService/RetrieveRelationshipsSequentialByIDRangeResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> RetrieveRelationshipsSequentialByIDRangeAsync(long firstID, long lastID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSourceLink", ReplyAction="http://tempuri.org/IService/GetSourceLinkResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] GetSourceLink(GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject dbObject, string typeURI, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSourceLink", ReplyAction="http://tempuri.org/IService/GetSourceLinkResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> GetSourceLinkAsync(GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject dbObject, string typeURI, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceObject", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceObjectResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] GetRelationshipsBySourceObject(long objectID, string typeURI, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceObject", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceObjectResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> GetRelationshipsBySourceObjectAsync(long objectID, string typeURI, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObject", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObjectResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] GetRelationshipsBySourceOrTargetObject(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObject", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObjectResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> GetRelationshipsBySourceOrTargetObjectAsync(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceObjectWithoutAuthParams", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceObjectWithoutAuthParamsRespon" +
            "se")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] GetRelationshipsBySourceObjectWithoutAuthParams(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceObjectWithoutAuthParams", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceObjectWithoutAuthParamsRespon" +
            "se")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> GetRelationshipsBySourceObjectWithoutAuthParamsAsync(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObjectWithoutAuthPara" +
            "ms", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObjectWithoutAuthPara" +
            "msResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] GetRelationshipsBySourceOrTargetObjectWithoutAuthParams(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObjectWithoutAuthPara" +
            "ms", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObjectWithoutAuthPara" +
            "msResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> GetRelationshipsBySourceOrTargetObjectWithoutAuthParamsAsync(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetExistingRelationship", ReplyAction="http://tempuri.org/IService/GetExistingRelationshipResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship GetExistingRelationship(string typeURI, long source, long target, GPAS.Dispatch.ServiceAccess.RepositoryService.RepositoryLinkDirection direction, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetExistingRelationship", ReplyAction="http://tempuri.org/IService/GetExistingRelationshipResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship> GetExistingRelationshipAsync(string typeURI, long source, long target, GPAS.Dispatch.ServiceAccess.RepositoryService.RepositoryLinkDirection direction, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMediaForObject", ReplyAction="http://tempuri.org/IService/GetMediaForObjectResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[] GetMediaForObject(long objectID, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMediaForObject", ReplyAction="http://tempuri.org/IService/GetMediaForObjectResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[]> GetMediaForObjectAsync(long objectID, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMediasForObjectsWithoutAuthorization", ReplyAction="http://tempuri.org/IService/GetMediasForObjectsWithoutAuthorizationResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[] GetMediasForObjectsWithoutAuthorization(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMediasForObjectsWithoutAuthorization", ReplyAction="http://tempuri.org/IService/GetMediasForObjectsWithoutAuthorizationResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[]> GetMediasForObjectsWithoutAuthorizationAsync(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMediasForObjects", ReplyAction="http://tempuri.org/IService/GetMediasForObjectsResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[] GetMediasForObjects(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMediasForObjects", ReplyAction="http://tempuri.org/IService/GetMediasForObjectsResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[]> GetMediasForObjectsAsync(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Publish", ReplyAction="http://tempuri.org/IService/PublishResponse")]
        void Publish(GPAS.Dispatch.ServiceAccess.RepositoryService.DBAddedConcepts addedConcept, GPAS.Dispatch.ServiceAccess.RepositoryService.DBModifiedConcepts modifiedConcept, GPAS.Dispatch.ServiceAccess.RepositoryService.DBResolvedObject[] resolvedObjects, long dataSourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Publish", ReplyAction="http://tempuri.org/IService/PublishResponse")]
        System.Threading.Tasks.Task PublishAsync(GPAS.Dispatch.ServiceAccess.RepositoryService.DBAddedConcepts addedConcept, GPAS.Dispatch.ServiceAccess.RepositoryService.DBModifiedConcepts modifiedConcept, GPAS.Dispatch.ServiceAccess.RepositoryService.DBResolvedObject[] resolvedObjects, long dataSourceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateNewGraphArrangment", ReplyAction="http://tempuri.org/IService/CreateNewGraphArrangmentResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBGraphArrangement CreateNewGraphArrangment(GPAS.Dispatch.ServiceAccess.RepositoryService.DBGraphArrangement dbGraphArrangement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateNewGraphArrangment", ReplyAction="http://tempuri.org/IService/CreateNewGraphArrangmentResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBGraphArrangement> CreateNewGraphArrangmentAsync(GPAS.Dispatch.ServiceAccess.RepositoryService.DBGraphArrangement dbGraphArrangement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGraphArrangements", ReplyAction="http://tempuri.org/IService/GetGraphArrangementsResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBGraphArrangement[] GetGraphArrangements(GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGraphArrangements", ReplyAction="http://tempuri.org/IService/GetGraphArrangementsResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBGraphArrangement[]> GetGraphArrangementsAsync(GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGraphImage", ReplyAction="http://tempuri.org/IService/GetGraphImageResponse")]
        byte[] GetGraphImage(int dbGraphArrangementID, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGraphImage", ReplyAction="http://tempuri.org/IService/GetGraphImageResponse")]
        System.Threading.Tasks.Task<byte[]> GetGraphImageAsync(int dbGraphArrangementID, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGraphArrangementXML", ReplyAction="http://tempuri.org/IService/GetGraphArrangementXMLResponse")]
        byte[] GetGraphArrangementXML(int dbGraphArrangementID, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGraphArrangementXML", ReplyAction="http://tempuri.org/IService/GetGraphArrangementXMLResponse")]
        System.Threading.Tasks.Task<byte[]> GetGraphArrangementXMLAsync(int dbGraphArrangementID, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteGraph", ReplyAction="http://tempuri.org/IService/DeleteGraphResponse")]
        bool DeleteGraph(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteGraph", ReplyAction="http://tempuri.org/IService/DeleteGraphResponse")]
        System.Threading.Tasks.Task<bool> DeleteGraphAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedObjectId", ReplyAction="http://tempuri.org/IService/GetLastAsignedObjectIdResponse")]
        long GetLastAsignedObjectId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedObjectId", ReplyAction="http://tempuri.org/IService/GetLastAsignedObjectIdResponse")]
        System.Threading.Tasks.Task<long> GetLastAsignedObjectIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedPropertyId", ReplyAction="http://tempuri.org/IService/GetLastAsignedPropertyIdResponse")]
        long GetLastAsignedPropertyId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedPropertyId", ReplyAction="http://tempuri.org/IService/GetLastAsignedPropertyIdResponse")]
        System.Threading.Tasks.Task<long> GetLastAsignedPropertyIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedRelationshipId", ReplyAction="http://tempuri.org/IService/GetLastAsignedRelationshipIdResponse")]
        long GetLastAsignedRelationshipId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedRelationshipId", ReplyAction="http://tempuri.org/IService/GetLastAsignedRelationshipIdResponse")]
        System.Threading.Tasks.Task<long> GetLastAsignedRelationshipIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedMediaId", ReplyAction="http://tempuri.org/IService/GetLastAsignedMediaIdResponse")]
        long GetLastAsignedMediaId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedMediaId", ReplyAction="http://tempuri.org/IService/GetLastAsignedMediaIdResponse")]
        System.Threading.Tasks.Task<long> GetLastAsignedMediaIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedGraphId", ReplyAction="http://tempuri.org/IService/GetLastAsignedGraphIdResponse")]
        long GetLastAsignedGraphId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedGraphId", ReplyAction="http://tempuri.org/IService/GetLastAsignedGraphIdResponse")]
        System.Threading.Tasks.Task<long> GetLastAsignedGraphIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedDataSourceId", ReplyAction="http://tempuri.org/IService/GetLastAsignedDataSourceIdResponse")]
        long GetLastAsignedDataSourceId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedDataSourceId", ReplyAction="http://tempuri.org/IService/GetLastAsignedDataSourceIdResponse")]
        System.Threading.Tasks.Task<long> GetLastAsignedDataSourceIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Optimize", ReplyAction="http://tempuri.org/IService/OptimizeResponse")]
        void Optimize();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Optimize", ReplyAction="http://tempuri.org/IService/OptimizeResponse")]
        System.Threading.Tasks.Task OptimizeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TruncateDatabase", ReplyAction="http://tempuri.org/IService/TruncateDatabaseResponse")]
        void TruncateDatabase();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/TruncateDatabase", ReplyAction="http://tempuri.org/IService/TruncateDatabaseResponse")]
        System.Threading.Tasks.Task TruncateDatabaseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterNewDataSource", ReplyAction="http://tempuri.org/IService/RegisterNewDataSourceResponse")]
        void RegisterNewDataSource(long dsId, string name, GPAS.AccessControl.DataSourceType type, GPAS.AccessControl.ACL acl, string description, string createBy, string createdTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterNewDataSource", ReplyAction="http://tempuri.org/IService/RegisterNewDataSourceResponse")]
        System.Threading.Tasks.Task RegisterNewDataSourceAsync(long dsId, string name, GPAS.AccessControl.DataSourceType type, GPAS.AccessControl.ACL acl, string description, string createBy, string createdTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSubsetOfConceptsByPermission", ReplyAction="http://tempuri.org/IService/GetSubsetOfConceptsByPermissionResponse")]
        long[] GetSubsetOfConceptsByPermission(GPAS.Dispatch.ServiceAccess.RepositoryService.ConceptType conceptType, long[] IDs, string[] groupNames, GPAS.AccessControl.Permission minimumPermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSubsetOfConceptsByPermission", ReplyAction="http://tempuri.org/IService/GetSubsetOfConceptsByPermissionResponse")]
        System.Threading.Tasks.Task<long[]> GetSubsetOfConceptsByPermissionAsync(GPAS.Dispatch.ServiceAccess.RepositoryService.ConceptType conceptType, long[] IDs, string[] groupNames, GPAS.AccessControl.Permission minimumPermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveDataSourceACLs", ReplyAction="http://tempuri.org/IService/RetrieveDataSourceACLsResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBDataSourceACL[] RetrieveDataSourceACLs(long[] DataSourceIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveDataSourceACLs", ReplyAction="http://tempuri.org/IService/RetrieveDataSourceACLsResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBDataSourceACL[]> RetrieveDataSourceACLsAsync(long[] DataSourceIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveTopNDataSourceACLs", ReplyAction="http://tempuri.org/IService/RetrieveTopNDataSourceACLsResponse")]
        GPAS.Dispatch.ServiceAccess.RepositoryService.DBDataSourceACL[] RetrieveTopNDataSourceACLs(long topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveTopNDataSourceACLs", ReplyAction="http://tempuri.org/IService/RetrieveTopNDataSourceACLsResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBDataSourceACL[]> RetrieveTopNDataSourceACLsAsync(long topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetriveDataSourcesSequentialIDByIDRange", ReplyAction="http://tempuri.org/IService/RetriveDataSourcesSequentialIDByIDRangeResponse")]
        GPAS.AccessControl.DataSourceInfo[] RetriveDataSourcesSequentialIDByIDRange(long firstID, long lastID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetriveDataSourcesSequentialIDByIDRange", ReplyAction="http://tempuri.org/IService/RetriveDataSourcesSequentialIDByIDRangeResponse")]
        System.Threading.Tasks.Task<GPAS.AccessControl.DataSourceInfo[]> RetriveDataSourcesSequentialIDByIDRangeAsync(long firstID, long lastID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataSourcesByIDs", ReplyAction="http://tempuri.org/IService/GetDataSourcesByIDsResponse")]
        GPAS.AccessControl.DataSourceInfo[] GetDataSourcesByIDs(long[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataSourcesByIDs", ReplyAction="http://tempuri.org/IService/GetDataSourcesByIDsResponse")]
        System.Threading.Tasks.Task<GPAS.AccessControl.DataSourceInfo[]> GetDataSourcesByIDsAsync(long[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsAvailable", ReplyAction="http://tempuri.org/IService/IsAvailableResponse")]
        void IsAvailable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsAvailable", ReplyAction="http://tempuri.org/IService/IsAvailableResponse")]
        System.Threading.Tasks.Task IsAvailableAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : GPAS.Dispatch.ServiceAccess.RepositoryService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<GPAS.Dispatch.ServiceAccess.RepositoryService.IService>, GPAS.Dispatch.ServiceAccess.RepositoryService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject[] GetObjects(long[] dbObjectIDs) {
            return base.Channel.GetObjects(dbObjectIDs);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject[]> GetObjectsAsync(long[] dbObjectIDs) {
            return base.Channel.GetObjectsAsync(dbObjectIDs);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject[] RetrieveObjectsSequentialByIDRange(long firstID, long lastID) {
            return base.Channel.RetrieveObjectsSequentialByIDRange(firstID, lastID);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject[]> RetrieveObjectsSequentialByIDRangeAsync(long firstID, long lastID) {
            return base.Channel.RetrieveObjectsSequentialByIDRangeAsync(firstID, lastID);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] GetPropertiesOfObject(GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject dbObject, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetPropertiesOfObject(dbObject, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[]> GetPropertiesOfObjectAsync(GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject dbObject, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetPropertiesOfObjectAsync(dbObject, authParams);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] GetPropertiesOfObjectsWithoutAuthorization(long[] objectIDs) {
            return base.Channel.GetPropertiesOfObjectsWithoutAuthorization(objectIDs);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[]> GetPropertiesOfObjectsWithoutAuthorizationAsync(long[] objectIDs) {
            return base.Channel.GetPropertiesOfObjectsWithoutAuthorizationAsync(objectIDs);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] GetPropertiesOfObjects(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetPropertiesOfObjects(objectIDs, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[]> GetPropertiesOfObjectsAsync(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetPropertiesOfObjectsAsync(objectIDs, authParams);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] GetSpecifiedPropertiesOfObjectsByTypes(long[] objectsId, string[] propertiesType, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetSpecifiedPropertiesOfObjectsByTypes(objectsId, propertiesType, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[]> GetSpecifiedPropertiesOfObjectsByTypesAsync(long[] objectsId, string[] propertiesType, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetSpecifiedPropertiesOfObjectsByTypesAsync(objectsId, propertiesType, authParams);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] GetSpecifiedPropertiesOfObjectsByTypeAndValue(long[] objectIDs, string propertyTypeUri, string propertyValue, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetSpecifiedPropertiesOfObjectsByTypeAndValue(objectIDs, propertyTypeUri, propertyValue, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[]> GetSpecifiedPropertiesOfObjectsByTypeAndValueAsync(long[] objectIDs, string propertyTypeUri, string propertyValue, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetSpecifiedPropertiesOfObjectsByTypeAndValueAsync(objectIDs, propertyTypeUri, propertyValue, authParams);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[] GetPropertiesByID(long[] dbPropertyIDs, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetPropertiesByID(dbPropertyIDs, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBProperty[]> GetPropertiesByIDAsync(long[] dbPropertyIDs, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetPropertiesByIDAsync(dbPropertyIDs, authParams);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] GetRelationships(long[] dbRelationshipIDs, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetRelationships(dbRelationshipIDs, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> GetRelationshipsAsync(long[] dbRelationshipIDs, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetRelationshipsAsync(dbRelationshipIDs, authParams);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] RetrieveRelationships(long[] dbRelationshipIDs) {
            return base.Channel.RetrieveRelationships(dbRelationshipIDs);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> RetrieveRelationshipsAsync(long[] dbRelationshipIDs) {
            return base.Channel.RetrieveRelationshipsAsync(dbRelationshipIDs);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] RetrieveRelationshipsSequentialByIDRange(long firstID, long lastID) {
            return base.Channel.RetrieveRelationshipsSequentialByIDRange(firstID, lastID);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> RetrieveRelationshipsSequentialByIDRangeAsync(long firstID, long lastID) {
            return base.Channel.RetrieveRelationshipsSequentialByIDRangeAsync(firstID, lastID);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] GetSourceLink(GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject dbObject, string typeURI, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetSourceLink(dbObject, typeURI, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> GetSourceLinkAsync(GPAS.Dispatch.ServiceAccess.RepositoryService.DBObject dbObject, string typeURI, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetSourceLinkAsync(dbObject, typeURI, authParams);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] GetRelationshipsBySourceObject(long objectID, string typeURI, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetRelationshipsBySourceObject(objectID, typeURI, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> GetRelationshipsBySourceObjectAsync(long objectID, string typeURI, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetRelationshipsBySourceObjectAsync(objectID, typeURI, authParams);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] GetRelationshipsBySourceOrTargetObject(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetRelationshipsBySourceOrTargetObject(objectIDs, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> GetRelationshipsBySourceOrTargetObjectAsync(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetRelationshipsBySourceOrTargetObjectAsync(objectIDs, authParams);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] GetRelationshipsBySourceObjectWithoutAuthParams(long[] objectIDs) {
            return base.Channel.GetRelationshipsBySourceObjectWithoutAuthParams(objectIDs);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> GetRelationshipsBySourceObjectWithoutAuthParamsAsync(long[] objectIDs) {
            return base.Channel.GetRelationshipsBySourceObjectWithoutAuthParamsAsync(objectIDs);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[] GetRelationshipsBySourceOrTargetObjectWithoutAuthParams(long[] objectIDs) {
            return base.Channel.GetRelationshipsBySourceOrTargetObjectWithoutAuthParams(objectIDs);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship[]> GetRelationshipsBySourceOrTargetObjectWithoutAuthParamsAsync(long[] objectIDs) {
            return base.Channel.GetRelationshipsBySourceOrTargetObjectWithoutAuthParamsAsync(objectIDs);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship GetExistingRelationship(string typeURI, long source, long target, GPAS.Dispatch.ServiceAccess.RepositoryService.RepositoryLinkDirection direction, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetExistingRelationship(typeURI, source, target, direction, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBRelationship> GetExistingRelationshipAsync(string typeURI, long source, long target, GPAS.Dispatch.ServiceAccess.RepositoryService.RepositoryLinkDirection direction, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetExistingRelationshipAsync(typeURI, source, target, direction, authParams);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[] GetMediaForObject(long objectID, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetMediaForObject(objectID, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[]> GetMediaForObjectAsync(long objectID, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetMediaForObjectAsync(objectID, authParams);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[] GetMediasForObjectsWithoutAuthorization(long[] objectIDs) {
            return base.Channel.GetMediasForObjectsWithoutAuthorization(objectIDs);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[]> GetMediasForObjectsWithoutAuthorizationAsync(long[] objectIDs) {
            return base.Channel.GetMediasForObjectsWithoutAuthorizationAsync(objectIDs);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[] GetMediasForObjects(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetMediasForObjects(objectIDs, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBMedia[]> GetMediasForObjectsAsync(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetMediasForObjectsAsync(objectIDs, authParams);
        }
        
        public void Publish(GPAS.Dispatch.ServiceAccess.RepositoryService.DBAddedConcepts addedConcept, GPAS.Dispatch.ServiceAccess.RepositoryService.DBModifiedConcepts modifiedConcept, GPAS.Dispatch.ServiceAccess.RepositoryService.DBResolvedObject[] resolvedObjects, long dataSourceID) {
            base.Channel.Publish(addedConcept, modifiedConcept, resolvedObjects, dataSourceID);
        }
        
        public System.Threading.Tasks.Task PublishAsync(GPAS.Dispatch.ServiceAccess.RepositoryService.DBAddedConcepts addedConcept, GPAS.Dispatch.ServiceAccess.RepositoryService.DBModifiedConcepts modifiedConcept, GPAS.Dispatch.ServiceAccess.RepositoryService.DBResolvedObject[] resolvedObjects, long dataSourceID) {
            return base.Channel.PublishAsync(addedConcept, modifiedConcept, resolvedObjects, dataSourceID);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBGraphArrangement CreateNewGraphArrangment(GPAS.Dispatch.ServiceAccess.RepositoryService.DBGraphArrangement dbGraphArrangement) {
            return base.Channel.CreateNewGraphArrangment(dbGraphArrangement);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBGraphArrangement> CreateNewGraphArrangmentAsync(GPAS.Dispatch.ServiceAccess.RepositoryService.DBGraphArrangement dbGraphArrangement) {
            return base.Channel.CreateNewGraphArrangmentAsync(dbGraphArrangement);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBGraphArrangement[] GetGraphArrangements(GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetGraphArrangements(authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBGraphArrangement[]> GetGraphArrangementsAsync(GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetGraphArrangementsAsync(authParams);
        }
        
        public byte[] GetGraphImage(int dbGraphArrangementID, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetGraphImage(dbGraphArrangementID, authParams);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetGraphImageAsync(int dbGraphArrangementID, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetGraphImageAsync(dbGraphArrangementID, authParams);
        }
        
        public byte[] GetGraphArrangementXML(int dbGraphArrangementID, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetGraphArrangementXML(dbGraphArrangementID, authParams);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetGraphArrangementXMLAsync(int dbGraphArrangementID, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.GetGraphArrangementXMLAsync(dbGraphArrangementID, authParams);
        }
        
        public bool DeleteGraph(int id) {
            return base.Channel.DeleteGraph(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGraphAsync(int id) {
            return base.Channel.DeleteGraphAsync(id);
        }
        
        public long GetLastAsignedObjectId() {
            return base.Channel.GetLastAsignedObjectId();
        }
        
        public System.Threading.Tasks.Task<long> GetLastAsignedObjectIdAsync() {
            return base.Channel.GetLastAsignedObjectIdAsync();
        }
        
        public long GetLastAsignedPropertyId() {
            return base.Channel.GetLastAsignedPropertyId();
        }
        
        public System.Threading.Tasks.Task<long> GetLastAsignedPropertyIdAsync() {
            return base.Channel.GetLastAsignedPropertyIdAsync();
        }
        
        public long GetLastAsignedRelationshipId() {
            return base.Channel.GetLastAsignedRelationshipId();
        }
        
        public System.Threading.Tasks.Task<long> GetLastAsignedRelationshipIdAsync() {
            return base.Channel.GetLastAsignedRelationshipIdAsync();
        }
        
        public long GetLastAsignedMediaId() {
            return base.Channel.GetLastAsignedMediaId();
        }
        
        public System.Threading.Tasks.Task<long> GetLastAsignedMediaIdAsync() {
            return base.Channel.GetLastAsignedMediaIdAsync();
        }
        
        public long GetLastAsignedGraphId() {
            return base.Channel.GetLastAsignedGraphId();
        }
        
        public System.Threading.Tasks.Task<long> GetLastAsignedGraphIdAsync() {
            return base.Channel.GetLastAsignedGraphIdAsync();
        }
        
        public long GetLastAsignedDataSourceId() {
            return base.Channel.GetLastAsignedDataSourceId();
        }
        
        public System.Threading.Tasks.Task<long> GetLastAsignedDataSourceIdAsync() {
            return base.Channel.GetLastAsignedDataSourceIdAsync();
        }
        
        public void Optimize() {
            base.Channel.Optimize();
        }
        
        public System.Threading.Tasks.Task OptimizeAsync() {
            return base.Channel.OptimizeAsync();
        }
        
        public void TruncateDatabase() {
            base.Channel.TruncateDatabase();
        }
        
        public System.Threading.Tasks.Task TruncateDatabaseAsync() {
            return base.Channel.TruncateDatabaseAsync();
        }
        
        public void RegisterNewDataSource(long dsId, string name, GPAS.AccessControl.DataSourceType type, GPAS.AccessControl.ACL acl, string description, string createBy, string createdTime) {
            base.Channel.RegisterNewDataSource(dsId, name, type, acl, description, createBy, createdTime);
        }
        
        public System.Threading.Tasks.Task RegisterNewDataSourceAsync(long dsId, string name, GPAS.AccessControl.DataSourceType type, GPAS.AccessControl.ACL acl, string description, string createBy, string createdTime) {
            return base.Channel.RegisterNewDataSourceAsync(dsId, name, type, acl, description, createBy, createdTime);
        }
        
        public long[] GetSubsetOfConceptsByPermission(GPAS.Dispatch.ServiceAccess.RepositoryService.ConceptType conceptType, long[] IDs, string[] groupNames, GPAS.AccessControl.Permission minimumPermission) {
            return base.Channel.GetSubsetOfConceptsByPermission(conceptType, IDs, groupNames, minimumPermission);
        }
        
        public System.Threading.Tasks.Task<long[]> GetSubsetOfConceptsByPermissionAsync(GPAS.Dispatch.ServiceAccess.RepositoryService.ConceptType conceptType, long[] IDs, string[] groupNames, GPAS.AccessControl.Permission minimumPermission) {
            return base.Channel.GetSubsetOfConceptsByPermissionAsync(conceptType, IDs, groupNames, minimumPermission);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBDataSourceACL[] RetrieveDataSourceACLs(long[] DataSourceIDs) {
            return base.Channel.RetrieveDataSourceACLs(DataSourceIDs);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBDataSourceACL[]> RetrieveDataSourceACLsAsync(long[] DataSourceIDs) {
            return base.Channel.RetrieveDataSourceACLsAsync(DataSourceIDs);
        }
        
        public GPAS.Dispatch.ServiceAccess.RepositoryService.DBDataSourceACL[] RetrieveTopNDataSourceACLs(long topN) {
            return base.Channel.RetrieveTopNDataSourceACLs(topN);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.RepositoryService.DBDataSourceACL[]> RetrieveTopNDataSourceACLsAsync(long topN) {
            return base.Channel.RetrieveTopNDataSourceACLsAsync(topN);
        }
        
        public GPAS.AccessControl.DataSourceInfo[] RetriveDataSourcesSequentialIDByIDRange(long firstID, long lastID) {
            return base.Channel.RetriveDataSourcesSequentialIDByIDRange(firstID, lastID);
        }
        
        public System.Threading.Tasks.Task<GPAS.AccessControl.DataSourceInfo[]> RetriveDataSourcesSequentialIDByIDRangeAsync(long firstID, long lastID) {
            return base.Channel.RetriveDataSourcesSequentialIDByIDRangeAsync(firstID, lastID);
        }
        
        public GPAS.AccessControl.DataSourceInfo[] GetDataSourcesByIDs(long[] ids) {
            return base.Channel.GetDataSourcesByIDs(ids);
        }
        
        public System.Threading.Tasks.Task<GPAS.AccessControl.DataSourceInfo[]> GetDataSourcesByIDsAsync(long[] ids) {
            return base.Channel.GetDataSourcesByIDsAsync(ids);
        }
        
        public void IsAvailable() {
            base.Channel.IsAvailable();
        }
        
        public System.Threading.Tasks.Task IsAvailableAsync() {
            return base.Channel.IsAvailableAsync();
        }
    }
}
