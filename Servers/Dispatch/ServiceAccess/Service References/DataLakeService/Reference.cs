//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GPAS.Dispatch.ServiceAccess.DataLakeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Service/", ConfigurationName="DataLakeService.DatalakeOperation")]
    public interface DatalakeOperation {
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/IsListenProcessorExistRequest", ReplyAction="http://Service/DatalakeOperation/IsListenProcessorExistResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistResponse IsListenProcessorExist(GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/IsListenProcessorExistRequest", ReplyAction="http://Service/DatalakeOperation/IsListenProcessorExistResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistResponse> IsListenProcessorExistAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistRequest request);
        
        // CODEGEN: Parameter 'arg0' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/StartStreamingIngestionRequest", ReplyAction="http://Service/DatalakeOperation/StartStreamingIngestionResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionResponse StartStreamingIngestion(GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/StartStreamingIngestionRequest", ReplyAction="http://Service/DatalakeOperation/StartStreamingIngestionResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionResponse> StartStreamingIngestionAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionRequest request);
        
        // CODEGEN: Parameter 'arg0' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/StopStreamingIngestionRequest", ReplyAction="http://Service/DatalakeOperation/StopStreamingIngestionResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionResponse StopStreamingIngestion(GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/StopStreamingIngestionRequest", ReplyAction="http://Service/DatalakeOperation/StopStreamingIngestionResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionResponse> StopStreamingIngestionAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/GetDatalakeCategoriesRequest", ReplyAction="http://Service/DatalakeOperation/GetDatalakeCategoriesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesResponse GetDatalakeCategories(GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/GetDatalakeCategoriesRequest", ReplyAction="http://Service/DatalakeOperation/GetDatalakeCategoriesResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesResponse> GetDatalakeCategoriesAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/GetStreamJobsStatusRequest", ReplyAction="http://Service/DatalakeOperation/GetStreamJobsStatusResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusResponse GetStreamJobsStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/GetStreamJobsStatusRequest", ReplyAction="http://Service/DatalakeOperation/GetStreamJobsStatusResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusResponse> GetStreamJobsStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/GetPreviewDataRequest", ReplyAction="http://Service/DatalakeOperation/GetPreviewDataResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataResponse GetPreviewData(GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/GetPreviewDataRequest", ReplyAction="http://Service/DatalakeOperation/GetPreviewDataResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataResponse> GetPreviewDataAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataRequest request);
        
        // CODEGEN: Parameter 'arg0' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/InsertFileIngestionJobStatusRequest", ReplyAction="http://Service/DatalakeOperation/InsertFileIngestionJobStatusResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusResponse InsertFileIngestionJobStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/InsertFileIngestionJobStatusRequest", ReplyAction="http://Service/DatalakeOperation/InsertFileIngestionJobStatusResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusResponse> InsertFileIngestionJobStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusRequest request);
        
        // CODEGEN: Parameter 'arg0' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/InsertStreamIngestionStartStatusRequest", ReplyAction="http://Service/DatalakeOperation/InsertStreamIngestionStartStatusResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusResponse InsertStreamIngestionStartStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/InsertStreamIngestionStartStatusRequest", ReplyAction="http://Service/DatalakeOperation/InsertStreamIngestionStartStatusResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusResponse> InsertStreamIngestionStartStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusRequest request);
        
        // CODEGEN: Parameter 'arg0' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/InsertStreamIngestionStopStatusRequest", ReplyAction="http://Service/DatalakeOperation/InsertStreamIngestionStopStatusResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusResponse InsertStreamIngestionStopStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/InsertStreamIngestionStopStatusRequest", ReplyAction="http://Service/DatalakeOperation/InsertStreamIngestionStopStatusResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusResponse> InsertStreamIngestionStopStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/GetHeadersRequest", ReplyAction="http://Service/DatalakeOperation/GetHeadersResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersResponse GetHeaders(GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/GetHeadersRequest", ReplyAction="http://Service/DatalakeOperation/GetHeadersResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersResponse> GetHeadersAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/GetJobsStatusRequest", ReplyAction="http://Service/DatalakeOperation/GetJobsStatusResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusResponse GetJobsStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/GetJobsStatusRequest", ReplyAction="http://Service/DatalakeOperation/GetJobsStatusResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusResponse> GetJobsStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusRequest request);
        
        // CODEGEN: Parameter 'return' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/GetDatalakeSliceRequest", ReplyAction="http://Service/DatalakeOperation/GetDatalakeSliceResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceResponse GetDatalakeSlice(GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/GetDatalakeSliceRequest", ReplyAction="http://Service/DatalakeOperation/GetDatalakeSliceResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceResponse> GetDatalakeSliceAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/testRequest", ReplyAction="http://Service/DatalakeOperation/testResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Service/DatalakeOperation/testRequest", ReplyAction="http://Service/DatalakeOperation/testResponse")]
        System.Threading.Tasks.Task testAsync();
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Service/")]
    public partial class streamingIngestion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string categoryField;
        
        private string inputPortNumberField;
        
        private string headersField;
        
        private string dataFlowDateTimeField;
        
        private string startTimeField;
        
        private string separatorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
                this.RaisePropertyChanged("Category");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string InputPortNumber {
            get {
                return this.inputPortNumberField;
            }
            set {
                this.inputPortNumberField = value;
                this.RaisePropertyChanged("InputPortNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string Headers {
            get {
                return this.headersField;
            }
            set {
                this.headersField = value;
                this.RaisePropertyChanged("Headers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string dataFlowDateTime {
            get {
                return this.dataFlowDateTimeField;
            }
            set {
                this.dataFlowDateTimeField = value;
                this.RaisePropertyChanged("dataFlowDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string startTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
                this.RaisePropertyChanged("startTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string Separator {
            get {
                return this.separatorField;
            }
            set {
                this.separatorField = value;
                this.RaisePropertyChanged("Separator");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Service/")]
    public partial class searchCriteria : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string typeField;
        
        private string valueField;
        
        private string comparatorField;
        
        private string criteriaDataTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string Comparator {
            get {
                return this.comparatorField;
            }
            set {
                this.comparatorField = value;
                this.RaisePropertyChanged("Comparator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string CriteriaDataType {
            get {
                return this.criteriaDataTypeField;
            }
            set {
                this.criteriaDataTypeField = value;
                this.RaisePropertyChanged("CriteriaDataType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Service/")]
    public partial class datalakeQuery : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string categoryField;
        
        private string dateTimeField;
        
        private searchCriteria[] searchCriteriasField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
                this.RaisePropertyChanged("Category");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string DateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
                this.RaisePropertyChanged("DateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SearchCriterias", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true, Order=2)]
        public searchCriteria[] SearchCriterias {
            get {
                return this.searchCriteriasField;
            }
            set {
                this.searchCriteriasField = value;
                this.RaisePropertyChanged("SearchCriterias");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Service/")]
    public partial class ingestionFile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string categoryField;
        
        private string dataFlowDateTimeField;
        
        private string filePathField;
        
        private string fileSeparatorField;
        
        private string headersField;
        
        private string timeBeginField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
                this.RaisePropertyChanged("Category");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=2)]
        public string DataFlowDateTime {
            get {
                return this.dataFlowDateTimeField;
            }
            set {
                this.dataFlowDateTimeField = value;
                this.RaisePropertyChanged("DataFlowDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=3)]
        public string FilePath {
            get {
                return this.filePathField;
            }
            set {
                this.filePathField = value;
                this.RaisePropertyChanged("FilePath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=4)]
        public string FileSeparator {
            get {
                return this.fileSeparatorField;
            }
            set {
                this.fileSeparatorField = value;
                this.RaisePropertyChanged("FileSeparator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=5)]
        public string Headers {
            get {
                return this.headersField;
            }
            set {
                this.headersField = value;
                this.RaisePropertyChanged("Headers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=6)]
        public string TimeBegin {
            get {
                return this.timeBeginField;
            }
            set {
                this.timeBeginField = value;
                this.RaisePropertyChanged("TimeBegin");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsListenProcessorExist", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class IsListenProcessorExistRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0;
        
        public IsListenProcessorExistRequest() {
        }
        
        public IsListenProcessorExistRequest(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            this.arg0 = arg0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsListenProcessorExistResponse", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class IsListenProcessorExistResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool @return;
        
        public IsListenProcessorExistResponse() {
        }
        
        public IsListenProcessorExistResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartStreamingIngestion", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class StartStreamingIngestionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0;
        
        public StartStreamingIngestionRequest() {
        }
        
        public StartStreamingIngestionRequest(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            this.arg0 = arg0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartStreamingIngestionResponse", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class StartStreamingIngestionResponse {
        
        public StartStreamingIngestionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StopStreamingIngestion", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class StopStreamingIngestionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0;
        
        public StopStreamingIngestionRequest() {
        }
        
        public StopStreamingIngestionRequest(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            this.arg0 = arg0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StopStreamingIngestionResponse", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class StopStreamingIngestionResponse {
        
        public StopStreamingIngestionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDatalakeCategories", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class GetDatalakeCategoriesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
        
        public GetDatalakeCategoriesRequest() {
        }
        
        public GetDatalakeCategoriesRequest(string arg0) {
            this.arg0 = arg0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDatalakeCategoriesResponse", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class GetDatalakeCategoriesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] @return;
        
        public GetDatalakeCategoriesResponse() {
        }
        
        public GetDatalakeCategoriesResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStreamJobsStatus", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class GetStreamJobsStatusRequest {
        
        public GetStreamJobsStatusRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStreamJobsStatusResponse", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class GetStreamJobsStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] @return;
        
        public GetStreamJobsStatusResponse() {
        }
        
        public GetStreamJobsStatusResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPreviewData", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class GetPreviewDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1;
        
        public GetPreviewDataRequest() {
        }
        
        public GetPreviewDataRequest(string arg0, string arg1) {
            this.arg0 = arg0;
            this.arg1 = arg1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPreviewDataResponse", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class GetPreviewDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] @return;
        
        public GetPreviewDataResponse() {
        }
        
        public GetPreviewDataResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertFileIngestionJobStatus", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class InsertFileIngestionJobStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GPAS.Dispatch.ServiceAccess.DataLakeService.ingestionFile arg0;
        
        public InsertFileIngestionJobStatusRequest() {
        }
        
        public InsertFileIngestionJobStatusRequest(GPAS.Dispatch.ServiceAccess.DataLakeService.ingestionFile arg0) {
            this.arg0 = arg0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertFileIngestionJobStatusResponse", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class InsertFileIngestionJobStatusResponse {
        
        public InsertFileIngestionJobStatusResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertStreamIngestionStartStatus", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class InsertStreamIngestionStartStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0;
        
        public InsertStreamIngestionStartStatusRequest() {
        }
        
        public InsertStreamIngestionStartStatusRequest(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            this.arg0 = arg0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertStreamIngestionStartStatusResponse", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class InsertStreamIngestionStartStatusResponse {
        
        public InsertStreamIngestionStartStatusResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertStreamIngestionStopStatus", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class InsertStreamIngestionStopStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0;
        
        public InsertStreamIngestionStopStatusRequest() {
        }
        
        public InsertStreamIngestionStopStatusRequest(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            this.arg0 = arg0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="InsertStreamIngestionStopStatusResponse", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class InsertStreamIngestionStopStatusResponse {
        
        public InsertStreamIngestionStopStatusResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHeaders", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class GetHeadersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg0;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string arg1;
        
        public GetHeadersRequest() {
        }
        
        public GetHeadersRequest(string arg0, string arg1) {
            this.arg0 = arg0;
            this.arg1 = arg1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHeadersResponse", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class GetHeadersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] @return;
        
        public GetHeadersResponse() {
        }
        
        public GetHeadersResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetJobsStatus", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class GetJobsStatusRequest {
        
        public GetJobsStatusRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetJobsStatusResponse", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class GetJobsStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] @return;
        
        public GetJobsStatusResponse() {
        }
        
        public GetJobsStatusResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDatalakeSlice", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class GetDatalakeSliceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GPAS.Dispatch.ServiceAccess.DataLakeService.datalakeQuery arg0;
        
        public GetDatalakeSliceRequest() {
        }
        
        public GetDatalakeSliceRequest(GPAS.Dispatch.ServiceAccess.DataLakeService.datalakeQuery arg0) {
            this.arg0 = arg0;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDatalakeSliceResponse", WrapperNamespace="http://Service/", IsWrapped=true)]
    public partial class GetDatalakeSliceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://Service/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string @return;
        
        public GetDatalakeSliceResponse() {
        }
        
        public GetDatalakeSliceResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DatalakeOperationChannel : GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatalakeOperationClient : System.ServiceModel.ClientBase<GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation>, GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation {
        
        public DatalakeOperationClient() {
        }
        
        public DatalakeOperationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatalakeOperationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatalakeOperationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatalakeOperationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistResponse GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.IsListenProcessorExist(GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistRequest request) {
            return base.Channel.IsListenProcessorExist(request);
        }
        
        public bool IsListenProcessorExist(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistRequest();
            inValue.arg0 = arg0;
            GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistResponse retVal = ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).IsListenProcessorExist(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistResponse> GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.IsListenProcessorExistAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistRequest request) {
            return base.Channel.IsListenProcessorExistAsync(request);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistResponse> IsListenProcessorExistAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.IsListenProcessorExistRequest();
            inValue.arg0 = arg0;
            return ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).IsListenProcessorExistAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionResponse GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.StartStreamingIngestion(GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionRequest request) {
            return base.Channel.StartStreamingIngestion(request);
        }
        
        public void StartStreamingIngestion(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionRequest();
            inValue.arg0 = arg0;
            GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionResponse retVal = ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).StartStreamingIngestion(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionResponse> GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.StartStreamingIngestionAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionRequest request) {
            return base.Channel.StartStreamingIngestionAsync(request);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionResponse> StartStreamingIngestionAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.StartStreamingIngestionRequest();
            inValue.arg0 = arg0;
            return ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).StartStreamingIngestionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionResponse GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.StopStreamingIngestion(GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionRequest request) {
            return base.Channel.StopStreamingIngestion(request);
        }
        
        public void StopStreamingIngestion(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionRequest();
            inValue.arg0 = arg0;
            GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionResponse retVal = ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).StopStreamingIngestion(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionResponse> GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.StopStreamingIngestionAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionRequest request) {
            return base.Channel.StopStreamingIngestionAsync(request);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionResponse> StopStreamingIngestionAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.StopStreamingIngestionRequest();
            inValue.arg0 = arg0;
            return ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).StopStreamingIngestionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesResponse GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.GetDatalakeCategories(GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesRequest request) {
            return base.Channel.GetDatalakeCategories(request);
        }
        
        public string[] GetDatalakeCategories(string arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesRequest();
            inValue.arg0 = arg0;
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesResponse retVal = ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).GetDatalakeCategories(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesResponse> GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.GetDatalakeCategoriesAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesRequest request) {
            return base.Channel.GetDatalakeCategoriesAsync(request);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesResponse> GetDatalakeCategoriesAsync(string arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeCategoriesRequest();
            inValue.arg0 = arg0;
            return ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).GetDatalakeCategoriesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusResponse GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.GetStreamJobsStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusRequest request) {
            return base.Channel.GetStreamJobsStatus(request);
        }
        
        public string[] GetStreamJobsStatus() {
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusRequest();
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusResponse retVal = ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).GetStreamJobsStatus(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusResponse> GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.GetStreamJobsStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusRequest request) {
            return base.Channel.GetStreamJobsStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusResponse> GetStreamJobsStatusAsync() {
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.GetStreamJobsStatusRequest();
            return ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).GetStreamJobsStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataResponse GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.GetPreviewData(GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataRequest request) {
            return base.Channel.GetPreviewData(request);
        }
        
        public string[] GetPreviewData(string arg0, string arg1) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataRequest();
            inValue.arg0 = arg0;
            inValue.arg1 = arg1;
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataResponse retVal = ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).GetPreviewData(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataResponse> GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.GetPreviewDataAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataRequest request) {
            return base.Channel.GetPreviewDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataResponse> GetPreviewDataAsync(string arg0, string arg1) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.GetPreviewDataRequest();
            inValue.arg0 = arg0;
            inValue.arg1 = arg1;
            return ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).GetPreviewDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusResponse GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.InsertFileIngestionJobStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusRequest request) {
            return base.Channel.InsertFileIngestionJobStatus(request);
        }
        
        public void InsertFileIngestionJobStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.ingestionFile arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusRequest();
            inValue.arg0 = arg0;
            GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusResponse retVal = ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).InsertFileIngestionJobStatus(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusResponse> GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.InsertFileIngestionJobStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusRequest request) {
            return base.Channel.InsertFileIngestionJobStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusResponse> InsertFileIngestionJobStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.ingestionFile arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.InsertFileIngestionJobStatusRequest();
            inValue.arg0 = arg0;
            return ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).InsertFileIngestionJobStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusResponse GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.InsertStreamIngestionStartStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusRequest request) {
            return base.Channel.InsertStreamIngestionStartStatus(request);
        }
        
        public void InsertStreamIngestionStartStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusRequest();
            inValue.arg0 = arg0;
            GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusResponse retVal = ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).InsertStreamIngestionStartStatus(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusResponse> GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.InsertStreamIngestionStartStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusRequest request) {
            return base.Channel.InsertStreamIngestionStartStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusResponse> InsertStreamIngestionStartStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStartStatusRequest();
            inValue.arg0 = arg0;
            return ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).InsertStreamIngestionStartStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusResponse GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.InsertStreamIngestionStopStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusRequest request) {
            return base.Channel.InsertStreamIngestionStopStatus(request);
        }
        
        public void InsertStreamIngestionStopStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusRequest();
            inValue.arg0 = arg0;
            GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusResponse retVal = ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).InsertStreamIngestionStopStatus(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusResponse> GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.InsertStreamIngestionStopStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusRequest request) {
            return base.Channel.InsertStreamIngestionStopStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusResponse> InsertStreamIngestionStopStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.streamingIngestion arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.InsertStreamIngestionStopStatusRequest();
            inValue.arg0 = arg0;
            return ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).InsertStreamIngestionStopStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersResponse GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.GetHeaders(GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersRequest request) {
            return base.Channel.GetHeaders(request);
        }
        
        public string[] GetHeaders(string arg0, string arg1) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersRequest();
            inValue.arg0 = arg0;
            inValue.arg1 = arg1;
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersResponse retVal = ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).GetHeaders(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersResponse> GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.GetHeadersAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersRequest request) {
            return base.Channel.GetHeadersAsync(request);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersResponse> GetHeadersAsync(string arg0, string arg1) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.GetHeadersRequest();
            inValue.arg0 = arg0;
            inValue.arg1 = arg1;
            return ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).GetHeadersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusResponse GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.GetJobsStatus(GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusRequest request) {
            return base.Channel.GetJobsStatus(request);
        }
        
        public string[] GetJobsStatus() {
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusRequest();
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusResponse retVal = ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).GetJobsStatus(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusResponse> GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.GetJobsStatusAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusRequest request) {
            return base.Channel.GetJobsStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusResponse> GetJobsStatusAsync() {
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.GetJobsStatusRequest();
            return ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).GetJobsStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceResponse GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.GetDatalakeSlice(GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceRequest request) {
            return base.Channel.GetDatalakeSlice(request);
        }
        
        public string GetDatalakeSlice(GPAS.Dispatch.ServiceAccess.DataLakeService.datalakeQuery arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceRequest();
            inValue.arg0 = arg0;
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceResponse retVal = ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).GetDatalakeSlice(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceResponse> GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation.GetDatalakeSliceAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceRequest request) {
            return base.Channel.GetDatalakeSliceAsync(request);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceResponse> GetDatalakeSliceAsync(GPAS.Dispatch.ServiceAccess.DataLakeService.datalakeQuery arg0) {
            GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceRequest inValue = new GPAS.Dispatch.ServiceAccess.DataLakeService.GetDatalakeSliceRequest();
            inValue.arg0 = arg0;
            return ((GPAS.Dispatch.ServiceAccess.DataLakeService.DatalakeOperation)(this)).GetDatalakeSliceAsync(inValue);
        }
        
        public void test() {
            base.Channel.test();
        }
        
        public System.Threading.Tasks.Task testAsync() {
            return base.Channel.testAsync();
        }
    }
}
