//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GPAS.Dispatch.ServiceAccess.JobService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobRequest", Namespace="http://schemas.datacontract.org/2004/07/GPAS.JobServer.Logic.Entities")]
    [System.SerializableAttribute()]
    public partial class JobRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BeginTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastPublishedObjectIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastPublishedRelationIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisterTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.ServiceAccess.JobService.JobRequestStatus StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusMeesageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.ServiceAccess.JobService.JobRequestType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeginTime {
            get {
                return this.BeginTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.BeginTimeField, value) != true)) {
                    this.BeginTimeField = value;
                    this.RaisePropertyChanged("BeginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.EndTimeField, value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastPublishedObjectIndex {
            get {
                return this.LastPublishedObjectIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.LastPublishedObjectIndexField, value) != true)) {
                    this.LastPublishedObjectIndexField = value;
                    this.RaisePropertyChanged("LastPublishedObjectIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastPublishedRelationIndex {
            get {
                return this.LastPublishedRelationIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.LastPublishedRelationIndexField, value) != true)) {
                    this.LastPublishedRelationIndexField = value;
                    this.RaisePropertyChanged("LastPublishedRelationIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegisterTime {
            get {
                return this.RegisterTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisterTimeField, value) != true)) {
                    this.RegisterTimeField = value;
                    this.RaisePropertyChanged("RegisterTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.ServiceAccess.JobService.JobRequestStatus State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusMeesage {
            get {
                return this.StatusMeesageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMeesageField, value) != true)) {
                    this.StatusMeesageField = value;
                    this.RaisePropertyChanged("StatusMeesage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.ServiceAccess.JobService.JobRequestType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobRequestStatus", Namespace="http://schemas.datacontract.org/2004/07/GPAS.JobServer.Logic.Entities")]
    public enum JobRequestStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Busy = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Timeout = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Terminated = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pause = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Resume = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobRequestType", Namespace="http://schemas.datacontract.org/2004/07/GPAS.JobServer.Logic.Entities")]
    public enum JobRequestType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportFromCsvFile = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportFromExcelSheet = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportFromAccessTable = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportFromAttachedDatabaseTableOrView = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ImportFromEmlDirectory = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SemiStructuredDataImportRequestMetadata", Namespace="http://schemas.datacontract.org/2004/07/GPAS.JobServer.Logic.Entities")]
    [System.SerializableAttribute()]
    public partial class SemiStructuredDataImportRequestMetadata : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] serializedACLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] serializedMaterialBaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] serializedTypeMappingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] serializedACL {
            get {
                return this.serializedACLField;
            }
            set {
                if ((object.ReferenceEquals(this.serializedACLField, value) != true)) {
                    this.serializedACLField = value;
                    this.RaisePropertyChanged("serializedACL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] serializedMaterialBase {
            get {
                return this.serializedMaterialBaseField;
            }
            set {
                if ((object.ReferenceEquals(this.serializedMaterialBaseField, value) != true)) {
                    this.serializedMaterialBaseField = value;
                    this.RaisePropertyChanged("serializedMaterialBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] serializedTypeMapping {
            get {
                return this.serializedTypeMappingField;
            }
            set {
                if ((object.ReferenceEquals(this.serializedTypeMappingField, value) != true)) {
                    this.serializedTypeMappingField = value;
                    this.RaisePropertyChanged("serializedTypeMapping");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/test", ReplyAction="http://tempuri.org/IService/testResponse")]
        string test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/test", ReplyAction="http://tempuri.org/IService/testResponse")]
        System.Threading.Tasks.Task<string> testAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetJobRequests", ReplyAction="http://tempuri.org/IService/GetJobRequestsResponse")]
        GPAS.Dispatch.ServiceAccess.JobService.JobRequest[] GetJobRequests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetJobRequests", ReplyAction="http://tempuri.org/IService/GetJobRequestsResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.JobService.JobRequest[]> GetJobRequestsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterNewImportRequests", ReplyAction="http://tempuri.org/IService/RegisterNewImportRequestsResponse")]
        void RegisterNewImportRequests(GPAS.Dispatch.ServiceAccess.JobService.SemiStructuredDataImportRequestMetadata[] requestsData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterNewImportRequests", ReplyAction="http://tempuri.org/IService/RegisterNewImportRequestsResponse")]
        System.Threading.Tasks.Task RegisterNewImportRequestsAsync(GPAS.Dispatch.ServiceAccess.JobService.SemiStructuredDataImportRequestMetadata[] requestsData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUriOfDatabasesForImport", ReplyAction="http://tempuri.org/IService/GetUriOfDatabasesForImportResponse")]
        string[] GetUriOfDatabasesForImport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUriOfDatabasesForImport", ReplyAction="http://tempuri.org/IService/GetUriOfDatabasesForImportResponse")]
        System.Threading.Tasks.Task<string[]> GetUriOfDatabasesForImportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTablesAndViewsPreviewOfDatabaseForImport", ReplyAction="http://tempuri.org/IService/GetTablesAndViewsPreviewOfDatabaseForImportResponse")]
        System.Data.DataSet GetTablesAndViewsPreviewOfDatabaseForImport(string dbForImportURI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTablesAndViewsPreviewOfDatabaseForImport", ReplyAction="http://tempuri.org/IService/GetTablesAndViewsPreviewOfDatabaseForImportResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetTablesAndViewsPreviewOfDatabaseForImportAsync(string dbForImportURI);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetPauseStateForJob", ReplyAction="http://tempuri.org/IService/SetPauseStateForJobResponse")]
        void SetPauseStateForJob(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetPauseStateForJob", ReplyAction="http://tempuri.org/IService/SetPauseStateForJobResponse")]
        System.Threading.Tasks.Task SetPauseStateForJobAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetResumeStateForJob", ReplyAction="http://tempuri.org/IService/SetResumeStateForJobResponse")]
        void SetResumeStateForJob(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SetResumeStateForJob", ReplyAction="http://tempuri.org/IService/SetResumeStateForJobResponse")]
        System.Threading.Tasks.Task SetResumeStateForJobAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsAvailable", ReplyAction="http://tempuri.org/IService/IsAvailableResponse")]
        void IsAvailable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsAvailable", ReplyAction="http://tempuri.org/IService/IsAvailableResponse")]
        System.Threading.Tasks.Task IsAvailableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RestartJobMonitoringAgentService", ReplyAction="http://tempuri.org/IService/RestartJobMonitoringAgentServiceResponse")]
        void RestartJobMonitoringAgentService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RestartJobMonitoringAgentService", ReplyAction="http://tempuri.org/IService/RestartJobMonitoringAgentServiceResponse")]
        System.Threading.Tasks.Task RestartJobMonitoringAgentServiceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetImprotingPercent", ReplyAction="http://tempuri.org/IService/GetImprotingPercentResponse")]
        double GetImprotingPercent(int jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetImprotingPercent", ReplyAction="http://tempuri.org/IService/GetImprotingPercentResponse")]
        System.Threading.Tasks.Task<double> GetImprotingPercentAsync(int jobId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : GPAS.Dispatch.ServiceAccess.JobService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<GPAS.Dispatch.ServiceAccess.JobService.IService>, GPAS.Dispatch.ServiceAccess.JobService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string test() {
            return base.Channel.test();
        }
        
        public System.Threading.Tasks.Task<string> testAsync() {
            return base.Channel.testAsync();
        }
        
        public GPAS.Dispatch.ServiceAccess.JobService.JobRequest[] GetJobRequests() {
            return base.Channel.GetJobRequests();
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.ServiceAccess.JobService.JobRequest[]> GetJobRequestsAsync() {
            return base.Channel.GetJobRequestsAsync();
        }
        
        public void RegisterNewImportRequests(GPAS.Dispatch.ServiceAccess.JobService.SemiStructuredDataImportRequestMetadata[] requestsData) {
            base.Channel.RegisterNewImportRequests(requestsData);
        }
        
        public System.Threading.Tasks.Task RegisterNewImportRequestsAsync(GPAS.Dispatch.ServiceAccess.JobService.SemiStructuredDataImportRequestMetadata[] requestsData) {
            return base.Channel.RegisterNewImportRequestsAsync(requestsData);
        }
        
        public string[] GetUriOfDatabasesForImport() {
            return base.Channel.GetUriOfDatabasesForImport();
        }
        
        public System.Threading.Tasks.Task<string[]> GetUriOfDatabasesForImportAsync() {
            return base.Channel.GetUriOfDatabasesForImportAsync();
        }
        
        public System.Data.DataSet GetTablesAndViewsPreviewOfDatabaseForImport(string dbForImportURI) {
            return base.Channel.GetTablesAndViewsPreviewOfDatabaseForImport(dbForImportURI);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetTablesAndViewsPreviewOfDatabaseForImportAsync(string dbForImportURI) {
            return base.Channel.GetTablesAndViewsPreviewOfDatabaseForImportAsync(dbForImportURI);
        }
        
        public void SetPauseStateForJob(int id) {
            base.Channel.SetPauseStateForJob(id);
        }
        
        public System.Threading.Tasks.Task SetPauseStateForJobAsync(int id) {
            return base.Channel.SetPauseStateForJobAsync(id);
        }
        
        public void SetResumeStateForJob(int id) {
            base.Channel.SetResumeStateForJob(id);
        }
        
        public System.Threading.Tasks.Task SetResumeStateForJobAsync(int id) {
            return base.Channel.SetResumeStateForJobAsync(id);
        }
        
        public void IsAvailable() {
            base.Channel.IsAvailable();
        }
        
        public System.Threading.Tasks.Task IsAvailableAsync() {
            return base.Channel.IsAvailableAsync();
        }
        
        public void RestartJobMonitoringAgentService() {
            base.Channel.RestartJobMonitoringAgentService();
        }
        
        public System.Threading.Tasks.Task RestartJobMonitoringAgentServiceAsync() {
            return base.Channel.RestartJobMonitoringAgentServiceAsync();
        }
        
        public double GetImprotingPercent(int jobId) {
            return base.Channel.GetImprotingPercent(jobId);
        }
        
        public System.Threading.Tasks.Task<double> GetImprotingPercentAsync(int jobId) {
            return base.Channel.GetImprotingPercentAsync(jobId);
        }
    }
}
