//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GPAS.Horizon.Access.SearchService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchObject", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities")]
    [System.SerializableAttribute()]
    public partial class SearchObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsMasterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> LabelPropertyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.SearchObjectMaster SearchObjectMasterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.SearchObject[] SlavesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeUriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsMaster {
            get {
                return this.IsMasterField;
            }
            set {
                if ((this.IsMasterField.Equals(value) != true)) {
                    this.IsMasterField = value;
                    this.RaisePropertyChanged("IsMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> LabelPropertyID {
            get {
                return this.LabelPropertyIDField;
            }
            set {
                if ((this.LabelPropertyIDField.Equals(value) != true)) {
                    this.LabelPropertyIDField = value;
                    this.RaisePropertyChanged("LabelPropertyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.SearchObjectMaster SearchObjectMaster {
            get {
                return this.SearchObjectMasterField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchObjectMasterField, value) != true)) {
                    this.SearchObjectMasterField = value;
                    this.RaisePropertyChanged("SearchObjectMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.SearchObject[] Slaves {
            get {
                return this.SlavesField;
            }
            set {
                if ((object.ReferenceEquals(this.SlavesField, value) != true)) {
                    this.SlavesField = value;
                    this.RaisePropertyChanged("Slaves");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeUri {
            get {
                return this.TypeUriField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeUriField, value) != true)) {
                    this.TypeUriField = value;
                    this.RaisePropertyChanged("TypeUri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchObjectMaster", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities")]
    [System.SerializableAttribute()]
    public partial class SearchObjectMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long MasterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] ResolveToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long MasterId {
            get {
                return this.MasterIdField;
            }
            set {
                if ((this.MasterIdField.Equals(value) != true)) {
                    this.MasterIdField = value;
                    this.RaisePropertyChanged("MasterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] ResolveTo {
            get {
                return this.ResolveToField;
            }
            set {
                if ((object.ReferenceEquals(this.ResolveToField, value) != true)) {
                    this.ResolveToField = value;
                    this.RaisePropertyChanged("ResolveTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertiesMatchingResults", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities")]
    [System.SerializableAttribute()]
    public partial class PropertiesMatchingResults : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] ResultPropertiesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SearchedPropertyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] ResultPropertiesID {
            get {
                return this.ResultPropertiesIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultPropertiesIDField, value) != true)) {
                    this.ResultPropertiesIDField = value;
                    this.RaisePropertyChanged("ResultPropertiesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SearchedPropertyID {
            get {
                return this.SearchedPropertyIDField;
            }
            set {
                if ((this.SearchedPropertyIDField.Equals(value) != true)) {
                    this.SearchedPropertyIDField = value;
                    this.RaisePropertyChanged("SearchedPropertyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddedConcepts", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities.Sync")]
    [System.SerializableAttribute()]
    public partial class AddedConcepts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.SearchMedia[] AddedMediasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.SearchObject[] AddedObjectsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.SearchProperty[] AddedPropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.SearchRelationship[] AddedRelationshipsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.SearchMedia[] AddedMedias {
            get {
                return this.AddedMediasField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedMediasField, value) != true)) {
                    this.AddedMediasField = value;
                    this.RaisePropertyChanged("AddedMedias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.SearchObject[] AddedObjects {
            get {
                return this.AddedObjectsField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedObjectsField, value) != true)) {
                    this.AddedObjectsField = value;
                    this.RaisePropertyChanged("AddedObjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.SearchProperty[] AddedProperties {
            get {
                return this.AddedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedPropertiesField, value) != true)) {
                    this.AddedPropertiesField = value;
                    this.RaisePropertyChanged("AddedProperties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.SearchRelationship[] AddedRelationships {
            get {
                return this.AddedRelationshipsField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedRelationshipsField, value) != true)) {
                    this.AddedRelationshipsField = value;
                    this.RaisePropertyChanged("AddedRelationships");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchMedia", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities")]
    [System.SerializableAttribute()]
    public partial class SearchMedia : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DataSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OwnerObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URIField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DataSourceID {
            get {
                return this.DataSourceIDField;
            }
            set {
                if ((this.DataSourceIDField.Equals(value) != true)) {
                    this.DataSourceIDField = value;
                    this.RaisePropertyChanged("DataSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OwnerObjectId {
            get {
                return this.OwnerObjectIdField;
            }
            set {
                if ((this.OwnerObjectIdField.Equals(value) != true)) {
                    this.OwnerObjectIdField = value;
                    this.RaisePropertyChanged("OwnerObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URI {
            get {
                return this.URIField;
            }
            set {
                if ((object.ReferenceEquals(this.URIField, value) != true)) {
                    this.URIField = value;
                    this.RaisePropertyChanged("URI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchProperty", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities")]
    [System.SerializableAttribute()]
    public partial class SearchProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DataSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.SearchObject OwnerObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DataSourceID {
            get {
                return this.DataSourceIDField;
            }
            set {
                if ((this.DataSourceIDField.Equals(value) != true)) {
                    this.DataSourceIDField = value;
                    this.RaisePropertyChanged("DataSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.SearchObject OwnerObject {
            get {
                return this.OwnerObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerObjectField, value) != true)) {
                    this.OwnerObjectField = value;
                    this.RaisePropertyChanged("OwnerObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeUri {
            get {
                return this.TypeUriField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeUriField, value) != true)) {
                    this.TypeUriField = value;
                    this.RaisePropertyChanged("TypeUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchRelationship", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities")]
    [System.SerializableAttribute()]
    public partial class SearchRelationship : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DataSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SourceObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceObjectTypeUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TargetObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetObjectTypeUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeUriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DataSourceID {
            get {
                return this.DataSourceIDField;
            }
            set {
                if ((this.DataSourceIDField.Equals(value) != true)) {
                    this.DataSourceIDField = value;
                    this.RaisePropertyChanged("DataSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((this.DirectionField.Equals(value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SourceObjectId {
            get {
                return this.SourceObjectIdField;
            }
            set {
                if ((this.SourceObjectIdField.Equals(value) != true)) {
                    this.SourceObjectIdField = value;
                    this.RaisePropertyChanged("SourceObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceObjectTypeUri {
            get {
                return this.SourceObjectTypeUriField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceObjectTypeUriField, value) != true)) {
                    this.SourceObjectTypeUriField = value;
                    this.RaisePropertyChanged("SourceObjectTypeUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TargetObjectId {
            get {
                return this.TargetObjectIdField;
            }
            set {
                if ((this.TargetObjectIdField.Equals(value) != true)) {
                    this.TargetObjectIdField = value;
                    this.RaisePropertyChanged("TargetObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetObjectTypeUri {
            get {
                return this.TargetObjectTypeUriField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetObjectTypeUriField, value) != true)) {
                    this.TargetObjectTypeUriField = value;
                    this.RaisePropertyChanged("TargetObjectTypeUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeUri {
            get {
                return this.TypeUriField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeUriField, value) != true)) {
                    this.TypeUriField = value;
                    this.RaisePropertyChanged("TypeUri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModifiedConcepts", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities.Sync")]
    [System.SerializableAttribute()]
    public partial class ModifiedConcepts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.SearchMedia[] DeletedMediasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.ModifiedProperty[] ModifiedPropertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.SearchMedia[] DeletedMedias {
            get {
                return this.DeletedMediasField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletedMediasField, value) != true)) {
                    this.DeletedMediasField = value;
                    this.RaisePropertyChanged("DeletedMedias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.ModifiedProperty[] ModifiedProperties {
            get {
                return this.ModifiedPropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedPropertiesField, value) != true)) {
                    this.ModifiedPropertiesField = value;
                    this.RaisePropertyChanged("ModifiedProperties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModifiedProperty", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities.Sync")]
    [System.SerializableAttribute()]
    public partial class ModifiedProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OwnerObjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeUriField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string newValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OwnerObjectID {
            get {
                return this.OwnerObjectIDField;
            }
            set {
                if ((this.OwnerObjectIDField.Equals(value) != true)) {
                    this.OwnerObjectIDField = value;
                    this.RaisePropertyChanged("OwnerObjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeUri {
            get {
                return this.TypeUriField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeUriField, value) != true)) {
                    this.TypeUriField = value;
                    this.RaisePropertyChanged("TypeUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string newValue {
            get {
                return this.newValueField;
            }
            set {
                if ((object.ReferenceEquals(this.newValueField, value) != true)) {
                    this.newValueField = value;
                    this.RaisePropertyChanged("newValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CircleSearchCriteria", Namespace="http://schemas.datacontract.org/2004/07/GPAS.GeoSearch")]
    [System.SerializableAttribute()]
    public partial class CircleSearchCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.GeoPoint CenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RediusInKiloMetersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.GeoPoint Center {
            get {
                return this.CenterField;
            }
            set {
                if ((object.ReferenceEquals(this.CenterField, value) != true)) {
                    this.CenterField = value;
                    this.RaisePropertyChanged("Center");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RediusInKiloMeters {
            get {
                return this.RediusInKiloMetersField;
            }
            set {
                if ((this.RediusInKiloMetersField.Equals(value) != true)) {
                    this.RediusInKiloMetersField = value;
                    this.RaisePropertyChanged("RediusInKiloMeters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoPoint", Namespace="http://schemas.datacontract.org/2004/07/GPAS.GeoSearch")]
    [System.SerializableAttribute()]
    public partial class GeoPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LngField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lng {
            get {
                return this.LngField;
            }
            set {
                if ((this.LngField.Equals(value) != true)) {
                    this.LngField = value;
                    this.RaisePropertyChanged("Lng");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PolygonSearchCriteria", Namespace="http://schemas.datacontract.org/2004/07/GPAS.GeoSearch")]
    [System.SerializableAttribute()]
    public partial class PolygonSearchCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LengthInMetersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.GeoPoint[] VerticesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WidthInMetersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isAnyVectorCoincidentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isAnyVectorCrossedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double perimeterInMetersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LengthInMeters {
            get {
                return this.LengthInMetersField;
            }
            set {
                if ((this.LengthInMetersField.Equals(value) != true)) {
                    this.LengthInMetersField = value;
                    this.RaisePropertyChanged("LengthInMeters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.GeoPoint[] Vertices {
            get {
                return this.VerticesField;
            }
            set {
                if ((object.ReferenceEquals(this.VerticesField, value) != true)) {
                    this.VerticesField = value;
                    this.RaisePropertyChanged("Vertices");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WidthInMeters {
            get {
                return this.WidthInMetersField;
            }
            set {
                if ((this.WidthInMetersField.Equals(value) != true)) {
                    this.WidthInMetersField = value;
                    this.RaisePropertyChanged("WidthInMeters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isAnyVectorCoincident {
            get {
                return this.isAnyVectorCoincidentField;
            }
            set {
                if ((this.isAnyVectorCoincidentField.Equals(value) != true)) {
                    this.isAnyVectorCoincidentField = value;
                    this.RaisePropertyChanged("isAnyVectorCoincident");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isAnyVectorCrossed {
            get {
                return this.isAnyVectorCrossedField;
            }
            set {
                if ((this.isAnyVectorCrossedField.Equals(value) != true)) {
                    this.isAnyVectorCrossedField = value;
                    this.RaisePropertyChanged("isAnyVectorCrossed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double perimeterInMeters {
            get {
                return this.perimeterInMetersField;
            }
            set {
                if ((this.perimeterInMetersField.Equals(value) != true)) {
                    this.perimeterInMetersField = value;
                    this.RaisePropertyChanged("perimeterInMeters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoundingBox", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities.SearchEngine.D" +
        "ocuments")]
    [System.SerializableAttribute()]
    public partial class BoundingBox : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int heightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.Landmarks landmarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.Point topLeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int widthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.Landmarks landmarks {
            get {
                return this.landmarksField;
            }
            set {
                if ((object.ReferenceEquals(this.landmarksField, value) != true)) {
                    this.landmarksField = value;
                    this.RaisePropertyChanged("landmarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.Point topLeft {
            get {
                return this.topLeftField;
            }
            set {
                if ((this.topLeftField.Equals(value) != true)) {
                    this.topLeftField = value;
                    this.RaisePropertyChanged("topLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int width {
            get {
                return this.widthField;
            }
            set {
                if ((this.widthField.Equals(value) != true)) {
                    this.widthField = value;
                    this.RaisePropertyChanged("width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Landmarks", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities.SearchEngine.D" +
        "ocuments")]
    [System.SerializableAttribute()]
    public partial class Landmarks : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] marksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] marks {
            get {
                return this.marksField;
            }
            set {
                if ((object.ReferenceEquals(this.marksField, value) != true)) {
                    this.marksField = value;
                    this.RaisePropertyChanged("marks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Point", Namespace="http://schemas.datacontract.org/2004/07/System.Drawing")]
    [System.SerializableAttribute()]
    public partial struct Point : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int xField;
        
        private int yField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RetrievedFace", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities")]
    [System.SerializableAttribute()]
    public partial class RetrievedFace : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.BoundingBox boundingBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double distanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.BoundingBox boundingBox {
            get {
                return this.boundingBoxField;
            }
            set {
                if ((object.ReferenceEquals(this.boundingBoxField, value) != true)) {
                    this.boundingBoxField = value;
                    this.RaisePropertyChanged("boundingBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double distance {
            get {
                return this.distanceField;
            }
            set {
                if ((this.distanceField.Equals(value) != true)) {
                    this.distanceField = value;
                    this.RaisePropertyChanged("distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imageId {
            get {
                return this.imageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.imageIdField, value) != true)) {
                    this.imageIdField = value;
                    this.RaisePropertyChanged("imageId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResult", Namespace="http://schemas.datacontract.org/2004/07/GPAS.StatisticalQuery")]
    [System.SerializableAttribute()]
    public partial class QueryResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.TypeBasedStatistic[] ObjectTypePreviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.TypeBasedStatistic[] PropertyTypePreviewField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.TypeBasedStatistic[] ObjectTypePreview {
            get {
                return this.ObjectTypePreviewField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectTypePreviewField, value) != true)) {
                    this.ObjectTypePreviewField = value;
                    this.RaisePropertyChanged("ObjectTypePreview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.TypeBasedStatistic[] PropertyTypePreview {
            get {
                return this.PropertyTypePreviewField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyTypePreviewField, value) != true)) {
                    this.PropertyTypePreviewField = value;
                    this.RaisePropertyChanged("PropertyTypePreview");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeBasedStatistic", Namespace="http://schemas.datacontract.org/2004/07/GPAS.StatisticalQuery.ResultNode")]
    [System.SerializableAttribute()]
    public partial class TypeBasedStatistic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeUriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((this.FrequencyField.Equals(value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeUri {
            get {
                return this.TypeUriField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeUriField, value) != true)) {
                    this.TypeUriField = value;
                    this.RaisePropertyChanged("TypeUri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyValueStatistics", Namespace="http://schemas.datacontract.org/2004/07/GPAS.StatisticalQuery")]
    [System.SerializableAttribute()]
    public partial class PropertyValueStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.PropertyValueStatistic[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalResultsCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.PropertyValueStatistic[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalResultsCount {
            get {
                return this.TotalResultsCountField;
            }
            set {
                if ((this.TotalResultsCountField.Equals(value) != true)) {
                    this.TotalResultsCountField = value;
                    this.RaisePropertyChanged("TotalResultsCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyValueStatistic", Namespace="http://schemas.datacontract.org/2004/07/GPAS.StatisticalQuery.ResultNode")]
    [System.SerializableAttribute()]
    public partial class PropertyValueStatistic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((this.FrequencyField.Equals(value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyValue {
            get {
                return this.PropertyValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyValueField, value) != true)) {
                    this.PropertyValueField = value;
                    this.RaisePropertyChanged("PropertyValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LinkTypeStatistics", Namespace="http://schemas.datacontract.org/2004/07/GPAS.StatisticalQuery")]
    [System.SerializableAttribute()]
    public partial class LinkTypeStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.TypeBasedStatistic[] LinkTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.TypeBasedStatistic[] LinkedObjectTypesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.TypeBasedStatistic[] LinkTypes {
            get {
                return this.LinkTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkTypesField, value) != true)) {
                    this.LinkTypesField = value;
                    this.RaisePropertyChanged("LinkTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.TypeBasedStatistic[] LinkedObjectTypes {
            get {
                return this.LinkedObjectTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedObjectTypesField, value) != true)) {
                    this.LinkedObjectTypesField = value;
                    this.RaisePropertyChanged("LinkedObjectTypes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyBarValues", Namespace="http://schemas.datacontract.org/2004/07/GPAS.StatisticalQuery.ResultNode")]
    [System.SerializableAttribute()]
    public partial class PropertyBarValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.PropertyBarValue[] BarsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BucketCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.PropertyBarValue[] Bars {
            get {
                return this.BarsField;
            }
            set {
                if ((object.ReferenceEquals(this.BarsField, value) != true)) {
                    this.BarsField = value;
                    this.RaisePropertyChanged("Bars");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BucketCount {
            get {
                return this.BucketCountField;
            }
            set {
                if ((this.BucketCountField.Equals(value) != true)) {
                    this.BucketCountField = value;
                    this.RaisePropertyChanged("BucketCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyBarValue", Namespace="http://schemas.datacontract.org/2004/07/GPAS.StatisticalQuery.ResultNode")]
    [System.SerializableAttribute()]
    public partial class PropertyBarValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double StartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double End {
            get {
                return this.EndField;
            }
            set {
                if ((this.EndField.Equals(value) != true)) {
                    this.EndField = value;
                    this.RaisePropertyChanged("End");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchIndexCheckingInput", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities.IndexChecking")]
    [System.SerializableAttribute()]
    public partial class SearchIndexCheckingInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DocumentContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Dispatch.Entities.Concepts.KProperty[] PropertiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] RelationsIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DocumentContent {
            get {
                return this.DocumentContentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentContentField, value) != true)) {
                    this.DocumentContentField = value;
                    this.RaisePropertyChanged("DocumentContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ObjectId {
            get {
                return this.ObjectIdField;
            }
            set {
                if ((this.ObjectIdField.Equals(value) != true)) {
                    this.ObjectIdField = value;
                    this.RaisePropertyChanged("ObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Dispatch.Entities.Concepts.KProperty[] Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] RelationsIds {
            get {
                return this.RelationsIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationsIdsField, value) != true)) {
                    this.RelationsIdsField = value;
                    this.RaisePropertyChanged("RelationsIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchIndexCheckingResult", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities.IndexChecking")]
    [System.SerializableAttribute()]
    public partial class SearchIndexCheckingResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> DocumentIndexStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageIndexCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ImageIndexStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ObjectIndexStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.IndexingStatus[] PropertiesIndexStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.IndexingStatus[] RelationsIndexStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> DocumentIndexStatus {
            get {
                return this.DocumentIndexStatusField;
            }
            set {
                if ((this.DocumentIndexStatusField.Equals(value) != true)) {
                    this.DocumentIndexStatusField = value;
                    this.RaisePropertyChanged("DocumentIndexStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageIndexCount {
            get {
                return this.ImageIndexCountField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageIndexCountField, value) != true)) {
                    this.ImageIndexCountField = value;
                    this.RaisePropertyChanged("ImageIndexCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ImageIndexStatus {
            get {
                return this.ImageIndexStatusField;
            }
            set {
                if ((this.ImageIndexStatusField.Equals(value) != true)) {
                    this.ImageIndexStatusField = value;
                    this.RaisePropertyChanged("ImageIndexStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ObjectIndexStatus {
            get {
                return this.ObjectIndexStatusField;
            }
            set {
                if ((this.ObjectIndexStatusField.Equals(value) != true)) {
                    this.ObjectIndexStatusField = value;
                    this.RaisePropertyChanged("ObjectIndexStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.IndexingStatus[] PropertiesIndexStatus {
            get {
                return this.PropertiesIndexStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesIndexStatusField, value) != true)) {
                    this.PropertiesIndexStatusField = value;
                    this.RaisePropertyChanged("PropertiesIndexStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.IndexingStatus[] RelationsIndexStatus {
            get {
                return this.RelationsIndexStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationsIndexStatusField, value) != true)) {
                    this.RelationsIndexStatusField = value;
                    this.RaisePropertyChanged("RelationsIndexStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IndexingStatus", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities.IndexChecking")]
    [System.SerializableAttribute()]
    public partial class IndexingStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IndexStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IndexStatus {
            get {
                return this.IndexStatusField;
            }
            set {
                if ((this.IndexStatusField.Equals(value) != true)) {
                    this.IndexStatusField = value;
                    this.RaisePropertyChanged("IndexStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseSearchResult", Namespace="http://schemas.datacontract.org/2004/07/GPAS.TextualSearch")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GPAS.Horizon.Access.SearchService.DocumentBasedSearchResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GPAS.Horizon.Access.SearchService.ObjectBasedSearchResult))]
    public partial class BaseSearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FoundNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ObjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TotalRowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FoundNumber {
            get {
                return this.FoundNumberField;
            }
            set {
                if ((this.FoundNumberField.Equals(value) != true)) {
                    this.FoundNumberField = value;
                    this.RaisePropertyChanged("FoundNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ObjectId {
            get {
                return this.ObjectIdField;
            }
            set {
                if ((this.ObjectIdField.Equals(value) != true)) {
                    this.ObjectIdField = value;
                    this.RaisePropertyChanged("ObjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TotalRow {
            get {
                return this.TotalRowField;
            }
            set {
                if ((this.TotalRowField.Equals(value) != true)) {
                    this.TotalRowField = value;
                    this.RaisePropertyChanged("TotalRow");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentBasedSearchResult", Namespace="http://schemas.datacontract.org/2004/07/GPAS.TextualSearch")]
    [System.SerializableAttribute()]
    public partial class DocumentBasedSearchResult : GPAS.Horizon.Access.SearchService.BaseSearchResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.TextResult TextResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeURIField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.TextResult TextResult {
            get {
                return this.TextResultField;
            }
            set {
                if ((object.ReferenceEquals(this.TextResultField, value) != true)) {
                    this.TextResultField = value;
                    this.RaisePropertyChanged("TextResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeURI {
            get {
                return this.TypeURIField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeURIField, value) != true)) {
                    this.TypeURIField = value;
                    this.RaisePropertyChanged("TypeURI");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectBasedSearchResult", Namespace="http://schemas.datacontract.org/2004/07/GPAS.TextualSearch")]
    [System.SerializableAttribute()]
    public partial class ObjectBasedSearchResult : GPAS.Horizon.Access.SearchService.BaseSearchResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.Horizon.Access.SearchService.TextResult TextResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeURIField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.Horizon.Access.SearchService.TextResult TextResult {
            get {
                return this.TextResultField;
            }
            set {
                if ((object.ReferenceEquals(this.TextResultField, value) != true)) {
                    this.TextResultField = value;
                    this.RaisePropertyChanged("TextResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeURI {
            get {
                return this.TypeURIField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeURIField, value) != true)) {
                    this.TypeURIField = value;
                    this.RaisePropertyChanged("TypeURI");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextResult", Namespace="http://schemas.datacontract.org/2004/07/GPAS.TextualSearch")]
    [System.SerializableAttribute()]
    public partial class TextResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PartOfTextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] PartOfText {
            get {
                return this.PartOfTextField;
            }
            set {
                if ((object.ReferenceEquals(this.PartOfTextField, value) != true)) {
                    this.PartOfTextField = value;
                    this.RaisePropertyChanged("PartOfText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchDataSourceACL", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities")]
    [System.SerializableAttribute()]
    public partial class SearchDataSourceACL : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GPAS.AccessControl.ACL AclField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GPAS.AccessControl.ACL Acl {
            get {
                return this.AclField;
            }
            set {
                if ((object.ReferenceEquals(this.AclField, value) != true)) {
                    this.AclField = value;
                    this.RaisePropertyChanged("Acl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchGraphArrangement", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities")]
    [System.SerializableAttribute()]
    public partial class SearchGraphArrangement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DataSourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] GraphArrangementXMLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] GraphImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodesCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DataSourceID {
            get {
                return this.DataSourceIDField;
            }
            set {
                if ((this.DataSourceIDField.Equals(value) != true)) {
                    this.DataSourceIDField = value;
                    this.RaisePropertyChanged("DataSourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] GraphArrangementXML {
            get {
                return this.GraphArrangementXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.GraphArrangementXMLField, value) != true)) {
                    this.GraphArrangementXMLField = value;
                    this.RaisePropertyChanged("GraphArrangementXML");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] GraphImage {
            get {
                return this.GraphImageField;
            }
            set {
                if ((object.ReferenceEquals(this.GraphImageField, value) != true)) {
                    this.GraphImageField = value;
                    this.RaisePropertyChanged("GraphImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodesCount {
            get {
                return this.NodesCountField;
            }
            set {
                if ((this.NodesCountField.Equals(value) != true)) {
                    this.NodesCountField = value;
                    this.RaisePropertyChanged("NodesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeCreated {
            get {
                return this.TimeCreatedField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeCreatedField, value) != true)) {
                    this.TimeCreatedField = value;
                    this.RaisePropertyChanged("TimeCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConceptType", Namespace="http://schemas.datacontract.org/2004/07/GPAS.SearchServer.Entities")]
    public enum ConceptType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Property = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Relationship = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Media = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Object = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SearchService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/QuickSearch", ReplyAction="http://tempuri.org/IService/QuickSearchResponse")]
        GPAS.Horizon.Access.SearchService.SearchObject[] QuickSearch(string keyword, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/QuickSearch", ReplyAction="http://tempuri.org/IService/QuickSearchResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> QuickSearchAsync(string keyword, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformFilterSearch", ReplyAction="http://tempuri.org/IService/PerformFilterSearchResponse")]
        GPAS.Horizon.Access.SearchService.SearchObject[] PerformFilterSearch(byte[] stream, System.Nullable<int> count, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformFilterSearch", ReplyAction="http://tempuri.org/IService/PerformFilterSearchResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> PerformFilterSearchAsync(byte[] stream, System.Nullable<int> count, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformSelectMatching", ReplyAction="http://tempuri.org/IService/PerformSelectMatchingResponse")]
        long[] PerformSelectMatching(byte[] stream, long[] ObjectIDs, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformSelectMatching", ReplyAction="http://tempuri.org/IService/PerformSelectMatchingResponse")]
        System.Threading.Tasks.Task<long[]> PerformSelectMatchingAsync(byte[] stream, long[] ObjectIDs, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindPropertiesSameWith", ReplyAction="http://tempuri.org/IService/FindPropertiesSameWithResponse")]
        GPAS.Horizon.Access.SearchService.PropertiesMatchingResults[] FindPropertiesSameWith(GPAS.Dispatch.Entities.Concepts.KProperty[] properties, int totalResultsThreshold, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindPropertiesSameWith", ReplyAction="http://tempuri.org/IService/FindPropertiesSameWithResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.PropertiesMatchingResults[]> FindPropertiesSameWithAsync(GPAS.Dispatch.Entities.Concepts.KProperty[] properties, int totalResultsThreshold, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SyncPublishChanges", ReplyAction="http://tempuri.org/IService/SyncPublishChangesResponse")]
        GPAS.Dispatch.Entities.Publish.SynchronizationResult SyncPublishChanges(GPAS.Horizon.Access.SearchService.AddedConcepts addedConcepts, GPAS.Horizon.Access.SearchService.ModifiedConcepts modifiedConcepts, long dataSourceID, bool isContinousPublish);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SyncPublishChanges", ReplyAction="http://tempuri.org/IService/SyncPublishChangesResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.Entities.Publish.SynchronizationResult> SyncPublishChangesAsync(GPAS.Horizon.Access.SearchService.AddedConcepts addedConcepts, GPAS.Horizon.Access.SearchService.ModifiedConcepts modifiedConcepts, long dataSourceID, bool isContinousPublish);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FinalizeContinousPublish", ReplyAction="http://tempuri.org/IService/FinalizeContinousPublishResponse")]
        void FinalizeContinousPublish();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FinalizeContinousPublish", ReplyAction="http://tempuri.org/IService/FinalizeContinousPublishResponse")]
        System.Threading.Tasks.Task FinalizeContinousPublishAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ResetIndexes", ReplyAction="http://tempuri.org/IService/ResetIndexesResponse")]
        void ResetIndexes(bool DeleteExistingIndexes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ResetIndexes", ReplyAction="http://tempuri.org/IService/ResetIndexesResponse")]
        System.Threading.Tasks.Task ResetIndexesAsync(bool DeleteExistingIndexes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsDataIndicesStable", ReplyAction="http://tempuri.org/IService/IsDataIndicesStableResponse")]
        bool IsDataIndicesStable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsDataIndicesStable", ReplyAction="http://tempuri.org/IService/IsDataIndicesStableResponse")]
        System.Threading.Tasks.Task<bool> IsDataIndicesStableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveSearchIndexes", ReplyAction="http://tempuri.org/IService/RemoveSearchIndexesResponse")]
        void RemoveSearchIndexes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveSearchIndexes", ReplyAction="http://tempuri.org/IService/RemoveSearchIndexesResponse")]
        System.Threading.Tasks.Task RemoveSearchIndexesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Optimize", ReplyAction="http://tempuri.org/IService/OptimizeResponse")]
        void Optimize();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Optimize", ReplyAction="http://tempuri.org/IService/OptimizeResponse")]
        System.Threading.Tasks.Task OptimizeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformGeoCircleSearch", ReplyAction="http://tempuri.org/IService/PerformGeoCircleSearchResponse")]
        GPAS.Horizon.Access.SearchService.SearchObject[] PerformGeoCircleSearch(GPAS.Horizon.Access.SearchService.CircleSearchCriteria circleSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformGeoCircleSearch", ReplyAction="http://tempuri.org/IService/PerformGeoCircleSearchResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> PerformGeoCircleSearchAsync(GPAS.Horizon.Access.SearchService.CircleSearchCriteria circleSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformGeoPolygonSearch", ReplyAction="http://tempuri.org/IService/PerformGeoPolygonSearchResponse")]
        GPAS.Horizon.Access.SearchService.SearchObject[] PerformGeoPolygonSearch(GPAS.Horizon.Access.SearchService.PolygonSearchCriteria polygonSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformGeoPolygonSearch", ReplyAction="http://tempuri.org/IService/PerformGeoPolygonSearchResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> PerformGeoPolygonSearchAsync(GPAS.Horizon.Access.SearchService.PolygonSearchCriteria polygonSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformGeoCircleFilterSearch", ReplyAction="http://tempuri.org/IService/PerformGeoCircleFilterSearchResponse")]
        GPAS.Horizon.Access.SearchService.SearchObject[] PerformGeoCircleFilterSearch(GPAS.Horizon.Access.SearchService.CircleSearchCriteria circleSearchCriteria, GPAS.FilterSearch.CriteriaSet filterSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformGeoCircleFilterSearch", ReplyAction="http://tempuri.org/IService/PerformGeoCircleFilterSearchResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> PerformGeoCircleFilterSearchAsync(GPAS.Horizon.Access.SearchService.CircleSearchCriteria circleSearchCriteria, GPAS.FilterSearch.CriteriaSet filterSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformGeoPolygonFilterSearch", ReplyAction="http://tempuri.org/IService/PerformGeoPolygonFilterSearchResponse")]
        GPAS.Horizon.Access.SearchService.SearchObject[] PerformGeoPolygonFilterSearch(GPAS.Horizon.Access.SearchService.PolygonSearchCriteria polygonSearchCriteria, GPAS.FilterSearch.CriteriaSet filterSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformGeoPolygonFilterSearch", ReplyAction="http://tempuri.org/IService/PerformGeoPolygonFilterSearchResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> PerformGeoPolygonFilterSearchAsync(GPAS.Horizon.Access.SearchService.PolygonSearchCriteria polygonSearchCriteria, GPAS.FilterSearch.CriteriaSet filterSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentPossibleExtractedContent", ReplyAction="http://tempuri.org/IService/GetDocumentPossibleExtractedContentResponse")]
        string GetDocumentPossibleExtractedContent(long docID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDocumentPossibleExtractedContent", ReplyAction="http://tempuri.org/IService/GetDocumentPossibleExtractedContentResponse")]
        System.Threading.Tasks.Task<string> GetDocumentPossibleExtractedContentAsync(long docID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewGroupFieldsToSearchServer", ReplyAction="http://tempuri.org/IService/AddNewGroupFieldsToSearchServerResponse")]
        void AddNewGroupFieldsToSearchServer(string[] newGroupsName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewGroupFieldsToSearchServer", ReplyAction="http://tempuri.org/IService/AddNewGroupFieldsToSearchServerResponse")]
        System.Threading.Tasks.Task AddNewGroupFieldsToSearchServerAsync(string[] newGroupsName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SynchronizeDataSource", ReplyAction="http://tempuri.org/IService/SynchronizeDataSourceResponse")]
        GPAS.Dispatch.Entities.Publish.SynchronizationResult SynchronizeDataSource(GPAS.AccessControl.DataSourceInfo dataSourceInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SynchronizeDataSource", ReplyAction="http://tempuri.org/IService/SynchronizeDataSourceResponse")]
        System.Threading.Tasks.Task<GPAS.Dispatch.Entities.Publish.SynchronizationResult> SynchronizeDataSourceAsync(GPAS.AccessControl.DataSourceInfo dataSourceInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataSources", ReplyAction="http://tempuri.org/IService/GetDataSourcesResponse")]
        GPAS.AccessControl.DataSourceInfo[] GetDataSources(long dataSourceType, int star, int count, string filter, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataSources", ReplyAction="http://tempuri.org/IService/GetDataSourcesResponse")]
        System.Threading.Tasks.Task<GPAS.AccessControl.DataSourceInfo[]> GetDataSourcesAsync(long dataSourceType, int star, int count, string filter, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDataSources", ReplyAction="http://tempuri.org/IService/GetAllDataSourcesResponse")]
        GPAS.AccessControl.DataSourceInfo[] GetAllDataSources(int count, string filter, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDataSources", ReplyAction="http://tempuri.org/IService/GetAllDataSourcesResponse")]
        System.Threading.Tasks.Task<GPAS.AccessControl.DataSourceInfo[]> GetAllDataSourcesAsync(int count, string filter, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FaceDetection", ReplyAction="http://tempuri.org/IService/FaceDetectionResponse")]
        GPAS.Horizon.Access.SearchService.BoundingBox[] FaceDetection(byte[] imageFile, string extention, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FaceDetection", ReplyAction="http://tempuri.org/IService/FaceDetectionResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.BoundingBox[]> FaceDetectionAsync(byte[] imageFile, string extention, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FaceRecognition", ReplyAction="http://tempuri.org/IService/FaceRecognitionResponse")]
        GPAS.Horizon.Access.SearchService.RetrievedFace[] FaceRecognition(byte[] imageFile, string extention, GPAS.Horizon.Access.SearchService.BoundingBox[] boundingBoxs, int count, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FaceRecognition", ReplyAction="http://tempuri.org/IService/FaceRecognitionResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.RetrievedFace[]> FaceRecognitionAsync(byte[] imageFile, string extention, GPAS.Horizon.Access.SearchService.BoundingBox[] boundingBoxs, int count, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsMachneVisonServiceInstalled", ReplyAction="http://tempuri.org/IService/IsMachneVisonServiceInstalledResponse")]
        bool IsMachneVisonServiceInstalled();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsMachneVisonServiceInstalled", ReplyAction="http://tempuri.org/IService/IsMachneVisonServiceInstalledResponse")]
        System.Threading.Tasks.Task<bool> IsMachneVisonServiceInstalledAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RunStatisticalQuery", ReplyAction="http://tempuri.org/IService/RunStatisticalQueryResponse")]
        GPAS.Horizon.Access.SearchService.QueryResult RunStatisticalQuery(byte[] queryByteArray, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RunStatisticalQuery", ReplyAction="http://tempuri.org/IService/RunStatisticalQueryResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.QueryResult> RunStatisticalQueryAsync(byte[] queryByteArray, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveObjectIDsByStatisticalQuery", ReplyAction="http://tempuri.org/IService/RetrieveObjectIDsByStatisticalQueryResponse")]
        long[] RetrieveObjectIDsByStatisticalQuery(byte[] queryByteArray, int PassObjectsCountLimit, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveObjectIDsByStatisticalQuery", ReplyAction="http://tempuri.org/IService/RetrieveObjectIDsByStatisticalQueryResponse")]
        System.Threading.Tasks.Task<long[]> RetrieveObjectIDsByStatisticalQueryAsync(byte[] queryByteArray, int PassObjectsCountLimit, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrievePropertyValueStatistics", ReplyAction="http://tempuri.org/IService/RetrievePropertyValueStatisticsResponse")]
        GPAS.Horizon.Access.SearchService.PropertyValueStatistics RetrievePropertyValueStatistics(byte[] queryByteArray, string exploredPropertyTypeUri, int startOffset, int resultsLimit, long minimumCount, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrievePropertyValueStatistics", ReplyAction="http://tempuri.org/IService/RetrievePropertyValueStatisticsResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.PropertyValueStatistics> RetrievePropertyValueStatisticsAsync(byte[] queryByteArray, string exploredPropertyTypeUri, int startOffset, int resultsLimit, long minimumCount, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveLinkTypeStatistics", ReplyAction="http://tempuri.org/IService/RetrieveLinkTypeStatisticsResponse")]
        GPAS.Horizon.Access.SearchService.LinkTypeStatistics RetrieveLinkTypeStatistics(byte[] queryByteArray, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveLinkTypeStatistics", ReplyAction="http://tempuri.org/IService/RetrieveLinkTypeStatisticsResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.LinkTypeStatistics> RetrieveLinkTypeStatisticsAsync(byte[] queryByteArray, GPAS.AccessControl.AuthorizationParametters authParams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveLinkedObjectIDsByStatisticalQuery", ReplyAction="http://tempuri.org/IService/RetrieveLinkedObjectIDsByStatisticalQueryResponse")]
        long[] RetrieveLinkedObjectIDsByStatisticalQuery(byte[] queryByteArray, int PassObjectsCountLimit, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveLinkedObjectIDsByStatisticalQuery", ReplyAction="http://tempuri.org/IService/RetrieveLinkedObjectIDsByStatisticalQueryResponse")]
        System.Threading.Tasks.Task<long[]> RetrieveLinkedObjectIDsByStatisticalQueryAsync(byte[] queryByteArray, int PassObjectsCountLimit, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrievePropertyBarValuesStatistics", ReplyAction="http://tempuri.org/IService/RetrievePropertyBarValuesStatisticsResponse")]
        GPAS.Horizon.Access.SearchService.PropertyBarValues RetrievePropertyBarValuesStatistics(byte[] queryByteArray, string numericPropertyTypeUri, long bucketCount, double minValue, double maxValue, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrievePropertyBarValuesStatistics", ReplyAction="http://tempuri.org/IService/RetrievePropertyBarValuesStatisticsResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.PropertyBarValues> RetrievePropertyBarValuesStatisticsAsync(byte[] queryByteArray, string numericPropertyTypeUri, long bucketCount, double minValue, double maxValue, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IndexChecking", ReplyAction="http://tempuri.org/IService/IndexCheckingResponse")]
        GPAS.Horizon.Access.SearchService.SearchIndexCheckingResult IndexChecking(GPAS.Horizon.Access.SearchService.SearchIndexCheckingInput input, GPAS.AccessControl.AuthorizationParametters authorizationParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IndexChecking", ReplyAction="http://tempuri.org/IService/IndexCheckingResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchIndexCheckingResult> IndexCheckingAsync(GPAS.Horizon.Access.SearchService.SearchIndexCheckingInput input, GPAS.AccessControl.AuthorizationParametters authorizationParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsAvailable", ReplyAction="http://tempuri.org/IService/IsAvailableResponse")]
        void IsAvailable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsAvailable", ReplyAction="http://tempuri.org/IService/IsAvailableResponse")]
        System.Threading.Tasks.Task IsAvailableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTimeLineMaxFrequecyCount", ReplyAction="http://tempuri.org/IService/GetTimeLineMaxFrequecyCountResponse")]
        long GetTimeLineMaxFrequecyCount(string[] propertiesTypeUri, string binLevel, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTimeLineMaxFrequecyCount", ReplyAction="http://tempuri.org/IService/GetTimeLineMaxFrequecyCountResponse")]
        System.Threading.Tasks.Task<long> GetTimeLineMaxFrequecyCountAsync(string[] propertiesTypeUri, string binLevel, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTimeLineMaxDate", ReplyAction="http://tempuri.org/IService/GetTimeLineMaxDateResponse")]
        System.DateTime GetTimeLineMaxDate(string[] propertiesTypeUri, string binLevel, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTimeLineMaxDate", ReplyAction="http://tempuri.org/IService/GetTimeLineMaxDateResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetTimeLineMaxDateAsync(string[] propertiesTypeUri, string binLevel, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTimeLineMinDate", ReplyAction="http://tempuri.org/IService/GetTimeLineMinDateResponse")]
        System.DateTime GetTimeLineMinDate(string[] propertiesTypeUri, string binLevel, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTimeLineMinDate", ReplyAction="http://tempuri.org/IService/GetTimeLineMinDateResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetTimeLineMinDateAsync(string[] propertiesTypeUri, string binLevel, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformTextualSearch", ReplyAction="http://tempuri.org/IService/PerformTextualSearchResponse")]
        GPAS.Horizon.Access.SearchService.BaseSearchResult[] PerformTextualSearch(byte[] stream, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PerformTextualSearch", ReplyAction="http://tempuri.org/IService/PerformTextualSearchResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.BaseSearchResult[]> PerformTextualSearchAsync(byte[] stream, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDBPropertyByObjectId", ReplyAction="http://tempuri.org/IService/GetDBPropertyByObjectIdResponse")]
        GPAS.Horizon.Access.SearchService.SearchProperty[] GetDBPropertyByObjectId(long objectId, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDBPropertyByObjectId", ReplyAction="http://tempuri.org/IService/GetDBPropertyByObjectIdResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchProperty[]> GetDBPropertyByObjectIdAsync(long objectId, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetObject", ReplyAction="http://tempuri.org/IService/GetObjectResponse")]
        GPAS.Horizon.Access.SearchService.SearchObject GetObject(long objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetObject", ReplyAction="http://tempuri.org/IService/GetObjectResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject> GetObjectAsync(long objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDBPropertyByObjectIds", ReplyAction="http://tempuri.org/IService/GetDBPropertyByObjectIdsResponse")]
        GPAS.Horizon.Access.SearchService.SearchProperty[] GetDBPropertyByObjectIds(long[] propertyIds, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDBPropertyByObjectIds", ReplyAction="http://tempuri.org/IService/GetDBPropertyByObjectIdsResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchProperty[]> GetDBPropertyByObjectIdsAsync(long[] propertyIds, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypes", ReplyAction="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypesResponse")]
        GPAS.Horizon.Access.SearchService.SearchProperty[] GetSpecifiedPropertiesOfObjectsByTypes(long[] objectIDs, string[] specifiedPropertyTypeUris, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypes", ReplyAction="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypesResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchProperty[]> GetSpecifiedPropertiesOfObjectsByTypesAsync(long[] objectIDs, string[] specifiedPropertyTypeUris, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterNewDataSource", ReplyAction="http://tempuri.org/IService/RegisterNewDataSourceResponse")]
        void RegisterNewDataSource(long dsId, string name, GPAS.AccessControl.DataSourceType type, GPAS.AccessControl.ACL acl, string description, string createBy, string createdTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterNewDataSource", ReplyAction="http://tempuri.org/IService/RegisterNewDataSourceResponse")]
        System.Threading.Tasks.Task RegisterNewDataSourceAsync(long dsId, string name, GPAS.AccessControl.DataSourceType type, GPAS.AccessControl.ACL acl, string description, string createBy, string createdTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveDataSourceACLs", ReplyAction="http://tempuri.org/IService/RetrieveDataSourceACLsResponse")]
        GPAS.Horizon.Access.SearchService.SearchDataSourceACL[] RetrieveDataSourceACLs(long[] dataSourceIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveDataSourceACLs", ReplyAction="http://tempuri.org/IService/RetrieveDataSourceACLsResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchDataSourceACL[]> RetrieveDataSourceACLsAsync(long[] dataSourceIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetObjectByIDs", ReplyAction="http://tempuri.org/IService/GetObjectByIDsResponse")]
        GPAS.Horizon.Access.SearchService.SearchObject[] GetObjectByIDs(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetObjectByIDs", ReplyAction="http://tempuri.org/IService/GetObjectByIDsResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> GetObjectByIDsAsync(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedDataSourceId", ReplyAction="http://tempuri.org/IService/GetLastAsignedDataSourceIdResponse")]
        long GetLastAsignedDataSourceId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedDataSourceId", ReplyAction="http://tempuri.org/IService/GetLastAsignedDataSourceIdResponse")]
        System.Threading.Tasks.Task<long> GetLastAsignedDataSourceIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedObjectId", ReplyAction="http://tempuri.org/IService/GetLastAsignedObjectIdResponse")]
        long GetLastAsignedObjectId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedObjectId", ReplyAction="http://tempuri.org/IService/GetLastAsignedObjectIdResponse")]
        System.Threading.Tasks.Task<long> GetLastAsignedObjectIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedPropertyId", ReplyAction="http://tempuri.org/IService/GetLastAsignedPropertyIdResponse")]
        long GetLastAsignedPropertyId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedPropertyId", ReplyAction="http://tempuri.org/IService/GetLastAsignedPropertyIdResponse")]
        System.Threading.Tasks.Task<long> GetLastAsignedPropertyIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedRelationId", ReplyAction="http://tempuri.org/IService/GetLastAsignedRelationIdResponse")]
        long GetLastAsignedRelationId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAsignedRelationId", ReplyAction="http://tempuri.org/IService/GetLastAsignedRelationIdResponse")]
        System.Threading.Tasks.Task<long> GetLastAsignedRelationIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAssignedGraphaId", ReplyAction="http://tempuri.org/IService/GetLastAssignedGraphaIdResponse")]
        long GetLastAssignedGraphaId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastAssignedGraphaId", ReplyAction="http://tempuri.org/IService/GetLastAssignedGraphaIdResponse")]
        System.Threading.Tasks.Task<long> GetLastAssignedGraphaIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDBPropertyByObjectIdsWithoutAuthorization", ReplyAction="http://tempuri.org/IService/GetDBPropertyByObjectIdsWithoutAuthorizationResponse")]
        GPAS.Horizon.Access.SearchService.SearchProperty[] GetDBPropertyByObjectIdsWithoutAuthorization(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDBPropertyByObjectIdsWithoutAuthorization", ReplyAction="http://tempuri.org/IService/GetDBPropertyByObjectIdsWithoutAuthorizationResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchProperty[]> GetDBPropertyByObjectIdsWithoutAuthorizationAsync(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveRelationships", ReplyAction="http://tempuri.org/IService/RetrieveRelationshipsResponse")]
        GPAS.Horizon.Access.SearchService.SearchRelationship[] RetrieveRelationships(long[] relationshipIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveRelationships", ReplyAction="http://tempuri.org/IService/RetrieveRelationshipsResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship[]> RetrieveRelationshipsAsync(long[] relationshipIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationships", ReplyAction="http://tempuri.org/IService/GetRelationshipsResponse")]
        GPAS.Horizon.Access.SearchService.SearchRelationship[] GetRelationships(long[] relationshipIDs, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationships", ReplyAction="http://tempuri.org/IService/GetRelationshipsResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship[]> GetRelationshipsAsync(long[] relationshipIDs, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveNew", ReplyAction="http://tempuri.org/IService/SaveNewResponse")]
        GPAS.Horizon.Access.SearchService.SearchGraphArrangement SaveNew(GPAS.Horizon.Access.SearchService.SearchGraphArrangement dbGraphArrangement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveNew", ReplyAction="http://tempuri.org/IService/SaveNewResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchGraphArrangement> SaveNewAsync(GPAS.Horizon.Access.SearchService.SearchGraphArrangement dbGraphArrangement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGraphArrangements", ReplyAction="http://tempuri.org/IService/GetGraphArrangementsResponse")]
        GPAS.Horizon.Access.SearchService.SearchGraphArrangement[] GetGraphArrangements(GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGraphArrangements", ReplyAction="http://tempuri.org/IService/GetGraphArrangementsResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchGraphArrangement[]> GetGraphArrangementsAsync(GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGraphImage", ReplyAction="http://tempuri.org/IService/GetGraphImageResponse")]
        byte[] GetGraphImage(int dbGrapharagmentID, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGraphImage", ReplyAction="http://tempuri.org/IService/GetGraphImageResponse")]
        System.Threading.Tasks.Task<byte[]> GetGraphImageAsync(int dbGrapharagmentID, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGraphArrangementXML", ReplyAction="http://tempuri.org/IService/GetGraphArrangementXMLResponse")]
        byte[] GetGraphArrangementXML(int dbGraphArrangementID, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGraphArrangementXML", ReplyAction="http://tempuri.org/IService/GetGraphArrangementXMLResponse")]
        System.Threading.Tasks.Task<byte[]> GetGraphArrangementXMLAsync(int dbGraphArrangementID, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteGraph", ReplyAction="http://tempuri.org/IService/DeleteGraphResponse")]
        bool DeleteGraph(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteGraph", ReplyAction="http://tempuri.org/IService/DeleteGraphResponse")]
        System.Threading.Tasks.Task<bool> DeleteGraphAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObjectWithoutAuthPara" +
            "ms", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObjectWithoutAuthPara" +
            "msResponse")]
        GPAS.Horizon.Access.SearchService.SearchRelationship[] GetRelationshipsBySourceOrTargetObjectWithoutAuthParams(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObjectWithoutAuthPara" +
            "ms", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObjectWithoutAuthPara" +
            "msResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship[]> GetRelationshipsBySourceOrTargetObjectWithoutAuthParamsAsync(long[] objectIDs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSubsetOfConceptsByPermission", ReplyAction="http://tempuri.org/IService/GetSubsetOfConceptsByPermissionResponse")]
        long[] GetSubsetOfConceptsByPermission(GPAS.Horizon.Access.SearchService.ConceptType conceptType, long[] IDs, string[] groupNames, GPAS.AccessControl.Permission minimumPermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSubsetOfConceptsByPermission", ReplyAction="http://tempuri.org/IService/GetSubsetOfConceptsByPermissionResponse")]
        System.Threading.Tasks.Task<long[]> GetSubsetOfConceptsByPermissionAsync(GPAS.Horizon.Access.SearchService.ConceptType conceptType, long[] IDs, string[] groupNames, GPAS.AccessControl.Permission minimumPermission);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveTopNDataSourceACLs", ReplyAction="http://tempuri.org/IService/RetrieveTopNDataSourceACLsResponse")]
        GPAS.Horizon.Access.SearchService.SearchDataSourceACL[] RetrieveTopNDataSourceACLs(long topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RetrieveTopNDataSourceACLs", ReplyAction="http://tempuri.org/IService/RetrieveTopNDataSourceACLsResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchDataSourceACL[]> RetrieveTopNDataSourceACLsAsync(long topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceObject", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceObjectResponse")]
        GPAS.Horizon.Access.SearchService.SearchRelationship[] GetRelationshipsBySourceObject(long objectID, string typeUri, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceObject", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceObjectResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship[]> GetRelationshipsBySourceObjectAsync(long objectID, string typeUri, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObject", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObjectResponse")]
        GPAS.Horizon.Access.SearchService.SearchRelationship[] GetRelationshipsBySourceOrTargetObject(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObject", ReplyAction="http://tempuri.org/IService/GetRelationshipsBySourceOrTargetObjectResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship[]> GetRelationshipsBySourceOrTargetObjectAsync(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetExistingRelationship", ReplyAction="http://tempuri.org/IService/GetExistingRelationshipResponse")]
        GPAS.Horizon.Access.SearchService.SearchRelationship GetExistingRelationship(string typeUri, long source, long target, int direction, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetExistingRelationship", ReplyAction="http://tempuri.org/IService/GetExistingRelationshipResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship> GetExistingRelationshipAsync(string typeUri, long source, long target, int direction, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSourceLink", ReplyAction="http://tempuri.org/IService/GetSourceLinkResponse")]
        GPAS.Horizon.Access.SearchService.SearchRelationship[] GetSourceLink(long objectId, string typeUri, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSourceLink", ReplyAction="http://tempuri.org/IService/GetSourceLinkResponse")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship[]> GetSourceLinkAsync(long objectId, string typeUri, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypeAndValue", ReplyAction="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypeAndValueResponse" +
            "")]
        GPAS.Horizon.Access.SearchService.SearchProperty[] GetSpecifiedPropertiesOfObjectsByTypeAndValue(long[] objectIDs, string propertyTypeUri, string propertyValue, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypeAndValue", ReplyAction="http://tempuri.org/IService/GetSpecifiedPropertiesOfObjectsByTypeAndValueResponse" +
            "")]
        System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchProperty[]> GetSpecifiedPropertiesOfObjectsByTypeAndValueAsync(long[] objectIDs, string propertyTypeUri, string propertyValue, GPAS.AccessControl.AuthorizationParametters authorizationParametters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : GPAS.Horizon.Access.SearchService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<GPAS.Horizon.Access.SearchService.IService>, GPAS.Horizon.Access.SearchService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GPAS.Horizon.Access.SearchService.SearchObject[] QuickSearch(string keyword, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.QuickSearch(keyword, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> QuickSearchAsync(string keyword, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.QuickSearchAsync(keyword, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchObject[] PerformFilterSearch(byte[] stream, System.Nullable<int> count, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformFilterSearch(stream, count, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> PerformFilterSearchAsync(byte[] stream, System.Nullable<int> count, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformFilterSearchAsync(stream, count, authorizationParametters);
        }
        
        public long[] PerformSelectMatching(byte[] stream, long[] ObjectIDs, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformSelectMatching(stream, ObjectIDs, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<long[]> PerformSelectMatchingAsync(byte[] stream, long[] ObjectIDs, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformSelectMatchingAsync(stream, ObjectIDs, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.PropertiesMatchingResults[] FindPropertiesSameWith(GPAS.Dispatch.Entities.Concepts.KProperty[] properties, int totalResultsThreshold, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.FindPropertiesSameWith(properties, totalResultsThreshold, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.PropertiesMatchingResults[]> FindPropertiesSameWithAsync(GPAS.Dispatch.Entities.Concepts.KProperty[] properties, int totalResultsThreshold, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.FindPropertiesSameWithAsync(properties, totalResultsThreshold, authorizationParametters);
        }
        
        public GPAS.Dispatch.Entities.Publish.SynchronizationResult SyncPublishChanges(GPAS.Horizon.Access.SearchService.AddedConcepts addedConcepts, GPAS.Horizon.Access.SearchService.ModifiedConcepts modifiedConcepts, long dataSourceID, bool isContinousPublish) {
            return base.Channel.SyncPublishChanges(addedConcepts, modifiedConcepts, dataSourceID, isContinousPublish);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.Entities.Publish.SynchronizationResult> SyncPublishChangesAsync(GPAS.Horizon.Access.SearchService.AddedConcepts addedConcepts, GPAS.Horizon.Access.SearchService.ModifiedConcepts modifiedConcepts, long dataSourceID, bool isContinousPublish) {
            return base.Channel.SyncPublishChangesAsync(addedConcepts, modifiedConcepts, dataSourceID, isContinousPublish);
        }
        
        public void FinalizeContinousPublish() {
            base.Channel.FinalizeContinousPublish();
        }
        
        public System.Threading.Tasks.Task FinalizeContinousPublishAsync() {
            return base.Channel.FinalizeContinousPublishAsync();
        }
        
        public void ResetIndexes(bool DeleteExistingIndexes) {
            base.Channel.ResetIndexes(DeleteExistingIndexes);
        }
        
        public System.Threading.Tasks.Task ResetIndexesAsync(bool DeleteExistingIndexes) {
            return base.Channel.ResetIndexesAsync(DeleteExistingIndexes);
        }
        
        public bool IsDataIndicesStable() {
            return base.Channel.IsDataIndicesStable();
        }
        
        public System.Threading.Tasks.Task<bool> IsDataIndicesStableAsync() {
            return base.Channel.IsDataIndicesStableAsync();
        }
        
        public void RemoveSearchIndexes() {
            base.Channel.RemoveSearchIndexes();
        }
        
        public System.Threading.Tasks.Task RemoveSearchIndexesAsync() {
            return base.Channel.RemoveSearchIndexesAsync();
        }
        
        public void Optimize() {
            base.Channel.Optimize();
        }
        
        public System.Threading.Tasks.Task OptimizeAsync() {
            return base.Channel.OptimizeAsync();
        }
        
        public GPAS.Horizon.Access.SearchService.SearchObject[] PerformGeoCircleSearch(GPAS.Horizon.Access.SearchService.CircleSearchCriteria circleSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformGeoCircleSearch(circleSearchCriteria, maxResult, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> PerformGeoCircleSearchAsync(GPAS.Horizon.Access.SearchService.CircleSearchCriteria circleSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformGeoCircleSearchAsync(circleSearchCriteria, maxResult, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchObject[] PerformGeoPolygonSearch(GPAS.Horizon.Access.SearchService.PolygonSearchCriteria polygonSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformGeoPolygonSearch(polygonSearchCriteria, maxResult, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> PerformGeoPolygonSearchAsync(GPAS.Horizon.Access.SearchService.PolygonSearchCriteria polygonSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformGeoPolygonSearchAsync(polygonSearchCriteria, maxResult, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchObject[] PerformGeoCircleFilterSearch(GPAS.Horizon.Access.SearchService.CircleSearchCriteria circleSearchCriteria, GPAS.FilterSearch.CriteriaSet filterSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformGeoCircleFilterSearch(circleSearchCriteria, filterSearchCriteria, maxResult, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> PerformGeoCircleFilterSearchAsync(GPAS.Horizon.Access.SearchService.CircleSearchCriteria circleSearchCriteria, GPAS.FilterSearch.CriteriaSet filterSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformGeoCircleFilterSearchAsync(circleSearchCriteria, filterSearchCriteria, maxResult, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchObject[] PerformGeoPolygonFilterSearch(GPAS.Horizon.Access.SearchService.PolygonSearchCriteria polygonSearchCriteria, GPAS.FilterSearch.CriteriaSet filterSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformGeoPolygonFilterSearch(polygonSearchCriteria, filterSearchCriteria, maxResult, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> PerformGeoPolygonFilterSearchAsync(GPAS.Horizon.Access.SearchService.PolygonSearchCriteria polygonSearchCriteria, GPAS.FilterSearch.CriteriaSet filterSearchCriteria, int maxResult, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformGeoPolygonFilterSearchAsync(polygonSearchCriteria, filterSearchCriteria, maxResult, authorizationParametters);
        }
        
        public string GetDocumentPossibleExtractedContent(long docID) {
            return base.Channel.GetDocumentPossibleExtractedContent(docID);
        }
        
        public System.Threading.Tasks.Task<string> GetDocumentPossibleExtractedContentAsync(long docID) {
            return base.Channel.GetDocumentPossibleExtractedContentAsync(docID);
        }
        
        public void AddNewGroupFieldsToSearchServer(string[] newGroupsName) {
            base.Channel.AddNewGroupFieldsToSearchServer(newGroupsName);
        }
        
        public System.Threading.Tasks.Task AddNewGroupFieldsToSearchServerAsync(string[] newGroupsName) {
            return base.Channel.AddNewGroupFieldsToSearchServerAsync(newGroupsName);
        }
        
        public GPAS.Dispatch.Entities.Publish.SynchronizationResult SynchronizeDataSource(GPAS.AccessControl.DataSourceInfo dataSourceInfo) {
            return base.Channel.SynchronizeDataSource(dataSourceInfo);
        }
        
        public System.Threading.Tasks.Task<GPAS.Dispatch.Entities.Publish.SynchronizationResult> SynchronizeDataSourceAsync(GPAS.AccessControl.DataSourceInfo dataSourceInfo) {
            return base.Channel.SynchronizeDataSourceAsync(dataSourceInfo);
        }
        
        public GPAS.AccessControl.DataSourceInfo[] GetDataSources(long dataSourceType, int star, int count, string filter, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetDataSources(dataSourceType, star, count, filter, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.AccessControl.DataSourceInfo[]> GetDataSourcesAsync(long dataSourceType, int star, int count, string filter, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetDataSourcesAsync(dataSourceType, star, count, filter, authorizationParametters);
        }
        
        public GPAS.AccessControl.DataSourceInfo[] GetAllDataSources(int count, string filter, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetAllDataSources(count, filter, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.AccessControl.DataSourceInfo[]> GetAllDataSourcesAsync(int count, string filter, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetAllDataSourcesAsync(count, filter, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.BoundingBox[] FaceDetection(byte[] imageFile, string extention, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.FaceDetection(imageFile, extention, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.BoundingBox[]> FaceDetectionAsync(byte[] imageFile, string extention, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.FaceDetectionAsync(imageFile, extention, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.RetrievedFace[] FaceRecognition(byte[] imageFile, string extention, GPAS.Horizon.Access.SearchService.BoundingBox[] boundingBoxs, int count, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.FaceRecognition(imageFile, extention, boundingBoxs, count, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.RetrievedFace[]> FaceRecognitionAsync(byte[] imageFile, string extention, GPAS.Horizon.Access.SearchService.BoundingBox[] boundingBoxs, int count, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.FaceRecognitionAsync(imageFile, extention, boundingBoxs, count, authorizationParametters);
        }
        
        public bool IsMachneVisonServiceInstalled() {
            return base.Channel.IsMachneVisonServiceInstalled();
        }
        
        public System.Threading.Tasks.Task<bool> IsMachneVisonServiceInstalledAsync() {
            return base.Channel.IsMachneVisonServiceInstalledAsync();
        }
        
        public GPAS.Horizon.Access.SearchService.QueryResult RunStatisticalQuery(byte[] queryByteArray, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.RunStatisticalQuery(queryByteArray, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.QueryResult> RunStatisticalQueryAsync(byte[] queryByteArray, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.RunStatisticalQueryAsync(queryByteArray, authParams);
        }
        
        public long[] RetrieveObjectIDsByStatisticalQuery(byte[] queryByteArray, int PassObjectsCountLimit, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.RetrieveObjectIDsByStatisticalQuery(queryByteArray, PassObjectsCountLimit, authParams);
        }
        
        public System.Threading.Tasks.Task<long[]> RetrieveObjectIDsByStatisticalQueryAsync(byte[] queryByteArray, int PassObjectsCountLimit, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.RetrieveObjectIDsByStatisticalQueryAsync(queryByteArray, PassObjectsCountLimit, authParams);
        }
        
        public GPAS.Horizon.Access.SearchService.PropertyValueStatistics RetrievePropertyValueStatistics(byte[] queryByteArray, string exploredPropertyTypeUri, int startOffset, int resultsLimit, long minimumCount, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.RetrievePropertyValueStatistics(queryByteArray, exploredPropertyTypeUri, startOffset, resultsLimit, minimumCount, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.PropertyValueStatistics> RetrievePropertyValueStatisticsAsync(byte[] queryByteArray, string exploredPropertyTypeUri, int startOffset, int resultsLimit, long minimumCount, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.RetrievePropertyValueStatisticsAsync(queryByteArray, exploredPropertyTypeUri, startOffset, resultsLimit, minimumCount, authParams);
        }
        
        public GPAS.Horizon.Access.SearchService.LinkTypeStatistics RetrieveLinkTypeStatistics(byte[] queryByteArray, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.RetrieveLinkTypeStatistics(queryByteArray, authParams);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.LinkTypeStatistics> RetrieveLinkTypeStatisticsAsync(byte[] queryByteArray, GPAS.AccessControl.AuthorizationParametters authParams) {
            return base.Channel.RetrieveLinkTypeStatisticsAsync(queryByteArray, authParams);
        }
        
        public long[] RetrieveLinkedObjectIDsByStatisticalQuery(byte[] queryByteArray, int PassObjectsCountLimit, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.RetrieveLinkedObjectIDsByStatisticalQuery(queryByteArray, PassObjectsCountLimit, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<long[]> RetrieveLinkedObjectIDsByStatisticalQueryAsync(byte[] queryByteArray, int PassObjectsCountLimit, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.RetrieveLinkedObjectIDsByStatisticalQueryAsync(queryByteArray, PassObjectsCountLimit, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.PropertyBarValues RetrievePropertyBarValuesStatistics(byte[] queryByteArray, string numericPropertyTypeUri, long bucketCount, double minValue, double maxValue, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.RetrievePropertyBarValuesStatistics(queryByteArray, numericPropertyTypeUri, bucketCount, minValue, maxValue, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.PropertyBarValues> RetrievePropertyBarValuesStatisticsAsync(byte[] queryByteArray, string numericPropertyTypeUri, long bucketCount, double minValue, double maxValue, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.RetrievePropertyBarValuesStatisticsAsync(queryByteArray, numericPropertyTypeUri, bucketCount, minValue, maxValue, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchIndexCheckingResult IndexChecking(GPAS.Horizon.Access.SearchService.SearchIndexCheckingInput input, GPAS.AccessControl.AuthorizationParametters authorizationParameters) {
            return base.Channel.IndexChecking(input, authorizationParameters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchIndexCheckingResult> IndexCheckingAsync(GPAS.Horizon.Access.SearchService.SearchIndexCheckingInput input, GPAS.AccessControl.AuthorizationParametters authorizationParameters) {
            return base.Channel.IndexCheckingAsync(input, authorizationParameters);
        }
        
        public void IsAvailable() {
            base.Channel.IsAvailable();
        }
        
        public System.Threading.Tasks.Task IsAvailableAsync() {
            return base.Channel.IsAvailableAsync();
        }
        
        public long GetTimeLineMaxFrequecyCount(string[] propertiesTypeUri, string binLevel, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetTimeLineMaxFrequecyCount(propertiesTypeUri, binLevel, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<long> GetTimeLineMaxFrequecyCountAsync(string[] propertiesTypeUri, string binLevel, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetTimeLineMaxFrequecyCountAsync(propertiesTypeUri, binLevel, authorizationParametters);
        }
        
        public System.DateTime GetTimeLineMaxDate(string[] propertiesTypeUri, string binLevel, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetTimeLineMaxDate(propertiesTypeUri, binLevel, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetTimeLineMaxDateAsync(string[] propertiesTypeUri, string binLevel, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetTimeLineMaxDateAsync(propertiesTypeUri, binLevel, authorizationParametters);
        }
        
        public System.DateTime GetTimeLineMinDate(string[] propertiesTypeUri, string binLevel, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetTimeLineMinDate(propertiesTypeUri, binLevel, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetTimeLineMinDateAsync(string[] propertiesTypeUri, string binLevel, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetTimeLineMinDateAsync(propertiesTypeUri, binLevel, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.BaseSearchResult[] PerformTextualSearch(byte[] stream, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformTextualSearch(stream, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.BaseSearchResult[]> PerformTextualSearchAsync(byte[] stream, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.PerformTextualSearchAsync(stream, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchProperty[] GetDBPropertyByObjectId(long objectId, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetDBPropertyByObjectId(objectId, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchProperty[]> GetDBPropertyByObjectIdAsync(long objectId, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetDBPropertyByObjectIdAsync(objectId, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchObject GetObject(long objectId) {
            return base.Channel.GetObject(objectId);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject> GetObjectAsync(long objectId) {
            return base.Channel.GetObjectAsync(objectId);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchProperty[] GetDBPropertyByObjectIds(long[] propertyIds, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetDBPropertyByObjectIds(propertyIds, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchProperty[]> GetDBPropertyByObjectIdsAsync(long[] propertyIds, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetDBPropertyByObjectIdsAsync(propertyIds, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchProperty[] GetSpecifiedPropertiesOfObjectsByTypes(long[] objectIDs, string[] specifiedPropertyTypeUris, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetSpecifiedPropertiesOfObjectsByTypes(objectIDs, specifiedPropertyTypeUris, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchProperty[]> GetSpecifiedPropertiesOfObjectsByTypesAsync(long[] objectIDs, string[] specifiedPropertyTypeUris, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetSpecifiedPropertiesOfObjectsByTypesAsync(objectIDs, specifiedPropertyTypeUris, authorizationParametters);
        }
        
        public void RegisterNewDataSource(long dsId, string name, GPAS.AccessControl.DataSourceType type, GPAS.AccessControl.ACL acl, string description, string createBy, string createdTime) {
            base.Channel.RegisterNewDataSource(dsId, name, type, acl, description, createBy, createdTime);
        }
        
        public System.Threading.Tasks.Task RegisterNewDataSourceAsync(long dsId, string name, GPAS.AccessControl.DataSourceType type, GPAS.AccessControl.ACL acl, string description, string createBy, string createdTime) {
            return base.Channel.RegisterNewDataSourceAsync(dsId, name, type, acl, description, createBy, createdTime);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchDataSourceACL[] RetrieveDataSourceACLs(long[] dataSourceIDs) {
            return base.Channel.RetrieveDataSourceACLs(dataSourceIDs);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchDataSourceACL[]> RetrieveDataSourceACLsAsync(long[] dataSourceIDs) {
            return base.Channel.RetrieveDataSourceACLsAsync(dataSourceIDs);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchObject[] GetObjectByIDs(long[] objectIDs) {
            return base.Channel.GetObjectByIDs(objectIDs);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchObject[]> GetObjectByIDsAsync(long[] objectIDs) {
            return base.Channel.GetObjectByIDsAsync(objectIDs);
        }
        
        public long GetLastAsignedDataSourceId() {
            return base.Channel.GetLastAsignedDataSourceId();
        }
        
        public System.Threading.Tasks.Task<long> GetLastAsignedDataSourceIdAsync() {
            return base.Channel.GetLastAsignedDataSourceIdAsync();
        }
        
        public long GetLastAsignedObjectId() {
            return base.Channel.GetLastAsignedObjectId();
        }
        
        public System.Threading.Tasks.Task<long> GetLastAsignedObjectIdAsync() {
            return base.Channel.GetLastAsignedObjectIdAsync();
        }
        
        public long GetLastAsignedPropertyId() {
            return base.Channel.GetLastAsignedPropertyId();
        }
        
        public System.Threading.Tasks.Task<long> GetLastAsignedPropertyIdAsync() {
            return base.Channel.GetLastAsignedPropertyIdAsync();
        }
        
        public long GetLastAsignedRelationId() {
            return base.Channel.GetLastAsignedRelationId();
        }
        
        public System.Threading.Tasks.Task<long> GetLastAsignedRelationIdAsync() {
            return base.Channel.GetLastAsignedRelationIdAsync();
        }
        
        public long GetLastAssignedGraphaId() {
            return base.Channel.GetLastAssignedGraphaId();
        }
        
        public System.Threading.Tasks.Task<long> GetLastAssignedGraphaIdAsync() {
            return base.Channel.GetLastAssignedGraphaIdAsync();
        }
        
        public GPAS.Horizon.Access.SearchService.SearchProperty[] GetDBPropertyByObjectIdsWithoutAuthorization(long[] objectIDs) {
            return base.Channel.GetDBPropertyByObjectIdsWithoutAuthorization(objectIDs);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchProperty[]> GetDBPropertyByObjectIdsWithoutAuthorizationAsync(long[] objectIDs) {
            return base.Channel.GetDBPropertyByObjectIdsWithoutAuthorizationAsync(objectIDs);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchRelationship[] RetrieveRelationships(long[] relationshipIDs) {
            return base.Channel.RetrieveRelationships(relationshipIDs);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship[]> RetrieveRelationshipsAsync(long[] relationshipIDs) {
            return base.Channel.RetrieveRelationshipsAsync(relationshipIDs);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchRelationship[] GetRelationships(long[] relationshipIDs, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetRelationships(relationshipIDs, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship[]> GetRelationshipsAsync(long[] relationshipIDs, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetRelationshipsAsync(relationshipIDs, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchGraphArrangement SaveNew(GPAS.Horizon.Access.SearchService.SearchGraphArrangement dbGraphArrangement) {
            return base.Channel.SaveNew(dbGraphArrangement);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchGraphArrangement> SaveNewAsync(GPAS.Horizon.Access.SearchService.SearchGraphArrangement dbGraphArrangement) {
            return base.Channel.SaveNewAsync(dbGraphArrangement);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchGraphArrangement[] GetGraphArrangements(GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetGraphArrangements(authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchGraphArrangement[]> GetGraphArrangementsAsync(GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetGraphArrangementsAsync(authorizationParametters);
        }
        
        public byte[] GetGraphImage(int dbGrapharagmentID, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetGraphImage(dbGrapharagmentID, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetGraphImageAsync(int dbGrapharagmentID, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetGraphImageAsync(dbGrapharagmentID, authorizationParametters);
        }
        
        public byte[] GetGraphArrangementXML(int dbGraphArrangementID, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetGraphArrangementXML(dbGraphArrangementID, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetGraphArrangementXMLAsync(int dbGraphArrangementID, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetGraphArrangementXMLAsync(dbGraphArrangementID, authorizationParametters);
        }
        
        public bool DeleteGraph(int id) {
            return base.Channel.DeleteGraph(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGraphAsync(int id) {
            return base.Channel.DeleteGraphAsync(id);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchRelationship[] GetRelationshipsBySourceOrTargetObjectWithoutAuthParams(long[] objectIDs) {
            return base.Channel.GetRelationshipsBySourceOrTargetObjectWithoutAuthParams(objectIDs);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship[]> GetRelationshipsBySourceOrTargetObjectWithoutAuthParamsAsync(long[] objectIDs) {
            return base.Channel.GetRelationshipsBySourceOrTargetObjectWithoutAuthParamsAsync(objectIDs);
        }
        
        public long[] GetSubsetOfConceptsByPermission(GPAS.Horizon.Access.SearchService.ConceptType conceptType, long[] IDs, string[] groupNames, GPAS.AccessControl.Permission minimumPermission) {
            return base.Channel.GetSubsetOfConceptsByPermission(conceptType, IDs, groupNames, minimumPermission);
        }
        
        public System.Threading.Tasks.Task<long[]> GetSubsetOfConceptsByPermissionAsync(GPAS.Horizon.Access.SearchService.ConceptType conceptType, long[] IDs, string[] groupNames, GPAS.AccessControl.Permission minimumPermission) {
            return base.Channel.GetSubsetOfConceptsByPermissionAsync(conceptType, IDs, groupNames, minimumPermission);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchDataSourceACL[] RetrieveTopNDataSourceACLs(long topN) {
            return base.Channel.RetrieveTopNDataSourceACLs(topN);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchDataSourceACL[]> RetrieveTopNDataSourceACLsAsync(long topN) {
            return base.Channel.RetrieveTopNDataSourceACLsAsync(topN);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchRelationship[] GetRelationshipsBySourceObject(long objectID, string typeUri, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetRelationshipsBySourceObject(objectID, typeUri, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship[]> GetRelationshipsBySourceObjectAsync(long objectID, string typeUri, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetRelationshipsBySourceObjectAsync(objectID, typeUri, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchRelationship[] GetRelationshipsBySourceOrTargetObject(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetRelationshipsBySourceOrTargetObject(objectIDs, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship[]> GetRelationshipsBySourceOrTargetObjectAsync(long[] objectIDs, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetRelationshipsBySourceOrTargetObjectAsync(objectIDs, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchRelationship GetExistingRelationship(string typeUri, long source, long target, int direction, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetExistingRelationship(typeUri, source, target, direction, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship> GetExistingRelationshipAsync(string typeUri, long source, long target, int direction, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetExistingRelationshipAsync(typeUri, source, target, direction, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchRelationship[] GetSourceLink(long objectId, string typeUri, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetSourceLink(objectId, typeUri, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchRelationship[]> GetSourceLinkAsync(long objectId, string typeUri, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetSourceLinkAsync(objectId, typeUri, authorizationParametters);
        }
        
        public GPAS.Horizon.Access.SearchService.SearchProperty[] GetSpecifiedPropertiesOfObjectsByTypeAndValue(long[] objectIDs, string propertyTypeUri, string propertyValue, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetSpecifiedPropertiesOfObjectsByTypeAndValue(objectIDs, propertyTypeUri, propertyValue, authorizationParametters);
        }
        
        public System.Threading.Tasks.Task<GPAS.Horizon.Access.SearchService.SearchProperty[]> GetSpecifiedPropertiesOfObjectsByTypeAndValueAsync(long[] objectIDs, string propertyTypeUri, string propertyValue, GPAS.AccessControl.AuthorizationParametters authorizationParametters) {
            return base.Channel.GetSpecifiedPropertiesOfObjectsByTypeAndValueAsync(objectIDs, propertyTypeUri, propertyValue, authorizationParametters);
        }
    }
}
