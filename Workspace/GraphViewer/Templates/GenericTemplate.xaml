<!--
    Based on Themed-, ER- & DynamicGraphXTemplates Templates from GraphX (v 2.0.2) Showcase Example
 -->
<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:gxl="http://schemas.panthernet.ru/graphx/"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:converters="clr-namespace:GPAS.Graph.GraphViewer.Converters"
    xmlns:local="clr-namespace:GPAS.Graph.GraphViewer.Foundations">

    <BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
    <converters:NumberOfInnerVerticesToDisplayBadgeConverter x:Key="NumberOfInnerVerticesToDisplayBadgeConverter" />

    <!--<Style TargetType="{x:Type local:GraphArea}">
        <Setter Property="Background" Value="LightGray"/>
    </Style>-->

    <!-- VERTEX CONTROL -->
    <Style TargetType="{x:Type local:VertexControl}">
        <!--<Setter Property="Background" Value="Black"/>
        <Setter Property="BorderThickness" Value="5,3,5,3"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
        <Setter Property="BorderBrush" Value="#FF393939"/>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VertexControl}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
							CornerRadius="10,10,10,10" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <!--<ContentPresenter Content="{TemplateBinding Vertex}" />-->
                            <local:Image Details="{Binding ImageDetails,
                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:VertexControl}}}"
                                         Margin="3" Grid.Row="0" Width="80" Height="80"/>
                            <TextBlock Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" 
                                       Foreground="{DynamicResource MaterialDesignBody}"
                                       MaxWidth="80" Grid.Row="1" HorizontalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock Text="{Binding Text}" Foreground="{DynamicResource MaterialDesignBody}" Margin="3" 
                           VerticalAlignment="Center" />
            </Setter.Value>
        </Setter>

        <!-- VERTEX DRAGGING CONTROL -->
        <Setter Property="gxl:DragBehaviour.IsDragEnabled" Value="True"/>
        <Setter Property="gxl:DragBehaviour.UpdateEdgesOnMove" Value="True" />

        <!--این تغییر رنگ با قرار گرفتن موس روی گره رنگی می کند و با خارج شدن موس از محدوده به حالت اول برمی گردد-->
        <Setter Property="gxl:HighlightBehaviour.IsHighlightEnabled" Value="False"/>

        <Style.Triggers>
            <Trigger Property="IsGroup" Value="True">
                <Setter Property="Template" Value="{DynamicResource groupVertexControlTemplate}"/>
            </Trigger>

            <Trigger Property="IsSourceSet" Value="True">
                <Setter Property="Template" Value="{DynamicResource sourceSetVertexControlTemplate}"/>
            </Trigger>

            <Trigger Property="IsMaster" Value="True">
                <Setter Property="Template" Value="{DynamicResource masterVertexControlTemplate}"/>
            </Trigger>

            <Trigger Property="IsSlave" Value="True">
                <Setter Property="Template" Value="{DynamicResource slaveVertexControlTemplate}"/>
            </Trigger>

            <Trigger Property="IsFrozen" Value="False">
                <Setter Property="gxl:DragBehaviour.IsDragEnabled" Value="True" />
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsFrozen" Value="True">
                <Setter Property="gxl:DragBehaviour.IsDragEnabled" Value="False" />
                <Setter Property="Cursor" Value="Arrow"/>
                <Setter Property="Opacity" Value="0.45" />
            </Trigger>

            <Trigger Property="gxl:HighlightBehaviour.Highlighted" Value="False">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="gxl:HighlightBehaviour.Highlighted" Value="True">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Group VERTEX CONTROL template -->
    <ControlTemplate x:Key="groupVertexControlTemplate" TargetType="{x:Type gxl:VertexControl}">
        <Border CornerRadius="10,10,10,10" Width="200" Height="220" Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
            <Border>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="4*"/>
                        <RowDefinition Height="6*"/>
                    </Grid.RowDefinitions>
                    <!--Group Heading-->
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="6*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Color="#AADDDDDD" Offset="0.5"/>
                                <!--<GradientStop Color="Transparent" Offset="1"/>-->
                            </LinearGradientBrush>
                        </Grid.Background>
                        <!--Group Heading Icon-->
                        <Grid Grid.Column="0" Grid.RowSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <local:Image Margin="1" Grid.Column="0" VerticalAlignment="Center" Details="{Binding ImageDetails, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:VertexControl}}}"/>
                            <!--Grid.Row="1"-->
                            <local:Image Margin="1" Grid.Column="2" VerticalAlignment="Center" Details="{Binding ImageDetails, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:VertexControl}}}"/>
                        </Grid>
                        <local:Image Margin="7" Grid.Column="0" Grid.RowSpan="2" Details="{Binding ImageDetails, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:VertexControl}}}"/>
                        <!--Group Heading Title-->
                        <TextBlock Text="{Binding Text}" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontWeight="Bold"/>
                        <TextBlock Text="{Binding SubGroupsCount, StringFormat=({0}), UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" FontStyle="Italic"/>
                    </Grid>
                    <!--Group Members part-->
                    <TextBlock Background="#AADDDDDD" TextAlignment="Left" FlowDirection="LeftToRight" Text="{Binding SubGroupsTitles, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1"/>
                </Grid>
            </Border>
        </Border>
    </ControlTemplate>

    <!-- SourceSet VERTEX CONTROL template -->
    <ControlTemplate x:Key="sourceSetVertexControlTemplate" TargetType="{x:Type gxl:VertexControl}">
        <Border CornerRadius="10,10,10,10" Width="200" Height="220" Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
            <Border>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="4*"/>
                        <RowDefinition Height="6*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <!--Group Heading-->
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="6*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Color="#AADDDDDD" Offset="0.5"/>
                                <!--<GradientStop Color="Transparent" Offset="1"/>-->
                            </LinearGradientBrush>
                        </Grid.Background>
                        <!--Group Heading Icon-->
                        <Grid Grid.Column="0" Grid.RowSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                        </Grid>
                        <local:Image Margin="7" Grid.Column="0" Grid.RowSpan="2" Details="{Binding ImageDetails, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:VertexControl}}}"/>
                        <!--Group Heading Title-->
                        <TextBlock Text="{Binding Text}" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontWeight="Bold"/>
                    </Grid>
                    <!--Group Members part-->
                    <TextBlock Background="#AADDDDDD" 
                               Padding="5,0"
                               TextWrapping="NoWrap"
                               TextTrimming="WordEllipsis"
                               FlowDirection="RightToLeft"
                               ToolTip="{Binding SubGroupsTitles, UpdateSourceTrigger=PropertyChanged}"
                               Text="{Binding SubGroupsTitles, UpdateSourceTrigger=PropertyChanged}"
                               Grid.Row="1"/>
                </Grid>
            </Border>
        </Border>
    </ControlTemplate>

    <!-- Master VERTEX CONTROL template -->
    <ControlTemplate x:Key="masterVertexControlTemplate" TargetType="{x:Type gxl:VertexControl}">
        <materialDesign:Badged Badge="{Binding NumberOfInnerVertices,
            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:VertexControl}},
            Converter={StaticResource NumberOfInnerVerticesToDisplayBadgeConverter}}"
                               BadgeColorZoneMode="Inverted">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="10,10,10,10" Padding="{TemplateBinding Padding}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    
                    <local:Image Details="{Binding ImageDetails,
                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:VertexControl}}}"
                                 Margin="3" Grid.Row="0" Width="80" Height="80"/>
                    <TextBlock Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" 
                               Foreground="{DynamicResource MaterialDesignBody}"
                               MaxWidth="80" Grid.Row="1" HorizontalAlignment="Center" TextTrimming="CharacterEllipsis"/>

                    <materialDesign:PackIcon Kind="ChessKing" Width="16" 
                                             HorizontalAlignment="Right" VerticalAlignment="Top"
                                             Foreground="{DynamicResource MaterialDesignBody}"/>
                </Grid>
            </Border>
        </materialDesign:Badged>
    </ControlTemplate>

    <!-- Slave VERTEX CONTROL template -->
    <ControlTemplate x:Key="slaveVertexControlTemplate" TargetType="{x:Type gxl:VertexControl}">
        <materialDesign:Badged Badge="{Binding NumberOfInnerVertices,
            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:VertexControl}},
            Converter={StaticResource NumberOfInnerVerticesToDisplayBadgeConverter}}"
                               BadgeColorZoneMode="Inverted">
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="10,10,10,10" Padding="{TemplateBinding Padding}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <local:Image Details="{Binding ImageDetails,
                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:VertexControl}}}"
                                 Margin="3" Grid.Row="0" Width="80" Height="80"/>
                    <TextBlock Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" 
                               Foreground="{DynamicResource MaterialDesignBody}"
                               MaxWidth="80" Grid.Row="1" HorizontalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                </Grid>
            </Border>
        </materialDesign:Badged>
    </ControlTemplate>

    <!-- Vertex/Edge IMAGE control -->
    <Style TargetType="{x:Type local:Image}">
        <Style.Triggers>
            <Trigger Property="Details" Value="ShowImage">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:Image}">
                            <Image Source="{Binding IconPath}" Stretch="Uniform"></Image>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Details" Value="DoNotShowImage">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:Image}">
                            <Ellipse Fill="Gray" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- EDGE CONTROL -->
    <Style TargetType="{x:Type local:EdgeControl}">
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Foreground" Value="Silver"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock Text="{Binding ToolTip}" Foreground="{DynamicResource MaterialDesignBody}" Margin="3" VerticalAlignment="Center"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <!-- This part is based on GraphX ver 2.3.7.0 Showcase Example Generic Template -->
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Path x:Name="PART_hideEdgePath" Stroke="Transparent" StrokeThickness="7"
                              Data="{Binding ElementName=PART_edgePath, Path=Data}"
                              ToolTip="{TemplateBinding ToolTip}"/>

                        <Path x:Name="PART_edgePath" Stroke="{TemplateBinding Foreground}"
                              StrokeThickness="1"
                              ToolTip="{TemplateBinding ToolTip}"/>

                        <gxl:DefaultEdgePointer x:Name="PART_EdgePointerForTarget" NeedRotation="true">
                            <Path Width="15" Height="15" Data="M0,0.5 L1,1 1,0" Stretch="Uniform"
                                  Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EdgeControl}}}"
                                  Visibility="{Binding IsDirectedToTarget, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisConverter}}"/>
                        </gxl:DefaultEdgePointer>

                        <gxl:DefaultEdgePointer x:Name="PART_EdgePointerForSource" NeedRotation="True">
                            <Path Width="15" Height="15" Data="M0,0.5 L1,1 1,0" Stretch="Uniform"
                                  Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EdgeControl}}}"
                                  Visibility="{Binding IsDirectedToSource, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisConverter}}"/>
                        </gxl:DefaultEdgePointer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="gxl:HighlightBehaviour.Highlighted" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="StrokeThickness" Value="5"/>
            </Trigger>
            <Trigger Property="IsReflexive" Value="true">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <Path x:Name="PART_edgePath" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" ToolTip="{TemplateBinding ToolTip}"/>
                                <!-- Arrow vector source: https://www.flaticon.com/free-icon/arrow-circle_32303 -->
                                <Path x:Name="PART_SelfLoopedEdge" Width="20" Height="20" Margin="-5" Stretch="Uniform" Fill="{TemplateBinding Foreground}"
                                     Data="M434.961,270.163c0,110.241-89.684,199.92-199.923,199.92c-110.235,0-199.917-89.679-199.917-199.92
		                                c0-36.44,9.915-72.129,28.658-103.178l52.163,31.487c-13.013,21.56-19.89,46.353-19.896,71.697
		                                c0,76.64,62.35,138.985,138.985,138.985c76.642,0,138.989-62.346,138.989-138.985c0-73.864-57.961-134.275-130.759-138.566h-29.808
		                                l25.1,63.541c0.843,2.128,0.16,4.558-1.669,5.932c-1.827,1.38-4.351,1.374-6.168-0.026l-124.806-95.965
		                                c-1.25-0.966-1.989-2.444-1.989-4.037c0-1.584,0.739-3.074,1.989-4.037L230.724,1.052C231.64,0.346,232.727,0,233.824,0
		                                c1.082,0,2.154,0.34,3.068,1.022c1.829,1.374,2.512,3.807,1.669,5.938l-25.1,63.534l21.586-0.254c7.72,0,33.325,2.598,37.545,3.591
		                                C364.931,91.46,434.961,172.766,434.961,270.163z">
                                    <Path.LayoutTransform>
                                        <RotateTransform Angle="210"/>
                                    </Path.LayoutTransform>
                                </Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--EDGE LABLE CONTROL -->
    <Style TargetType="{x:Type gxl:AttachableEdgeLabelControl}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type gxl:AttachableEdgeLabelControl}">
                    <StackPanel Orientation="Horizontal"  ToolTip="{Binding AttachNode.Edge.ToolTip, UpdateSourceTrigger=PropertyChanged}">
                        <local:Image Details="{Binding ImageDetails, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EdgeControl}}}" Width="32" Height="32"
                                     DataContext="{Binding AttachNode.Edge, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Margin="3" VerticalAlignment="Center" MaxWidth="200" Foreground="{DynamicResource MaterialDesignBody}"
                                          Text="{Binding AttachNode.Edge.Text, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayForSelfLoopedEdges" Value="False"/>
    </Style>

    <!--Text-Blocks' long content trimming-->
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>
</ResourceDictionary>