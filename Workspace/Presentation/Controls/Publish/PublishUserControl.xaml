<UserControl x:Class="GPAS.Workspace.Presentation.Controls.Publish.PublishUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GPAS.Workspace.Presentation.Controls.Publish"
             xmlns:resource="clr-namespace:GPAS.Workspace.Presentation.Properties"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             Loaded="UserControl_Loaded"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        <local:ChangeTypeToIconConverter x:Key="IconConverter"/>
        <local:ChangeTypeToForegroundConverter x:Key="ForegroundConverter"/>

        <DataTemplate x:Key="level4">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" MaxWidth="400"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <CheckBox Name="Level4CheckBox" Grid.Column="0"
                          IsEnabled="{Binding Path=IsNotResolvedObject, UpdateSourceTrigger=PropertyChanged}"
                          IsChecked="{Binding Path=IsUnpublishedComponentValueSelected, UpdateSourceTrigger=PropertyChanged}" 
                          Checked="UnpublishedComponentValue_Checked" Unchecked="UnpublishedComponentValue_Unchecked"
                          IsThreeState="False" VerticalAlignment="Center" />

                <TextBlock Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged }" 
                           TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" MaxHeight="20"
                           Margin="5 0" ToolTip="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           VerticalAlignment="Center" Grid.Column="1"/>

                <materialDesign:PackIcon VerticalAlignment="Center" Grid.Column="2" Height="20" Width="20"                                          
                                         Kind="{Binding ChangeType, Converter={StaticResource IconConverter}}" 
                                         Foreground="{Binding ChangeType, Converter={StaticResource ForegroundConverter}}"/>
            </Grid>
        </DataTemplate>

        <HierarchicalDataTemplate x:Key="level3" 
                                  ItemsSource="{Binding ComponentValues, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  ItemTemplate="{StaticResource level4}">
            <TextBlock Text="{Binding Path=ComponentType}"/>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="level2" 
                                  ItemsSource="{Binding UnpublishObjectComponents, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  ItemTemplate="{StaticResource level3}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <CheckBox Name="Level2CheckBox" Margin="5 0" Grid.Column="0"
                          IsChecked="{Binding Path=IsUnpublishedObjectSelected, UpdateSourceTrigger=PropertyChanged}" 
                          IsThreeState="False" VerticalAlignment="Center" HorizontalAlignment="Center"                          
                          IsEnabled="{Binding Path=EnableSelection, UpdateSourceTrigger=PropertyChanged}"                           
                          Unchecked="UnpublishedObject_Unchecked" Checked="UnpublishedObject_Checked"/>
                <Border Grid.Column="1" Margin="1" 
                        Background="#FFF7F6F6" 
                        BorderBrush="Gray" 
                        BorderThickness="1" 
                        Height="16" Width="16">
                    <Image Source="{Binding Path=UnpublishedObjectIcon}" Stretch="Fill" VerticalAlignment="Center" 
                           HorizontalAlignment="Center"/>
                </Border>

                <TextBlock Text="{Binding UnpublishedObjectDisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            Margin="1" 
                            ToolTip="{Binding UnpublishedObjectDisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center"
                            Grid.Column="2"/>
            </Grid>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="level1" 
                                  ItemsSource="{Binding UnpublishedObjects, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  ItemTemplate="{StaticResource level2}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0" Name="Level1CheckBox" Checked="Level1CheckBox_Checked" 
                          Unchecked="Level1CheckBox_Unchecked" IsChecked="True"/>

                <TextBlock Text="{Binding ConceptType}" Grid.Column="1" Foreground="{DynamicResource MaterialDesignBody}"
                           Margin="5 0" FontSize="14"/>
            </Grid>
        </HierarchicalDataTemplate>

        <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">5</system:Double>
        <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">5</system:Double>

        <Duration x:Key="ExpandDuration">0:0:0.6</Duration>
        <Duration x:Key="CollapseDuration">0:0:0.6</Duration>

        <KeyTime x:Key="ExpandKeyTime">0:0:0.3</KeyTime>
        <KeyTime x:Key="CollapseKeyTime">0:0:0.3</KeyTime>

        <Style x:Key="MaterialDesignExpanderToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPathRotateTransform" Storyboard.TargetProperty="Angle">
                                                <EasingDoubleKeyFrame KeyTime="{StaticResource ExpandKeyTime}" Value="180"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ExpandPathRotateTransform" Storyboard.TargetProperty="Angle">
                                                <EasingDoubleKeyFrame KeyTime="{StaticResource CollapseKeyTime}" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <materialDesign:PackIcon x:Name="ExpandPath" Kind="ChevronDown"
                                      Opacity="0.38" Height="24" Width="24"
                                      Foreground="{TemplateBinding Foreground}"
                                      RenderTransformOrigin="0.5 0.5">
                                <materialDesign:PackIcon.RenderTransform>
                                    <RotateTransform x:Name="ExpandPathRotateTransform"/>
                                </materialDesign:PackIcon.RenderTransform>
                            </materialDesign:PackIcon>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaterialDesignHorizontalHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" Padding="10">
                            <Grid Background="{DynamicResource MaterialDesignPaper}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="16"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ContentPresenter Grid.Column="0"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>

                                <ToggleButton x:Name="ExpanderButton"
                                          Grid.Column="2"
                                          VerticalAlignment="Center"
                                          RenderTransformOrigin="0.5 0.5"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignExpanderToggleButton}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}" Value="Up">
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="180"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>

                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaterialDesignVerticalHeaderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" Padding="0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="16"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <ToggleButton x:Name="ExpanderButton"
                                          Grid.Row="0"
                                          VerticalAlignment="Center"
                                          RenderTransformOrigin="0.5 0.5"
                                          Foreground="{TemplateBinding Foreground}"
                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignExpanderToggleButton}">
                                            <Style.Triggers>

                                                <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}" Value="Left">
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="90"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=Expander, AncestorLevel=1}}" Value="Right">
                                                    <Setter Property="RenderTransform">
                                                        <Setter.Value>
                                                            <RotateTransform Angle="-90"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>

                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>

                                <ContentPresenter Grid.Row="2"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>

                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaterialDesignExpanderParent" TargetType="{x:Type Expander}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <ControlTemplate.Resources>

                        </ControlTemplate.Resources>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ExpansionStates">

                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="Expanded">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                             Storyboard.TargetName="ContentPanel" 
                                                             From="0" To="1"
                                                             Duration="{StaticResource ExpandDuration}"/>
                                                <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform" 
                                                             Storyboard.TargetProperty="(ScaleTransform.ScaleY)" 
                                                             From="0" To="1"
                                                             Duration="{StaticResource ExpandDuration}">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </VisualTransition>

                                        <VisualTransition To="Collapsed">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                             Storyboard.TargetName="ContentPanel" 
                                                             From="1" To="0" 
                                                             Duration="{StaticResource CollapseDuration}"/>
                                                <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform" 
                                                             Storyboard.TargetProperty="(ScaleTransform.ScaleY)" 
                                                             From="1" To="0"
                                                             Duration="{StaticResource CollapseDuration}">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>

                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                         Storyboard.TargetName="ContentPanel" 
                                                         To="1" 
                                                         Duration="0"/>
                                            <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform" 
                                                         Storyboard.TargetProperty="(ScaleTransform.ScaleY)" 
                                                         To="1" 
                                                         Duration="0" />
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="Collapsed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="ContentPanel"
                                                         To="0"
                                                         Duration="0"/>
                                            <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform"
                                                         Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                         To="0"
                                                         Duration="0" />
                                        </Storyboard>
                                    </VisualState>

                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <DockPanel Background="{TemplateBinding Background}">
                                <ToggleButton Name="HeaderSite"
                                              Background="{DynamicResource MaterialDesignPaper}"
                                          Focusable="False"
                                          IsTabStop="False"
                                          DockPanel.Dock="Top"
                                          BorderThickness="0" Cursor="Hand"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource MaterialDesignHorizontalHeaderStyle}"
                                          
                                          Opacity="0.87"
                                          Foreground="{TemplateBinding Foreground}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"/>

                                <Border Name="ContentSite">
                                    <Border.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform x:Name="ContentSiteScaleTransform" />
                                            <RotateTransform Angle="0"/>
                                        </TransformGroup>
                                    </Border.LayoutTransform>

                                    <Grid Name="ContentPanel"
                                      Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Grid.LayoutTransform>
                                            <RotateTransform Angle="0"/>
                                        </Grid.LayoutTransform>

                                        <ContentPresenter Name="PART_Content" Focusable="False"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>

                                    </Grid>
                                </Border>

                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ExpandDirection" Value="Right">
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource MaterialDesignVerticalHeaderStyle}"/>
                                <!--<Setter Property="LayoutTransform.(TransformGroup.Children)[1].(RotateTransform.Angle)" TargetName="ContentSite" Value="90" />
                            <Setter Property="Angle" TargetName="ContentPanelRotateTransform" Value="-90" />-->
                            </Trigger>

                            <Trigger Property="ExpandDirection" Value="Left">
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource MaterialDesignVerticalHeaderStyle}"/>
                                <!--<Setter Property="Angle" TargetName="ContentSiteRotateTransform" Value="-90" />
                            <Setter Property="Angle" TargetName="ContentPanelRotateTransform" Value="90" />-->
                            </Trigger>

                            <Trigger Property="ExpandDirection" Value="Up">
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource MaterialDesignHorizontalHeaderStyle}"/>
                            </Trigger>

                            <Trigger Property="ExpandDirection" Value="Down">
                                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Top"/>
                                <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource MaterialDesignHorizontalHeaderStyle}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Name="mainGrid" Grid.Row="0" Background="{DynamicResource MaterialDesignCardBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>


            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Background="{DynamicResource MaterialDesignPaper}" >
                    <TextBlock Style="{StaticResource MaterialDesignSubtitle2TextBlock}" Margin="10 12"
                                   Foreground="{DynamicResource MaterialDesignBody}">
                                <Run Text= "{x:Static resource:Resources.AddedColon}"/>                                                                                                                                            
                                <Run Text= "{Binding AddedEntitiesCount , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>                                                                                                                        
                                <Run Text= "{x:Static resource:Resources.Entities}"/>
                                <Run Text= ", "/>
                                <Run Text="{Binding AddedEventsCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text= "{x:Static resource:Resources.Events}"/>                    
                                <Run Text= ", "/>
                                <Run Text="{Binding AddedMediasCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text= "{x:Static resource:Resources.Documents}"/>
                    </TextBlock>
                </Border>

                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Name="AddedItemsScrollViewer" 
                              PreviewMouseWheel="AddedItemsScrollViewer_PreviewMouseWheel">
                    <TreeView Name="AddedConceptsTreeview" ItemTemplate="{StaticResource level1}" >
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                </ScrollViewer>
            </Grid>

            <Border Grid.Column="1" Background="{DynamicResource MaterialDesignDivider}" Width="1"
                    SnapsToDevicePixels="True" Margin="2 0"/>

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0" Background="{DynamicResource MaterialDesignPaper}" >
                    <TextBlock Style="{StaticResource MaterialDesignSubtitle2TextBlock}" Margin="10 12"
                                   Foreground="{DynamicResource MaterialDesignBody}">
                                <Run Text= "{x:Static resource:Resources.ChangesColon}"/>                                                                                                                                            
                                <Run Text= "{Binding ChangedEntitiesCount , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>                                                                                                                        
                                <Run Text= "{x:Static resource:Resources.Entities}"/>
                                <Run Text= ", "/>
                                <Run Text="{Binding ChangedEventsCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text= "{x:Static resource:Resources.Events}"/>                    
                                <Run Text= ", "/>
                                <Run Text="{Binding ChangedMediasCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Run Text= "{x:Static resource:Resources.Documents}"/>
                    </TextBlock>
                </Border>

                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Name="ChangedItemsScrollViewer"  
                              PreviewMouseWheel="ChangedItemsScrollViewer_PreviewMouseWheel">
                    <TreeView Name="ChangedConceptsTreeview" ItemTemplate="{StaticResource level1}" >
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                </ScrollViewer>
            </Grid>
        </Grid>

        <Grid Name="NotificationGrid" Grid.Row="1" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <materialDesign:PackIcon Grid.Column="0" Kind="Warning" Margin="5" Foreground="OrangeRed" VerticalAlignment="Center"/>
            <TextBlock Name="permissionTextBlock" Foreground="OrangeRed" Grid.Column="1" Margin="0 5 5 5"
                       Text="{x:Static resource:Resources.According_to_applied_settings_you_have_not_write_permission_on_imported_data}"
                       Style="{StaticResource MaterialDesignSubtitle2TextBlock}"/>
        </Grid>
    </Grid>
</UserControl>
