<UserControl x:Class="GPAS.Workspace.Presentation.Controls.CustomSearchAround.CustomSearchAroundUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:common="clr-namespace:GPAS.Workspace.Presentation.Controls.Common"
             xmlns:commonConverters="clr-namespace:GPAS.Workspace.Presentation.Controls.Common.Converters"
             xmlns:local="clr-namespace:GPAS.Workspace.Presentation.Controls.CustomSearchAround"
             xmlns:converter="clr-namespace:GPAS.Workspace.Presentation.Controls.CustomSearchAround.Converter"
             xmlns:model="clr-namespace:GPAS.Workspace.Presentation.Controls.CustomSearchAround.Model"
             xmlns:op="clr-namespace:GPAS.Workspace.Presentation.Controls.OntologyPickers"
             xmlns:propertyValueTemplates="clr-namespace:GPAS.Workspace.Presentation.Controls.PropertyValueTemplates"
             xmlns:waiting="clr-namespace:GPAS.Workspace.Presentation.Controls.Waiting"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1100"
             Loaded="UserControl_Loaded" Foreground="{DynamicResource MaterialDesignBody}" >
    <UserControl.Resources>
        <commonConverters:StringToCollectionStringConverter x:Key="StringToCollectionStringConverter"/>
        <converter:PinnedStatusToTooltipMessageConverter x:Key="PinnedStatusToTooltipMessageConverter"/>
        <converter:PinnedStatusToIconConverter x:Key="PinnedStatusToIconConverter"/>
        <materialDesign:BooleanToVisibilityConverter x:Key="ReverseBooleanToVisibilityConverter"
                                                     FalseValue="Visible" TrueValue="Collapsed"/>
        <commonConverters:NullToBooleanConverter x:Key="NullToBooleanConverter"/>

        <ContextMenu x:Key="RecentFileListContextMenu" Style="{StaticResource ContextMenuStyle}">
            <ContextMenu.Resources>
                <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                    <Setter Property="FontSize" Value="13"/>
                    <Setter Property="Padding" Value="10 5"/>
                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                </Style>
                <Style TargetType="materialDesign:PackIcon" BasedOn="{StaticResource ContextMenuItemsIcon}"/>
            </ContextMenu.Resources>

            <MenuItem Name="OpenMenuItem" Header="Open" Click="OpenMenuItem_Click">
                <MenuItem.Icon>
                    <Grid>
                        <materialDesign:PackIcon Kind="FolderOpen"/>
                    </Grid>
                </MenuItem.Icon>
            </MenuItem>

            <Separator Margin="5 2"/>

            <MenuItem Name="PinMenuItem" Header="Pin to this list" Click="PinMenuItem_Click"
                      Visibility="{Binding Pinned, Converter={StaticResource ReverseBooleanToVisibilityConverter}}">
                <MenuItem.Icon>
                    <Grid>
                        <materialDesign:PackIcon Kind="PinOutline"/>
                    </Grid>
                </MenuItem.Icon>
            </MenuItem>

            <MenuItem Name="UnpinMenuItem" Header="Unpin from this list" Click="UnpinMenuItem_Click"
                      Visibility="{Binding Pinned, Converter={StaticResource bool2VisibilityConverter}}">
                <MenuItem.Icon>
                    <Grid>
                        <materialDesign:PackIcon Kind="PinOffOutline"/>
                    </Grid>
                </MenuItem.Icon>
            </MenuItem>

            <MenuItem Name="RemoveMenuItem" Header="Remove from this list" Click="RemoveMenuItem_Click">
                <MenuItem.Icon>
                    <Grid>
                        <materialDesign:PackIcon Kind="Delete"/>
                    </Grid>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </UserControl.Resources>
    
    <Grid x:Name="MainGrid" Background="#00ffffff" AllowDrop="True" DragOver="MainGrid_DragOver" Drop="MainGrid_Drop">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" MinWidth="250"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid x:Name="SideBarGrid" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Name="RecentCSAGrid" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <common:ButtonWithIcon Grid.Row="0" x:Name="SaveButton" HorizontalAlignment="Left" Icon="ContentSave" Content="Save"
                                           ContentMargin="5" IsEnabled="{Binding CustomSearchAroundModel.IsValid}"
                                           Click="SaveButton_Click"/>

                <common:ButtonWithIcon Grid.Row="1" x:Name="OpenButton" HorizontalAlignment="Left" Icon="FolderOpen"
                                           Content="Open other" ContentMargin="5"
                                           Click="OpenButton_Click"/>

                <TextBlock Grid.Row="2" Text="Recent files" FontSize="16" FontWeight="Bold" Margin="10 10 0 10"
                               Foreground="{DynamicResource MaterialDesignBody}"/>

                <ListView Grid.Row="3" Name="RecentFileListView" ItemsSource="{Binding RecentLoadedFilesManager.DisplayedItems}"
                          SelectionMode="Single" Margin="10 5" FocusVisualStyle="{x:Null}"
                          ScrollViewer.CanContentScroll="False">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="BorderThickness" Value="0 0 0 1" />
                            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}" />
                            <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>
                            <EventSetter Event="KeyDown" Handler="ListViewItem_KeyDown"/>
                            <Setter Property="ContextMenu" Value="{StaticResource RecentFileListContextMenu}"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0">
                                    <materialDesign:PackIcon Kind="FileOutline" Height="25" Width="25" Margin="2"
                                                             Foreground="{DynamicResource MaterialDesignBody}"/>
                                    <Border CornerRadius="1" Background="{DynamicResource MaterialDesignBody}"  Height="8" Width="15" 
                                            HorizontalAlignment="Left" VerticalAlignment="Top" Margin="11 13 10 10">
                                        <TextBlock Text="CSA" Foreground="{DynamicResource MaterialDesignBackground}" Margin="1 0"
                                                   FontSize="6" FontWeight="Regular"/>
                                    </Border>
                                </Grid>

                                <TextBlock Grid.Column="1" Text="{Binding FileName}" Foreground="{DynamicResource MaterialDesignBody}"
                                           Style="{StaticResource MaterialDesignCaptionTextBlock}" MaxWidth="300"
                                           ToolTip="{Binding FileName}" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                           TextTrimming="CharacterEllipsis"/>

                                <Button Grid.Column="2" Name="PinButton" Width="25" Height="25" 
                                        Style="{StaticResource MaterialDesignIconButton}" HorizontalAlignment="Right"
                                        Click="PinButton_Click"
                                        ToolTip="{Binding Pinned, Converter={StaticResource PinnedStatusToTooltipMessageConverter}}">
                                    <materialDesign:PackIcon Height="20" Width="20"
                                                             Kind="{Binding Pinned, Converter={StaticResource PinnedStatusToIconConverter}}"/>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

            <Grid Grid.Row="2" Margin="10">
                <Button x:Name="SearchButton" Content="Search" HorizontalAlignment="Stretch"
                        Click="SearchButton_Click"
                        IsEnabled="{Binding CustomSearchAroundModel.IsValid}"/>
            </Grid>
        </Grid>

        <Grid x:Name="CSAMappingGrid" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*" MinHeight="300"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="2*" MinHeight="100"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Background="{DynamicResource MaterialDesignPaper}" Margin="0 10 10 5">
                <local:CSAGraphUserControl BorderThickness="1" BorderBrush="{StaticResource MaterialDesignBackground}"/>
            </Grid>

            <GridSplitter Grid.Row="1" Margin="0 0 10 0" Height="4"
                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />

            <Grid Grid.Row="2" Margin="0 5 10 10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Margin="0 0 5 0" BorderThickness="1" BorderBrush="{StaticResource MaterialDesignBackground}">
                    <Grid x:Name="AddPropertyGrid" Background="{StaticResource MaterialDesignPaper}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <TextBlock Text="Add Property" HorizontalAlignment="Center" Style="{StaticResource SecondHeader}"
                                   Margin="5 5 5 10"/>

                        <Grid Grid.Row="1" Margin="0 0 5 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0" Margin="0 5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="Objects" HorizontalAlignment="Center" Margin="0 0 0 10"/>

                                <Separator Grid.Column="1" Margin="15 25 10 5" Background="{StaticResource MaterialDesignBody}"/>

                                <ListView Name="ObjectsListView" Grid.Row="1" Margin="5 0 0 0" ScrollViewer.CanContentScroll="False"
                                      ItemsSource="{Binding CustomSearchAroundModel.ObjectCollection}" >
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
                                            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                                            <EventSetter Event="KeyDown" Handler="ObjectsListViewItem_KeyDown"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <Image Grid.Column="1"  Source="{Binding IconPath}" Height="25" Width="25"
                                                       VerticalAlignment="Center" Margin="0 0 5 0"/>

                                                <TextBlock Grid.Column="2" Text="{Binding Title}" VerticalAlignment="Center"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>

                            <Separator Grid.Column="1" Margin="5 15" Background="{StaticResource MaterialDesignBody}">
                                <Separator.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </Separator.LayoutTransform>
                            </Separator>

                            <Grid Grid.Column="2" Margin="0 5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="Available Properties" HorizontalAlignment="Center" Margin="0 0 0 10"/>

                                <Separator Grid.Column="1" Margin="10 25 10 5" Background="{StaticResource MaterialDesignBody}"/>

                                <op:PropertyTypePicker x:Name="propertyTypePickerControl" Grid.Row="1" DisplayMode="List" 
                                                       ObjectTypeUriCollection="{Binding CustomSearchAroundModel.SelectedObject.TypeUri,
                                    Converter={StaticResource StringToCollectionStringConverter}}"
                                                       SelectedItemChanged="PropertyTypePickerControl_SelectedItemChanged"
                                                       SelectedItemReselected="PropertyTypePickerControl_SelectedItemReselected"
                                                       DisplayCheckIconForSelectableItems="False"
                                                       IsEnabled="{Binding CustomSearchAroundModel.SelectedObject, 
                                    Converter={StaticResource NullToBooleanConverter}}"/>
                            </Grid>
                        </Grid>
                    </Grid>
                </Border>

                <Border Grid.Column="2" Margin="5 0 0 0" BorderThickness="1" BorderBrush="{StaticResource MaterialDesignBackground}">
                    <Grid x:Name="PropertyValueCriteriaGrid"
                          Background="{StaticResource MaterialDesignPaper}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <TextBlock Text="Property value criteria" HorizontalAlignment="Center" Margin="5 5 5 10"
                                   Style="{StaticResource SecondHeader}"/>

                        <Grid Grid.Row="1" Margin="5 0 0 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <common:ButtonWithIcon x:Name="ClearAllPropertiesButton" Grid.Row="0" HorizontalAlignment="Right"
                                                   ToolTip="Clear all criteria" Content="Clear all" Icon="Eraser" ContentMargin="5"
                                                   Click="ClearAllPropertiesButton_Click"/>

                            <DataGrid Name="PropertiesDataGrid"
                                      ItemsSource="{Binding CustomSearchAroundModel.SelectedObject.Properties}"
                                      SelectionMode="Single" CanUserAddRows="False" Grid.Row="1" Background="Transparent"
                                      AutoGenerateColumns="False" VirtualizingStackPanel.VirtualizationMode="Standard">
                                <DataGrid.Style>
                                    <Style TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedDefection.WarningType}"
                                                         Value="{x:Static model:WarningType.ValueNotMachWithDataType}">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard Storyboard="{StaticResource ItemListWarningBackgroundStoryboard}"/>
                                                </DataTrigger.EnterActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.Style>
                                <DataGrid.RowStyle>
                                    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                                        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                                        <EventSetter Event="KeyDown" Handler="PropertiesDataGridRow_KeyDown"/>
                                    </Style>
                                </DataGrid.RowStyle>
                                <DataGrid.Resources>
                                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="DataGridColumnHeader">
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                        <Setter Property="Padding" Value="5" />
                                    </Style>

                                    <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </Style>
                                </DataGrid.Resources>

                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="Name" Width="2*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Title}" ToolTip="{Binding Title}"
                                                           VerticalAlignment="Center" MaxHeight="50" TextTrimming="CharacterEllipsis" 
                                                           TextWrapping="NoWrap" ToolTipService.Placement="MousePoint"
                                                           ToolTipService.IsEnabled="{Binding Title.Length, FallbackValue=false,
                                                    TargetNullValue=0}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Width="Auto">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="=" VerticalAlignment="Center"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Header="Criteria value" Width="3*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <propertyValueTemplates:PropertyValueTemplatesControl
                                                    x:Name="PropertyValueTemplatesControl"
                                                    SearchMode="True"
                                                    Foreground="{DynamicResource MaterialDesignBody}"
                                                    PropertyValue="{Binding CriteriaValue, UpdateSourceTrigger=PropertyChanged,
                                                    Mode=TwoWay}"
                                                    DataType="{Binding DataType, UpdateSourceTrigger=PropertyChanged}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn Width="Auto">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="RemovePropertyButton" ToolTip="Remove" Width="27" Height="27"
                                                        Margin="0 0 5 0" Style="{StaticResource MaterialDesignIconButton}"
                                                        VerticalContentAlignment="Center" Click="RemovePropertyButton_Click">
                                                    <materialDesign:PackIcon Height="20" Width="20" Kind="Close" Foreground="Red"/>
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
        </Grid>

        <waiting:WaitingControl x:Name="WaitingControl" Grid.ColumnSpan="2" MessageFontSize="16" ProgressSize="60"/>
    </Grid>
</UserControl>
