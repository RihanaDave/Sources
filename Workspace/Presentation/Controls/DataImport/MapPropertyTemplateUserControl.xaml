<UserControl x:Class="GPAS.Workspace.Presentation.Controls.DataImport.MapPropertiesListUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:go="clr-namespace:GPAS.Ontology;assembly=GPAS.Ontology"
             xmlns:common="clr-namespace:GPAS.Workspace.Presentation.Controls.Common"
             xmlns:commonConverters="clr-namespace:GPAS.Workspace.Presentation.Controls.Common.Converters"
             xmlns:converters="clr-namespace:GPAS.Workspace.Presentation.Controls.DataImport.Converters"
             xmlns:map="clr-namespace:GPAS.Workspace.Presentation.Controls.DataImport.Model.Map"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" d:DesignHeight="400" d:DesignWidth="500">

    <UserControl.Resources>
        <converters:PropertyTypeToControlVisibilityConverter x:Key="VisibilityConverter"/>
        <commonConverters:ValuesEqualityConverter x:Key="ValuesEqualityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <commonConverters:CollectionCountToEnableConverter x:Key="CountToEnableConverter"/>
        <converters:ValidationStatusToVisibilityConverter x:Key="ValidationStatusToVisibilityConverter"/>
        <converters:ValidationStatusToForegroundConverter x:Key="ValidationStatusToForegroundConverter"/>
        <commonConverters:AllBooleanToVisibilityConverter x:Key="AllBooleanToVisibilityConverter" />
        <converters:DataTypePropertyToVisibilityConverter x:Key="PropertyTypeToVisibilityConverter">
            <converters:DataTypePropertyToVisibilityConverter.VisibleDataTypes>
                <x:Array Type="go:BaseDataTypes">
                    <go:BaseDataTypes>DateTime</go:BaseDataTypes>
                    <!--<go:BaseDataTypes>GeoTime</go:BaseDataTypes>
                    <go:BaseDataTypes>GeoPoint</go:BaseDataTypes>-->
                </x:Array>
            </converters:DataTypePropertyToVisibilityConverter.VisibleDataTypes>
        </converters:DataTypePropertyToVisibilityConverter>

        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ResolutionPolicyValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="map:ResolutionPolicy" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <converters:MappingPropertiesToEnableConverter x:Key="MappingPropertiesToEnableConverter"/>
        <commonConverters:ImportStatusToIsEnableConverter x:Key="ImportStatusToIsEnableConverter"/>
        <commonConverters:BooleanAndImportStatusToBooleanConverter x:Key="BooleanAndConverter"/>
        <commonConverters:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" Margin="5 0 0 0"
                    Visibility="{Binding Map.SelectedObject.ResolutionPolicyChangeable, IsAsync=True, FallbackValue=Collapsed,
            Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="Resolve policy: " VerticalAlignment="Center"/>
            <ComboBox Name="ResolutionPolicyComboBox" VerticalAlignment="Center" HorizontalContentAlignment="Left" Margin="5 0"
                      ItemsSource="{Binding Source={StaticResource ResolutionPolicyValues}}"
                      SelectedItem="{Binding Map.SelectedObject.ResolutionPolicy, FallbackValue=SetNew}"
                      IsEnabled="{Binding Map.OwnerDataSource.ImportStatus, 
                Converter={StaticResource ImportStatusToIsEnableConverter}}"
                      >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" Tag="{Binding}" Margin="2 2 12 2"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>

        <!--پاک کردن تمام ویژگی‌ها-->
        <common:ButtonWithIcon 
            Grid.Row="0" Grid.Column="2" x:Name="ClearAllButton" Click="ClearAllButtonOnClick" ToolTip="Clear all properties"
            Content="Clear all" Icon="Eraser" ContentMargin="5" HorizontalAlignment="Right">
            <common:ButtonWithIcon.IsEnabled>
                <MultiBinding Converter="{StaticResource MappingPropertiesToEnableConverter}">
                    <Binding Path="Map.SelectedObject.Properties" IsAsync="True"/>
                    <Binding Path="Map.SelectedObject.Properties.Count" IsAsync="True"/>
                    <Binding Path="Map.OwnerDataSource.ImportStatus" IsAsync="True"/>
                </MultiBinding>
            </common:ButtonWithIcon.IsEnabled>
        </common:ButtonWithIcon>

        <Grid Grid.Row="1" Grid.ColumnSpan="3" Background="Transparent">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Map.SelectedWarning.WarningType}"
                                     Value="{x:Static map:MapWarningType.HasDuplicateProperties}">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ItemListWarningBackgroundStoryboard}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <DataGrid Name="PropertiesDataGrid" ItemsSource="{Binding Map.SelectedObject.Properties, IsAsync=True}" SelectionMode="Single"
                  CanUserAddRows="False" Background="Transparent"
                  AutoGenerateColumns="False"
                  VirtualizingStackPanel.VirtualizationMode="Standard">
                <DataGrid.Style>
                    <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Map.SelectedWarning.WarningType}"
                                     Value="{x:Static map:MapWarningType.NotSetDisplayName}">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource ItemListWarningBackgroundStoryboard}"/>
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Resources>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="DataGridColumnHeader">
                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                        <Setter Property="Padding" Value="5" />
                    </Style>

                    <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Name">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Title}" ToolTip="{Binding Title}"
                                       VerticalAlignment="Center" MaxHeight="50" TextTrimming="CharacterEllipsis" 
                                       TextWrapping="NoWrap" ToolTipService.Placement="MousePoint"
                                       ToolTipService.IsEnabled="{Binding Title.Length, FallbackValue=false, TargetNullValue=0}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Sample value" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock VerticalAlignment="Center" MaxHeight="50" TextTrimming="CharacterEllipsis" 
                                       TextWrapping="NoWrap" ToolTipService.Placement="MousePoint">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Text" Value="{Binding SampleValue}"/>
                                            <Setter Property="ToolTip" Value="{Binding SampleValue}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SampleValue.Length, FallbackValue=0, TargetNullValue=0}" Value="0">
                                                    <Setter Property="Text" Value="Please set value"/>
                                                    <Setter Property="Opacity" Value=".5"/>
                                                    <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Width="150">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Right">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <materialDesign:PackIcon
                                    Grid.Column="0" Kind="LabelOutline" Height="20" Width="20" Background="#00FFFFFF"
                                    VerticalAlignment="Center" Margin="5 0" ToolTip="Display name"
                                    Visibility="{Binding ElementName=SetAsDisplayNameCheckBox, Path=IsChecked,
                                    Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <materialDesign:PackIcon.LayoutTransform>
                                            <RotateTransform Angle="180" />
                                        </materialDesign:PackIcon.LayoutTransform>
                                    </materialDesign:PackIcon>

                                    <materialDesign:PackIcon
                                    Grid.Column="1" Kind="Merge" Height="20" Width="20" Background="#00FFFFFF"
                                    VerticalAlignment="Center" Margin="5 0" ToolTip="Resolve based on this property"
                                    Visibility="{Binding HasResolution, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <materialDesign:PackIcon.LayoutTransform>
                                            <RotateTransform Angle="270" />
                                        </materialDesign:PackIcon.LayoutTransform>
                                    </materialDesign:PackIcon>

                                    <materialDesign:PackIcon
                                    Grid.Column="2" Kind="Warning" Height="20" Width="20" Background="#00FFFFFF"
                                    VerticalAlignment="Center" Margin="5 0"
                                    ToolTip="{Binding SampleValueValidationStatus.Message}"
                                    Foreground="{Binding SampleValueValidationStatus.Status, 
                                    Converter={StaticResource ValidationStatusToForegroundConverter}}"
                                    Visibility="{Binding SampleValueValidationStatus.Status,
                                    Converter={StaticResource ValidationStatusToVisibilityConverter}}"/>

                                    <materialDesign:PopupBox 
                                    Name="ActionToolBar" Grid.Column="3" HorizontalAlignment="Right"
                                    BorderThickness="0" Padding="0" PlacementMode="BottomAndAlignRightEdges">
                                        <materialDesign:PopupBox.ToggleContent>
                                            <materialDesign:PackIcon Kind="DotsVertical" Height="25" Width="25" 
                                                             Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                                        </materialDesign:PopupBox.ToggleContent>

                                        <StackPanel MinWidth="140">
                                            <StackPanel.Resources>
                                                <Style TargetType="{x:Type Grid}">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="False">
                                                            <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                    <EventSetter Event="MouseDown" Handler="PropertiesListViewOnItemsMouseDown"/>
                                                    <Setter Property="Margin" Value="0 5"/>
                                                </Style>
                                            </StackPanel.Resources>

                                            <!--انتخاب به عنوان نام نمایشی-->
                                            <Button Visibility="{Binding OwnerObject.DisplayNameChangeable,
                                            Converter={StaticResource BooleanToVisibilityConverter}}"                                               
                                                Click="SetAsDisplayNameCheckBoxButtonOnClick">
                                                <Button.IsEnabled>
                                                    <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                                                        <Binding Path="CanSetAsForDisplayName" />
                                                        <Binding Path="OwnerObject.OwnerMap.OwnerDataSource.ImportStatus"  />
                                                    </MultiBinding>
                                                </Button.IsEnabled>
                                                <CheckBox Name="SetAsDisplayNameCheckBox" Content="Set as display name"  
                                                      Checked="SetAsDisplayNameCheckBoxOnChecked" 
                                                      Unchecked="SetAsDisplayNameCheckBox_Unchecked"
                                                      IsChecked="{Binding IsDisplayName}"
                                                      />
                                            </Button>

                                            <!--تنظیمات اداغام داخلی-->
                                            <Button Name="ResolveButton"
                                                    Click="ResolveButton_Click"
                                                    IsEnabled="{Binding OwnerObject.OwnerMap.OwnerDataSource.ImportStatus, 
                                            Converter={StaticResource ImportStatusToIsEnableConverter}}"
                                                    >
                                                <Button.Visibility>
                                                    <MultiBinding Converter="{StaticResource AllBooleanToVisibilityConverter}">
                                                        <Binding Path="IsResolvable" />
                                                        <Binding Path="OwnerObject.IsResolvable"  />
                                                    </MultiBinding>
                                                </Button.Visibility>
                                                <CheckBox Name="SetResolutionCheckBox" Content="Set as resolve" VerticalContentAlignment="Center"
                                                      Checked="SetResolutionCheckBox_Checked"
                                                      Unchecked="SetResolutionCheckBox_Unchecked"
                                                      IsChecked="{Binding HasResolution}"
                                                      />
                                            </Button>

                                            <!--پیکر‌بندی ویژگی‌های نوع تاریخ و زمان-->
                                            <Button Name="ConfigDateTimeButton" Content="Config..."
                                                Click="ConfigDateTimeButtonOnClick"
                                                Visibility="{Binding ., Converter={StaticResource PropertyTypeToVisibilityConverter}}">
                                            </Button>

                                            <!--حذف ویژگی-->
                                            <Button Name="RemoveButton" Content="Remove" Click="RemoveButtonOnClick">
                                                <Button.IsEnabled>
                                                    <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                                                        <Binding Path="Editable" />
                                                        <Binding Path="OwnerObject.OwnerMap.OwnerDataSource.ImportStatus"  />
                                                    </MultiBinding>
                                                </Button.IsEnabled>
                                            </Button>
                                        </StackPanel>
                                    </materialDesign:PopupBox>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
