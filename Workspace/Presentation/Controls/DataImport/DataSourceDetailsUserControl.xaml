<UserControl x:Class="GPAS.Workspace.Presentation.Controls.DataImport.DataSourceDetailsUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:commonConverters="clr-namespace:GPAS.Workspace.Presentation.Controls.Common.Converters"
             xmlns:converters="clr-namespace:GPAS.Workspace.Presentation.Controls.DataImport.Converters"
             xmlns:models="clr-namespace:GPAS.Workspace.Presentation.Controls.DataImport.Model"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="400">

    <UserControl.Resources>
        <ResourceDictionary>
            <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">5</system:Double>
            <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">5</system:Double>
            
            <converters:DataSourceTypeToVisibilityControlConverter x:Key="DataSourceTypeToVisibilityControlConverter"/>
            <converters:AddColonAtEndStringConverter x:Key="AddColonAtEndStringConverter"/>
            <converters:MetaDataValueToStringConverter x:Key="MetaDataValueToStringConverter"/>
            <commonConverters:ValueTypeCompareParameterToVisibiltyConverter x:Key="ValueTypeCompareParameterToVisibiltyConverter"/>
            <commonConverters:ImportStatusToIsEnableConverter x:Key="ImportStatusToIsEnableConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
                                    Padding="{TemplateBinding materialDesign:DataGridAssist.CellPadding}">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="Transparent" SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </SelectiveScrollingGrid.ColumnDefinitions>

                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </SelectiveScrollingGrid.RowDefinitions>

                                    <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                    <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" 
                                                          SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen,
                                        ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                        Converter={x:Static DataGrid.RowDetailsScrollingConverter},
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                              Visibility="{TemplateBinding DetailsVisibility}"/>

                                    <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                   Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, 
                                        Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate DataType="{x:Type DataGridTemplateColumn}" x:Key="ValueCellTemplate">
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource MetaDataValueToStringConverter}">
                                <Binding Path="Value" />
                                <Binding Path="NeedsRecalculation" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <Button Name="RecalculateButton" Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                            Visibility="{Binding NeedsRecalculation, Converter={StaticResource BooleanToVisibilityConverter}}"
                            IsEnabled="{Binding DataSource.ImportStatus, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                        Converter={StaticResource ImportStatusToIsEnableConverter}, IsAsync=True}"
                            Width="18" Height="18" HorizontalAlignment="Left" BorderBrush="Transparent" Background="Transparent"
                            Foreground="{DynamicResource PrimaryHueMidBrush}"
                            Margin="5 1"
                            materialDesign:ButtonProgressAssist.IsIndicatorVisible="False"
                            materialDesign:ButtonProgressAssist.Value="-1"
                            materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                            ToolTip="Calculate exact value" Click="RecalculateButton_Click">
                        <materialDesign:PackIcon Kind="Refresh" Width="16" Height="16" />
                    </Button>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="20 15">
        <Grid Visibility="{Binding Path=DataSource, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, IsAsync=True,
            Converter={StaticResource DataSourceTypeToVisibilityControlConverter}, ConverterParameter={x:Type system:Object}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid x:Name="HeaderGrid" Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <TextBlock x:Name="DataSourceNameLabel" Grid.Row="0" Style="{StaticResource MaterialDesignBody1TextBlock}"
                           Foreground="{DynamicResource MaterialDesignBody}"
                   Text="{Binding Path=DataSource.Title, IsAsync=True, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>

                <TextBlock x:Name="DataSourceTypeLabel" Grid.Row="1" Style="{StaticResource MaterialDesignCaptionTextBlock}"
                           Foreground="{DynamicResource PrimaryHueMidBrush}" Margin="0" Padding="0"
                   Text="{Binding Path=DataSource.Type, IsAsync=True, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>

                <Image x:Name="DataSourceImage" Grid.Row="2" MaxWidth="100" HorizontalAlignment="Left" Margin="0 10"
                   Source="{Binding Path=DataSource.LargeIcon, IsAsync=True, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
            </Grid>

            <Grid x:Name="DetailsGrid" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <DataGrid x:Name="DataSourceMetaDataGrid" Grid.Row="0"
                          ItemsSource="{Binding Path=DataSourceMetaDataCollection, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                          CellStyle="{StaticResource DataGridCellStyle1}" RowStyle="{StaticResource DataGridRowStyle1}"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" CanUserAddRows="False" HeadersVisibility="None"
                          IsReadOnly="True" GridLinesVisibility="None" Background="Transparent" Margin="16 0 0 0" FontSize="12"
                          materialDesign:DataGridAssist.CellPadding="0 2 16 2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Title, Converter={StaticResource AddColonAtEndStringConverter}}"/>
                        <DataGridTemplateColumn CellTemplate="{StaticResource ValueCellTemplate}"/>
                    </DataGrid.Columns>
                </DataGrid>

                <Grid x:Name="FileDetailsGrid" Grid.Row="1" Margin="0 15 0 8"
                      Visibility="{Binding Path=DataSource, IsAsync=True, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, 
                    Converter={StaticResource ValueTypeCompareParameterToVisibiltyConverter}, ConverterParameter={x:Type models:SingleDataSourceModel}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="File Info" Grid.Row="0" Style="{StaticResource SecondHeader}"/>

                    <DataGrid x:Name="FileMetaDataGrid" Grid.Row="1" 
                          ItemsSource="{Binding Path=FileMetaDataCollection, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"
                          CellStyle="{StaticResource DataGridCellStyle1}" RowStyle="{StaticResource DataGridRowStyle1}"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" CanUserAddRows="False" HeadersVisibility="None"
                          IsReadOnly="True" GridLinesVisibility="None" Background="Transparent" Margin="1 0 0 0" FontSize="12"
                          materialDesign:DataGridAssist.CellPadding="0 2 16 2">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Title, Converter={StaticResource AddColonAtEndStringConverter}}"/>
                            <DataGridTemplateColumn CellTemplate="{StaticResource ValueCellTemplate}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Grid>
        </Grid>

        <TextBlock Text="Select a data source to view details" Foreground="{DynamicResource MaterialDesignBody}"
                   Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                   HorizontalAlignment="Center" VerticalAlignment="Center"
                   Visibility="{Binding Path=DataSource, IsAsync=True, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl},
                                Converter={StaticResource DataSourceTypeToVisibilityControlConverter}, ConverterParameter={x:Null}}"/>
    </Grid>
</UserControl>
