<UserControl x:Class="GPAS.Workspace.Presentation.Controls.DataImport.DataImportUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:common="clr-namespace:GPAS.Workspace.Presentation.Controls.Common"
             xmlns:commonConverters="clr-namespace:GPAS.Workspace.Presentation.Controls.Common.Converters"
             xmlns:local="clr-namespace:GPAS.Workspace.Presentation.Controls.DataImport"
             xmlns:converters="clr-namespace:GPAS.Workspace.Presentation.Controls.DataImport.Converters"
             xmlns:defectios="clr-namespace:GPAS.Workspace.Presentation.Controls.DataImport.Model"
             xmlns:waiting="clr-namespace:GPAS.Workspace.Presentation.Controls.Waiting"
             xmlns:converters1="clr-namespace:GPAS.Workspace.Presentation.Windows.DataImport.Converters"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000">

    <UserControl.Resources>
        <ResourceDictionary>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:SortTypeToBooleanConverter x:Key="SortTypeToBooleanConverter"/>
            <converters:ItemsNumberToTextConverter x:Key="ItemsNumberToTextConverter"/>
            <converters1:DataSourceIsGenerateImportingObjectsToShowWaitingConverter x:Key="DataSourceIsGenerateImportingObjectsToShowWaitingConverter"/>
            <converters1:DataSourceImportStatusToIconVisibilityConverter x:Key="DataSourceImportStatusToIconVisibilityConverter"/>
            <converters1:DataSourceImportStatusToIconConverter x:Key="DataSourceImportStatusToIconConverter"/>
            <converters1:DataSourceImportStatusToColorConverter x:Key="DataSourceImportStatusToColorConverter"/>
            <converters1:DataSourceImportStatusToMessageConverter x:Key="DataSourceImportStatusToMessageConverter"/>
            <converters:SelectedDataSourcesNumberToTextConverter x:Key="SelectedDataSourcesNumberToTextConverter"/>
            <converters:ContextMenuItemVisibilityConverter x:Key="ContextMenuItemVisibilityConverter"/>
            <converters:GroupDataSourceTypeToVisibilityConverter x:Key="GroupDataSourceTypeToVisibilityConverter"/>
            <converters:DataSourcesCountToForegroundConverter x:Key="DataSourcesCountToForegroundConverter"/>
            <converters:DataSourceValidationToForgroundConverter x:Key="DataSourceValidationToForgroundConverter"/>
            <converters:DataSourcsCountToDropBoxVisibilityConverter x:Key="DataSourcsCountToDropBoxVisibilityConverter"/>
            <converters:MemoryStreamToBooleanConverter x:Key="StreamToBooleanConverter"/>
            <converters:DataSourcsCountToDataSourceContainerVisibilityConverter x:Key="DataSourcsCountToDataSourceContainerVisibilityConverter"/>
            <commonConverters:CollectionCountToEnableConverter x:Key="CollectionCountToEnableConverter"/>
            <converters:CollectionImportStatusToBooleanConverter x:Key="BooleanAndConverter"/>
            <converters:BooleanIsValidToMultiConverter x:Key="BooleanIsValidToMultiConverter"/>
            <converters:ChangeForegrandTitleWithIsValisConverter x:Key="ChangeForegrandTitleWithIsValisConverter"/>
            <commonConverters:ImportStatusToIsEnableConverter x:Key="ImportStatusToIsEnableConverter"/>

            <!-- منوی راست کلیک روی صفحه-->
            <ContextMenu x:Key="DataSourceGridContextMenu" Style="{StaticResource ContextMenuStyle}">
                <ContextMenu.Resources>
                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="Width" Value="175"/>
                        <Setter Property="Padding" Value="10 5"/>
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                    </Style>
                    <Style TargetType="materialDesign:PackIcon" BasedOn="{StaticResource ContextMenuItemsIcon}"/>
                </ContextMenu.Resources>

                <MenuItem x:Name="AddDataSourceMenuItem" Header="Add data source..."  Click="AddDataSourceMenuItem_Click">
                    <MenuItem.Icon>
                        <Grid>
                            <materialDesign:PackIcon Kind="Plus"/>
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="AddDatabaseMenuItem" Header="Add database..." Click="AddDatabaseMenuItem_Click" Visibility="Collapsed">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="DatabaseAdd" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="ImportAllMenuItem" Header="Import all" Click="ImportAllMenuItem_Click"
                          IsEnabled="{Binding CanImportAll}"/>

                <Separator Margin="5 2"/>

                <MenuItem x:Name="RemoveAllMenuItem" Header="Remove all" Click="RemoveAllMenuItem_Click" 
                          IsEnabled="{Binding DataSourceCollection.Count,Converter={StaticResource CollectionCountToEnableConverter}}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Trash" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>

            <!--منوی راست کلیک بر روی دیتا سورس ها-->
            <ContextMenu x:Key="DataSourceListViewContextMenu" Style="{StaticResource ContextMenuStyle}"
                         Opened="ContextMenu_Opened">
                <ContextMenu.Resources>
                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="FontSize" Value="13"/>
                        <Setter Property="MinWidth" Value="175"/>
                        <Setter Property="Padding" Value="10 5"/>
                        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                    </Style>
                    <Style TargetType="materialDesign:PackIcon" BasedOn="{StaticResource ContextMenuItemsIcon}"/>
                </ContextMenu.Resources>

                <MenuItem x:Name="MappingMenuItem" Header="Mapping..." FontWeight="Bold" Click="MappingMenuItemOnClick">
                    <MenuItem.Icon>
                        <Grid>
                            <materialDesign:PackIcon Kind="ApacheKafka" Margin="4 0 0 0"/>
                            <materialDesign:PackIcon Kind="ApacheKafka" >
                                <materialDesign:PackIcon.LayoutTransform>
                                    <RotateTransform Angle="180" />
                                </materialDesign:PackIcon.LayoutTransform>
                            </materialDesign:PackIcon>
                        </Grid>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="PermissionMenuItem" Header="Permission..." Click="PermissionMenuItemOnClick">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ShieldKey" />
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem x:Name="ImportMenuItem" Header="Import" Click="ImportMenuItem_Click"                         
                          IsEnabled="{Binding CanImportAllSelected, TargetNullValue=false, FallbackValue=false}"/>

                <Separator Margin="5 2"/>

                <!--کپی نگاشت-->
                <MenuItem x:Name="CopyMapMenuItem" Header="Copy the map" Click="CopyMapMenuItemOnClick"                         
                          IsEnabled="{Binding SelectedDataSource.Map.IsValid, TargetNullValue=false, FallbackValue=false}">
                    <MenuItem.Visibility>
                        <MultiBinding Converter="{StaticResource ContextMenuItemVisibilityConverter}" 
                                      ConverterParameter="{x:Static local:DataSourceContextMenuItem.CopyMapping}">
                            <Binding Path="SelectedDataSourceCollection"/>
                            <Binding Path="SelectedDataSourceCollection.Count"/>
                        </MultiBinding>
                    </MenuItem.Visibility>
                </MenuItem>

                <MenuItem x:Name="CopyPermissionMenuItem" Header="Copy permission" Click="CopyPermissionMenuItemOnClick">
                    <MenuItem.Visibility>
                        <MultiBinding Converter="{StaticResource ContextMenuItemVisibilityConverter}" 
                                      ConverterParameter="{x:Static local:DataSourceContextMenuItem.CopyPermission}">
                            <Binding Path="SelectedDataSourceCollection"/>
                            <Binding Path="SelectedDataSourceCollection.Count"/>
                        </MultiBinding>
                    </MenuItem.Visibility>
                </MenuItem>

                <MenuItem x:Name="PasteMapMenuItem" Header="Paste map" Click="PasteMapMenuItemOnClick">
                    <MenuItem.IsEnabled>
                        <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                            <Binding Path="IsMapCopied" />
                            <Binding Path="SelectedDataSource.ImportStatus" />
                            <Binding Path="SelectedDataSourceCollection" />
                        </MultiBinding>
                    </MenuItem.IsEnabled>
                </MenuItem>

                <MenuItem x:Name="PastePermissionMenuItem" Header="Paste permission" Click="PastePermissionMenuItemOnClick">
                    <MenuItem.IsEnabled>
                        <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                            <Binding Path="IsPermissionCopied" />
                            <Binding Path="SelectedDataSource.ImportStatus"/>
                            <Binding Path="SelectedDataSourceCollection" />
                        </MultiBinding>
                    </MenuItem.IsEnabled>
                </MenuItem>

                <Separator Margin="5 2">
                    <Separator.Visibility>
                        <MultiBinding Converter="{StaticResource ContextMenuItemVisibilityConverter}" 
                                      ConverterParameter="{x:Static local:DataSourceContextMenuItem.CsvSeparator}">
                            <Binding Path="SelectedDataSourceCollection"/>
                            <Binding Path="SelectedDataSourceCollection.Count"/>
                        </MultiBinding>
                    </Separator.Visibility>
                </Separator>

                <MenuItem x:Name="SetCsvSeparatorMenuItem" Header="Set CSV separator..." 
                          Click="SetCsvSeparatorMenuItemOnClick"
                          IsEnabled="{Binding SelectedDataSource.ImportStatus, Converter={StaticResource ImportStatusToIsEnableConverter}}">
                    <MenuItem.Visibility>
                        <MultiBinding Converter="{StaticResource ContextMenuItemVisibilityConverter}" 
                                      ConverterParameter="{x:Static local:DataSourceContextMenuItem.CsvSeparator}"
                                      UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                            <Binding Path="SelectedDataSourceCollection"/>
                            <Binding Path="SelectedDataSourceCollection.Count"/>
                        </MultiBinding>
                    </MenuItem.Visibility>
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="TableRow" />
                    </MenuItem.Icon>
                </MenuItem>


                <Separator Margin="5 2">
                    <Separator.Visibility>
                        <MultiBinding Converter="{StaticResource ContextMenuItemVisibilityConverter}" 
                                      ConverterParameter="{x:Static local:DataSourceContextMenuItem.ManegeGroup}">
                            <Binding Path="SelectedDataSourceCollection"/>
                            <Binding Path="SelectedDataSourceCollection.Count"/>
                        </MultiBinding>
                    </Separator.Visibility>
                </Separator>

                <MenuItem x:Name="ManageGroupMenuItem" Header="Manage group..." 
                          Click="ManageGroupMenuItemOnClick">
                    <MenuItem.Visibility>
                        <MultiBinding Converter="{StaticResource ContextMenuItemVisibilityConverter}" 
                                      ConverterParameter="{x:Static local:DataSourceContextMenuItem.ManegeGroup}">
                            <Binding Path="SelectedDataSourceCollection"/>
                            <Binding Path="SelectedDataSourceCollection.Count"/>
                        </MultiBinding>
                    </MenuItem.Visibility>
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Settings" />
                    </MenuItem.Icon>
                </MenuItem>

                <Separator Margin="5 2">
                    <Separator.Visibility>
                        <MultiBinding Converter="{StaticResource ContextMenuItemVisibilityConverter}" 
                                      ConverterParameter="{x:Static local:DataSourceContextMenuItem.AddToGroup}">
                            <Binding Path="SelectedDataSourceCollection"/>
                            <Binding Path="SelectedDataSourceCollection.Count"/>
                        </MultiBinding>
                    </Separator.Visibility>
                </Separator>

                <MenuItem x:Name="CreateNewGroupMenuItem" Header="Create new group" 
                          Click="CreateNewGroupMenuItemOnClick">
                    <MenuItem.Visibility>
                        <MultiBinding Converter="{StaticResource ContextMenuItemVisibilityConverter}" 
                                      ConverterParameter="{x:Static local:DataSourceContextMenuItem.AddToGroup}">
                            <Binding Path="SelectedDataSourceCollection"/>
                            <Binding Path="SelectedDataSourceCollection.Count"/>
                        </MultiBinding>
                    </MenuItem.Visibility>
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="ViewGridAdd" />
                    </MenuItem.Icon>
                </MenuItem>

                <Separator Margin="5 2"/>

                <MenuItem x:Name="RemoveMenuItem" Header="Remove" 
                          Click="RemoveMenuItem_Click">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="Trash" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>

            <!--قالب به فرم کارت منابع داده-->
            <ControlTemplate x:Key="CardTemplate">
                <!--لیست منابع داده-->
                <ListView x:Name="DataSourceListView" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ItemsSource="{Binding SortedDataSourceCollection}" SelectionMode="Extended"
                      SelectionChanged="DataSourceListViewOnSelectionChanged"
                      PreviewMouseLeftButtonDown="DataSourceListViewOnPreviewMouseDown">
                    <ListView.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding RemoveCommand, 
                            RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                    </ListView.InputBindings>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>                           
                            <telerik:VirtualizingWrapPanel ItemHeight="270" ItemWidth="200" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
                            <EventSetter Event="MouseDoubleClick" Handler="DataSourceListViewItemsOnMouseDoubleClick" />
                            <Setter Property="ContextMenu" Value="{StaticResource DataSourceListViewContextMenu}" />
                            <Setter Property="AllowDrop" Value="{Binding ImportStatus, Converter={StaticResource ImportStatusToIsEnableConverter}}"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                            <EventSetter Event="Drop" Handler="DataSourceListViewItemOnDrop"/>
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataSourceListViewItemOnPreviewMouseLeftButtonDown"/>
                            <EventSetter Event="PreviewMouseRightButtonUp" Handler="DataSourceListViewItemOnPreviewMouseRightButtonUp"/>
                            <EventSetter Event="MouseUp" Handler="DataSourceListViewItemOnMouseUp"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>

                        <!--قالب نمایش کاربر-->
                        <DataTemplate>
                            <local:CardTemplateUserControl CardHeight="240" CardWidth="170"
                                                           ImportingObjectsGenerationStatus="{Binding ImportingObjectCollectionGenerationStatus}"
                                                           MappingButtonClicked="CardTemplateUserControl_MappingButtonClicked"
                                                           AclButtonClicked="CardTemplateUserControl_AclButtonClicked"
                                                           DefectionsListItemMouseDown="CardTemplateUserControl_DefectionsListItemMouseDown"
                                                           DefectiosButtonPreviewMouseLeftButtonDown="CardTemplateUserControl_DefectiosButtonPreviewMouseLeftButtonDown"
                                                           DefectiosButtonMouseLeftButtonUp="CardTemplateUserControl_DefectiosButtonMouseLeftButtonUp"/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </ControlTemplate>

            <!--قالب به فرم لیست برای منابع داده-->
            <ControlTemplate x:Key="ListTemplate">
                <ListView x:Name="DataSourceListView" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ItemsSource="{Binding SortedDataSourceCollection}" SelectionMode="Extended"
                          SelectionChanged="DataSourceListViewOnSelectionChanged"
                          PreviewMouseLeftButtonDown="DataSourceListViewOnPreviewMouseDown">
                    <ListView.InputBindings>
                        <!--<KeyBinding Modifiers="Control" Key="A" Command="{Binding CtrlACommand}"/>-->
                        <KeyBinding Key="Delete" Command="{Binding RemoveCommand, 
                            RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                    </ListView.InputBindings>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource CustomGridViewItemStyle}">
                            <EventSetter Event="MouseDoubleClick" Handler="DataSourceListViewItemsOnMouseDoubleClick" />
                            <Setter Property="ContextMenu" Value="{StaticResource DataSourceListViewContextMenu}" />
                            <Setter Property="AllowDrop" Value="{Binding ImportStatus, Converter={StaticResource ImportStatusToIsEnableConverter}}"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                            <EventSetter Event="Drop" Handler="DataSourceListViewItemOnDrop"/>
                            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataSourceListViewItemOnPreviewMouseLeftButtonDown"/>
                            <EventSetter Event="PreviewMouseRightButtonUp" Handler="DataSourceListViewItemOnPreviewMouseRightButtonUp"/>
                            <EventSetter Event="MouseUp" Handler="DataSourceListViewItemOnMouseUp"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Icon">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid VerticalAlignment="Center">
                                            <materialDesign:Badged Margin="0 2 0 0"
                                                Badge="{Binding DataSourceCollection.Count, FallbackValue={}, TargetNullValue=0}"
                                                HorizontalAlignment="Right" BadgeColorZoneMode="Inverted">
                                                <Image Source="{Binding SmallIcon}" Width="22" Height="22" Stretch="Uniform"
                                                       VerticalAlignment="Center" HorizontalAlignment="Center" />
                                            </materialDesign:Badged>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Data source name" Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Title }" VerticalAlignment="Center" Margin="0 2 0 0">
                                            <TextBlock.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsValid}" Value="true">
                                                            <Setter Property="Foreground" Value="{DynamicResource MaterilaDesignBody}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsValid}" Value="false">
                                                            <Setter Property="Foreground" Value="Red"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Resources>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Data source type" Width="Auto">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Type }"  VerticalAlignment="Center" Margin="0 2 0 0"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="File Path" Width="350">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding FileInfo.FullPath }" VerticalAlignment="Center" Margin="0 2 0 0"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Operations" Width="150">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid VerticalAlignment="Center" Margin="0 2 0 0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Column="0" Margin="0 0 10 0">
                                                <Hyperlink x:Name="MappingHyperlink" Click="MappingHyperlinkOnClick"
                                                           TextDecorations="None">
                                                    <TextBlock Text="Mapping" VerticalAlignment="Center" />
                                                </Hyperlink>
                                            </TextBlock>

                                            <TextBlock Grid.Column="2" >
                                                <Hyperlink x:Name="PermissionHyperlink" Click="PermissionHyperlinkOnClick"
                                                           TextDecorations="None">
                                                    <TextBlock Text="Permission" VerticalAlignment="Center" />
                                                </Hyperlink>
                                            </TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Defections" Width="100">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Name="DefectiosButton" Padding="0" PreviewMouseLeftButtonDown="DefectiosButton_PreviewMouseLeftButtonDown"  
                                               VerticalAlignment="Center" Height="21" HorizontalAlignment="Center" Margin="0 2 0 0"
                                               PreviewMouseUp="DefectiosButton_MouseLeftButtonUp"
                                               Style="{StaticResource MaterialDesignFlatButton}" >
                                            <Button.Visibility>
                                                <MultiBinding Converter="{StaticResource BooleanIsValidToMultiConverter}">
                                                    <Binding Path="IsValid" />
                                                    <Binding Path="Map.IsValid" />
                                                </MultiBinding>
                                            </Button.Visibility>

                                            <materialDesign:PopupBox Name="DefectionsToolBar" StaysOpen="True"  HorizontalAlignment="Left" 
                                                                         PopupMode="Click" PlacementMode="BottomAndAlignLeftEdges">
                                                <materialDesign:PopupBox.ToggleContent>
                                                    <materialDesign:PackIcon Kind="BellAlert" 
                                                                                 Foreground="OrangeRed" VerticalAlignment="Bottom" Width="18" Height="18"/>
                                                </materialDesign:PopupBox.ToggleContent>

                                                <StackPanel>
                                                    <StackPanel Orientation="Horizontal" Margin="5">
                                                        <TextBlock Text="Defections" Margin="5" Opacity="0.7"
                                                                       Style="{StaticResource MaterialDesignBody2TextBlock}"/>
                                                    </StackPanel>

                                                    <ListView Name="DefectionsListView" Margin="10 5" >
                                                        <ListView.ItemContainerStyle>
                                                            <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
                                                                <Setter Property="Tag" Value="{Binding RelatedElement}"/>
                                                                <EventSetter Event="PreviewMouseDown" Handler="DefectionsListItemOnMouseDown"/>
                                                            </Style>
                                                        </ListView.ItemContainerStyle>
                                                        <ListView.ItemTemplate>
                                                            <DataTemplate>
                                                                <StackPanel Orientation="Horizontal">
                                                                    <materialDesign:PackIcon Kind="{Binding Icon}" Height="20" Width="20"
                                                                         VerticalAlignment="Center"/>
                                                                    <TextBlock Text="{Binding Message}" VerticalAlignment="Center" Margin="5 0"/>
                                                                </StackPanel>
                                                            </DataTemplate>
                                                        </ListView.ItemTemplate>
                                                    </ListView>
                                                </StackPanel>
                                            </materialDesign:PopupBox>
                                        </Button>

                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Status" Width="150">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid VerticalAlignment="Top">
                                            <waiting:WaitingControl x:Name="WaitingControl" Grid.Row="0" ProgressSize="3" 
                                                                    MessagePosition="Top" ProgressMargin="0" MessageMargin="0 0 0 3"
                                                                    MessageFontSize="12" BackgroundOpacity="0" Margin="0 -5 0 0"
                                                                    MessageForeground="{DynamicResource PrimaryHueLightBrush}"
                                                                    IsIndeterminate="{Binding IsIndeterminateProgress}"
                                                                    ProgressValue="{Binding ProgressValue}"
                                                                    MaxValue="{Binding MaximumProgress}"
                                                                    ProgressShape="Linear"
                                                                    ProgressValueDisplayMode="Percentage">
                                                <waiting:WaitingControl.Visibility>
                                                    <MultiBinding Converter="{StaticResource DataSourceIsGenerateImportingObjectsToShowWaitingConverter}" 
                                      UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" FallbackValue="Visible" >
                                                        <Binding Path="."/>
                                                        <Binding Path="ImportingObjectCollectionGenerationStatus"/>
                                                        <Binding Path="ImportStatus"/>
                                                        <Binding ElementName="WaitingControl" Path=""/>
                                                    </MultiBinding>
                                                </waiting:WaitingControl.Visibility>
                                            </waiting:WaitingControl>

                                            <Border Visibility="{Binding ImportStatus, Converter={StaticResource DataSourceImportStatusToIconVisibilityConverter}}">
                                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>

                                                    <materialDesign:PackIcon 
                                                        Grid.Column="0" Height="20" Width="20" Margin="0"
                                                        Kind="{Binding ImportStatus, Converter={StaticResource DataSourceImportStatusToIconConverter}}"
                                                        Foreground="{Binding ImportStatus, Converter={StaticResource DataSourceImportStatusToColorConverter}}"/>

                                                    <TextBlock Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                               FontWeight="Bold" Margin="5 0 0 0"
                                                               Foreground="{Binding ImportStatus, Converter={StaticResource DataSourceImportStatusToColorConverter}}"
                                                               Text="{Binding ImportStatus, Converter={StaticResource DataSourceImportStatusToMessageConverter}}"/>
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </ControlTemplate>

            <Style x:Key="TabHeader" TargetType="RadioButton" BasedOn="{StaticResource MaterialDesignTabRadioButton}">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Margin" Value="5 5"/>
            </Style>

            <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">5</system:Double>
            <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">5</system:Double>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Name="MainGrid"  PreviewMouseMove="MainGrid_OnPreviewMouseMove" >
        <Grid  Background="{DynamicResource MaterialDesignPaper}" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" MinWidth="550"/>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" MinWidth="300"/>
            </Grid.ColumnDefinitions>

            <Grid Name="ActionGrid" Grid.Row="0" Grid.Column="0" Margin="5" Background="{DynamicResource MaterialDesignCardBackground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <common:ButtonWithIcon Grid.Column="0" x:Name="AddDataSourceButton" Click="AddDataSourceButtonClick"
                                   Content="Add data sources" Icon="Plus" ContentMargin="5" />

                <common:ButtonWithIcon Grid.Column="1" x:Name="AttachDatabaseButton" Click="AttachDatabaseButtonClick"
                                   Content="Add database" Icon="DatabaseAdd" ContentMargin="5" Visibility="Collapsed"/>

                <common:ButtonWithIcon Grid.Column="2" x:Name="RemoveDataSourceButton" Click="RemoveDataSourceButtonClick"
                                   Content="Remove" Icon="Trash" ContentMargin="5" IsEnabled="False"
                                   ToolTip="Remove selected data sources"/>

                <common:ButtonWithIcon x:Name="ViewButton" ToolTip="View" Grid.Column="3"
                                   HorizontalAlignment="Right" IconPosition="Top"
                                   Icon="FormatListBulletedSquare" IconHeight="30" IconWidth="30"
                                   Style="{StaticResource MaterialDesignFlatButton}"
                                   Click="ViewButtonClick"/>

                <!--Sort by-->
                <materialDesign:PopupBox Name="SortByToolBar" ToolTip="Sort by" Grid.Column="4" Background="Transparent"
                                     BorderThickness="0" Padding="0" Margin="5" PlacementMode="BottomAndAlignRightEdges"
                                     StaysOpen="True">
                    <materialDesign:PopupBox.ToggleContent>
                        <materialDesign:PackIcon Kind="SortVariant" Height="30" Width="30" 
                                             Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                    </materialDesign:PopupBox.ToggleContent>
                    <StackPanel MinWidth="140">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Grid}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}"/>
                                    </Trigger>
                                </Style.Triggers>
                                <EventSetter Event="MouseDown" Handler="ViewPopUpMouseDownHandler"/>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="Sort by" Margin="5" FontSize="14" FontWeight="Bold"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Added time" Margin="5" FontSize="14" Grid.Column="0" HorizontalAlignment="Left"/>
                            <RadioButton  Margin="5"  Grid.Column="1" GroupName="SortingPriority"
                                      IsChecked="{Binding SortPriority, Converter={StaticResource SortTypeToBooleanConverter},
                            ConverterParameter={x:Static local:SortPriority.AddedTime}}"/>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Name" Margin="5" FontSize="14" Grid.Column="0" HorizontalAlignment="Left"/>
                            <RadioButton Margin="5" Grid.Column="1" GroupName="SortingPriority" 
                                     IsChecked="{Binding SortPriority, Converter={StaticResource SortTypeToBooleanConverter},
                            ConverterParameter={x:Static local:SortPriority.Name}}"/>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Type" Margin="5" FontSize="14" Grid.Column="0" HorizontalAlignment="Left"/>
                            <RadioButton  Margin="5"  Grid.Column="1" GroupName="SortingPriority"
                                      IsChecked="{Binding SortPriority, Converter={StaticResource SortTypeToBooleanConverter},
                            ConverterParameter={x:Static local:SortPriority.Type}}"/>
                        </Grid>

                        <Separator VerticalAlignment="Top" Margin="5 0"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Ascending" Margin="5" FontSize="14" Grid.Column="0" HorizontalAlignment="Left"/>
                            <RadioButton  Margin="5"  Grid.Column="1" GroupName="SortingOrder"
                                      IsChecked="{Binding SortOrder, Converter={StaticResource SortTypeToBooleanConverter},
                            ConverterParameter={x:Static local:SortOrder.Ascending}}"/>
                        </Grid>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Descending" Margin="5" FontSize="14" Grid.Column="0" HorizontalAlignment="Left"/>
                            <RadioButton  Margin="5"  Grid.Column="1" GroupName="SortingOrder"
                                      IsChecked="{Binding SortOrder, Converter={StaticResource SortTypeToBooleanConverter},
                            ConverterParameter={x:Static local:SortOrder.Descending}}"/>
                        </Grid>
                    </StackPanel>
                </materialDesign:PopupBox>
            </Grid>

            <Grid Grid.Row="1" Grid.Column="0" Name="DataSourcesGrid" Drop="DataSourcesGridDrop" IsHitTestVisible="True" 
                   AllowDrop="True"
                  DragOver="DataSourcesGridDragOver" MouseRightButtonDown="DataSourcesGrid_MouseRightButtonDown" 
                  ContextMenu="{StaticResource DataSourceGridContextMenu}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ContentControl Grid.Row="0" x:Name="DataSourcesContentControl" Margin="5" 
                                Template="{StaticResource CardTemplate}"  
                                Visibility="{Binding DataSourceCollection.Count, Converter={StaticResource DataSourcsCountToDataSourceContainerVisibilityConverter}}"/>

                <Border Grid.Row="0" x:Name="DragAndDropBorder" BorderThickness="1" Margin="50" Background="Transparent"
                    Visibility="{Binding DataSourceCollection.Count, Converter={StaticResource DataSourcsCountToDropBoxVisibilityConverter}}">
                    <Border.BorderBrush>
                        <DrawingBrush Viewport="8 8 8 8" ViewportUnits="Absolute" TileMode="Tile">
                            <DrawingBrush.Drawing>
                                <DrawingGroup>
                                    <GeometryDrawing Brush="Gray">
                                        <GeometryDrawing.Geometry>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="0 0 50 50" />
                                                <RectangleGeometry Rect="50 50 50 50" />
                                            </GeometryGroup>
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                </DrawingGroup>
                            </DrawingBrush.Drawing>
                        </DrawingBrush>
                    </Border.BorderBrush>
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                        <materialDesign:PackIcon Kind="CloudUploadOutline" Height="80" Width="80" Foreground="Gray"
                                             HorizontalAlignment="Center"/>
                        <TextBlock Text="Drop files here" FontSize="18" FontWeight="Bold" Foreground="Gray"/>
                    </StackPanel>
                </Border>

                <common:MessageSnackBarUserControl Grid.Row="0" Grid.RowSpan="2" x:Name="NotSupportedFileMessageSnackBar"
                                               IconForeground="OrangeRed" Message="Sorry, you can not import some files!" />

                <common:MessageSnackBarUserControl Grid.Row="0" Grid.RowSpan="2" x:Name="OnlyEmlDataSourcesMessageSnackBar"
                                                   IconForeground="OrangeRed" Message="Only EML data sources can be added to the group!"/>

                <common:MessageSnackBarUserControl Grid.Row="0" Grid.RowSpan="2" x:Name="CopyMapMessageSnackBar" Icon="TickCircle"
                                               Message="Map successfully copied" IconForeground="Green" />

                <common:MessageSnackBarUserControl Grid.Row="0" Grid.RowSpan="2" x:Name="PasteMapMessageSnackBar" Icon="TickCircle"
                                               Message="Map successfully pasted" IconForeground="Green" />

                <common:MessageSnackBarUserControl Grid.Row="0" Grid.RowSpan="2" x:Name="PasteMapErrorMessageSnackBar"
                                               Message="Problems have occurred"
                                               IconForeground="OrangeRed" AutoDeactivate="False" DetailsButtonVisibility="Visible"
                                               ShowDetailsClicked="PasteMessageSnackBarOnShowDetailsClicked"/>

                <common:MessageSnackBarUserControl Grid.Row="0" Grid.RowSpan="2" x:Name="CopyPermissionMessageSnackBar" Icon="TickCircle"
                                               Message="Permission successfully copied" IconForeground="Green" />

                <common:MessageSnackBarUserControl Grid.Row="0" Grid.RowSpan="2" x:Name="PastePermissionMessageSnackBar" Icon="TickCircle"
                                               Message="Permission successfully pasted" IconForeground="Green" />

                <common:MessageSnackBarUserControl Grid.Row="0" Grid.RowSpan="2" x:Name="PastePermissionErrorMessageSnackBar"
                                               Message="Problems have occurred" Icon="Warning"
                                               IconForeground="OrangeRed" AutoDeactivate="False" DetailsButtonVisibility="Visible"
                                               ShowDetailsClicked="PermissionPasteMessageSnackBarOnShowDetailsClicked"/>


                <!--تعداد کل آیتم ها و آیتم‌های انتخاب شده-->
                <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="5" HorizontalAlignment="Left" >
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Name="DataSourcesCountTextBlock" Text="{Binding DataSourceCollection.Count}"/>
                    <TextBlock Text="{Binding ElementName=DataSourcesCountTextBlock, Path=Text, 
                    Converter={StaticResource ItemsNumberToTextConverter}}" />
                    <TextBlock Name="SelectedItemsTextBlock" Text="{Binding SelectedDataSourceCollection.Count,
                        Converter={StaticResource SelectedDataSourcesNumberToTextConverter}}" Visibility="Collapsed"/>
                </StackPanel>
            </Grid>

            <GridSplitter Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Margin="0 5" Width="4"
                      VerticalAlignment="Stretch" HorizontalAlignment="Center" />

            <Separator Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Margin="0 5">
                <Separator.LayoutTransform>
                    <RotateTransform Angle="90" />
                </Separator.LayoutTransform>
            </Separator>

            <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="2" Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Background="{DynamicResource MaterialDesignCardBackground}" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <RadioButton Name="PreviewHeaderRadioButton" Grid.Column="0" 
                             Content="Preview" IsChecked="True" >
                        <RadioButton.Style>
                            <Style BasedOn="{StaticResource TabHeader}" TargetType="RadioButton">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=SelectedDefectionType,
                                        RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl}}"
                                             Value="{x:Static defectios:DefectionType.PreviewHasAnError}">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource ItemListWarningBackgroundStoryboard}"/>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </RadioButton.Style>
                    </RadioButton>

                    <RadioButton Name="DetailsHeaderRadioButton" Grid.Column="1" 
                             Style="{StaticResource TabHeader}" Content="Details" IsChecked="False" />

                    <RadioButton Name="HistogramHeaderRadioButton" Grid.Column="2" 
                             Style="{StaticResource TabHeader}" Content="Histogram" IsChecked="False" 
                                 Visibility="Collapsed"/>
                </Grid>

                <Grid Grid.Row="1" Background="Transparent" >
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SelectedDefectionType,
                                        RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=UserControl}}"
                                             Value="{x:Static defectios:DefectionType.PreviewHasAnError}">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource ItemListWarningBackgroundStoryboard}"/>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <local:DataSourcePreviewUserControl x:Name="DataSourcePreviewUserControl" 
                                                    Visibility="{Binding ElementName=PreviewHeaderRadioButton, Path=IsChecked,
                                                                    Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    DataSource="{Binding SelectedDataSource}" Margin="5"/>



                    <local:DataSourceDetailsUserControl x:Name="DataSourceDetailsUserControl"
                                                    Visibility="{Binding ElementName=DetailsHeaderRadioButton, Path=IsChecked,
                                                                    Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    DataSource="{Binding SelectedDataSource}"/>

                    <local:DataSourceHistogramUserControl 
                        x:Name="DataSourceHistogramUserControl" 
                        DataSource="{Binding SelectedDataSource, IsAsync=True}"
                        Background="{DynamicResource MaterialDesignPaper}"
                        Visibility="Collapsed"/>
                    <!--Visibility="{Binding ElementName=HistogramHeaderRadioButton, Path=IsChecked,
                        Converter={StaticResource BooleanToVisibilityConverter}}"/>-->
                </Grid>
            </Grid>

            <Separator  Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Top" Margin="5 0"/>

            <Grid Name="FinalGrid" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"  Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>               

                <Button Name="ImportSelectedItemButton" Grid.Column="1" Content="Import selected" 
                    Margin="5" Click="ImportSelectedItemButtonClick"
                    IsEnabled="{Binding CanImportAllSelected}"/>

                <Button Name="ImportAllButton" Grid.Column="2" Content="Import all"
                    Margin="5" Click="ImportAllButtonClick"
                    IsEnabled="{Binding CanImportAll}"/>
            </Grid>

            <waiting:WaitingControl x:Name="MainWaitingControl" Grid.Row="0" Grid.Column="0"
                                Grid.RowSpan="3" Grid.ColumnSpan="3"/>
        </Grid>
    </Grid>
</UserControl>
