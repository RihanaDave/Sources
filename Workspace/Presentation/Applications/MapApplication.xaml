<local:PresentationApplication x:Class="GPAS.Workspace.Presentation.Applications.MapApplication"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GPAS.Workspace.Presentation.Applications"
             xmlns:controls="clr-namespace:GPAS.Workspace.Presentation.Controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:geoSeachControls="clr-namespace:GPAS.Workspace.Presentation.Controls.Map.GeoSearch"
             xmlns:resource="clr-namespace:GPAS.Workspace.Presentation.Properties"
                               xmlns:waiting="clr-namespace:GPAS.Workspace.Presentation.Controls.Waiting"
                               mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
                <Setter Property="Padding" Value="24,0"/>
                <Setter Property="OverridesDefaultStyle" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"  Background="#00293742"
                                    CornerRadius="5" >
                                <Grid ClipToBounds="True">
                                    <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                                    <Border x:Name="BackgroundRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Opacity="0" SnapsToDevicePixels="True">
                                        <Border.Background>
                                            <TemplateBinding Property="Foreground">
                                                <TemplateBinding.Converter>
                                                    <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </Border.Background>
                                    </Border>
                                    <materialDesign:Ripple Background="Transparent" Focusable="False" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                        <materialDesign:Ripple.Feedback>
                                            <TemplateBinding Property="Foreground">
                                                <TemplateBinding.Converter>
                                                    <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </materialDesign:Ripple.Feedback>
                                        <Grid Background="Transparent"  Height="{TemplateBinding Height}">

                                            <Grid Background="Transparent" Margin="10 5" VerticalAlignment="Center">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition SharedSizeGroup="IconGroup" Width="*"/>
                                                    <ColumnDefinition SharedSizeGroup="HeaderGroup" Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid x:Name="IconWrapper" Visibility="Visible"  >

                                                    <ContentPresenter x:Name="Icon"  Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Left" Height="16" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>

                                                </Grid>
                                                <Grid x:Name="GlyphWrapper" Visibility="Collapsed" Width="40">
                                                    <Viewbox x:Name="GlyphPanel" FlowDirection="LeftToRight" HorizontalAlignment="Left" Height="16" Margin="0" Visibility="Collapsed" VerticalAlignment="Center" Width="16">
                                                        <Canvas Height="24" Width="24">
                                                            <Path x:Name="Glyph" Data="M21,7L9,19 3.5,13.5 4.91,12.09 9,16.17 19.59,5.59 21,7z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight"/>
                                                        </Canvas>
                                                    </Viewbox>
                                                </Grid>
                                                <Grid Grid.Column="1">
                                                    <ContentPresenter x:Name="BoldHeaderPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" TextElement.FontWeight="Bold" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Hidden" VerticalAlignment="Center"/>
                                                    <ContentPresenter x:Name="HeaderPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                                </Grid>
                                                <Grid x:Name="InputGestureTextWrapper" Grid.Column="2" Visibility="Collapsed">
                                                    <TextBlock Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Right" Margin="16,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center">
                                                        <TextBlock.Visibility>
                                                            <TemplateBinding Property="InputGestureText">
                                                                <TemplateBinding.Converter>
                                                                    <materialDesign:TextFieldHintVisibilityConverter IsEmptyValue="Collapsed" IsNotEmptyValue="Visible"/>
                                                                </TemplateBinding.Converter>
                                                            </TemplateBinding>
                                                        </TextBlock.Visibility>
                                                    </TextBlock>
                                                </Grid>
                                                <Grid x:Name="SubBlock" Grid.Column="2" Margin="16,0,0,0" Visibility="Collapsed">
                                                    <Path Data="M0,16L8,8 0,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Right" Height="10" Stretch="Uniform" SnapsToDevicePixels="False" VerticalAlignment="Center" Width="5"/>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </materialDesign:Ripple>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="True"
                                       CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), 
                                    RelativeSource={RelativeSource Self}}" Focusable="False" 
                                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       PopupAnimation="Slide" Placement="Bottom" Margin="0 5 0 0">
                                        <Border x:Name="SubMenuBorder" Margin="5 2 0 0"   Background="{DynamicResource MaterialDesignCardBackground}" CornerRadius="2" Effect="{DynamicResource MaterialDesignShadowDepth1}">
                                            <Border >
                                                <ScrollViewer x:Name="SubMenuScrollViewer"  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                    <Grid RenderOptions.ClearTypeHint="Enabled" Margin="0,16"  >
                                                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                                    </Grid>
                                                </ScrollViewer>
                                            </Border>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Role" Value="SubmenuHeader">
                                    <Setter Property="Visibility" TargetName="SubBlock" Value="Visible"/>
                                    <Setter Property="Placement" TargetName="PART_Popup" Value="Right"/>
                                    <Setter Property="Height" Value="32"/>
                                    <Setter Property="Visibility" TargetName="BoldHeaderPresenter" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="Role" Value="SubmenuItem">
                                    <Setter Property="Height" Value="32"/>
                                    <Setter Property="Visibility" TargetName="InputGestureTextWrapper" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="BoldHeaderPresenter" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="Role" Value="TopLevelHeader">
                                    <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                                    <Setter Property="Padding" Value="16,0"/>
                                    <Setter Property="Height" Value="48"/>
                                    <Setter Property="CornerRadius" TargetName="templateRoot" Value="2"/>
                                    <Setter Property="CornerRadius" TargetName="BackgroundRoot" Value="2"/>
                                </Trigger>
                                <Trigger Property="Role" Value="TopLevelItem">
                                    <Setter Property="Padding" Value="16,0"/>
                                    <Setter Property="Height" Value="48"/>
                                    <Setter Property="CornerRadius" TargetName="templateRoot" Value="2"/>
                                    <Setter Property="CornerRadius" TargetName="BackgroundRoot" Value="2"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="Cursor" Value="No"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Role" Value="TopLevelHeader"/>
                                        <Condition Property="IsSubmenuOpen" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="TextElement.FontWeight" TargetName="HeaderPresenter" Value="Bold"/>
                                </MultiTrigger>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                    <Setter Property="Margin" TargetName="SubMenuBorder" Value="5"/>
                                </Trigger>
                                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                </Trigger>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="IconWrapper" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsCheckable" Value="True">
                                    <Setter Property="Visibility" TargetName="GlyphWrapper" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="IconWrapper" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="Opacity" TargetName="BackgroundRoot" Value="0"/>
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0"/>
                                </Trigger>
                                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="ButtonSyle" BasedOn="{StaticResource MaterialDesignFlatButton}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="Width" Value="42"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="#00293742"
                                    CornerRadius="5" BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Cursor" Value="No"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.3"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="true">
                        <Setter Property="Opacity" Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style TargetType="ToolTip">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
            </Style>


            <TextBlock x:Key="DragDropCursor" Cursor="../Resources/Cursors/dragDropObject.cur"/>
            <HierarchicalDataTemplate DataType="{x:Type controls:TreeViewWithIcons}" ItemsSource="{Binding TreeNodes}">
                <StackPanel Orientation="Horizontal">
                    <Image Margin="2" HorizontalAlignment="Left" Source="{Binding OntologyIconSource}" Stretch="Fill" Height="20" Width="20" VerticalAlignment="Top"/>
                    <TextBlock Margin="2,0"  Text="{Binding OntologyHeaderText}" VerticalAlignment="Center"/>
                </StackPanel>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" x:Name="grdToolbar" Margin="3 0" Background="{DynamicResource MaterialDesignCardBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <!--<Image Source="{StaticResource DynamicOntologyBackIcon}"  Name="RemovePropertyFromSelectedListButton" MouseEnter="RemovePropertyFromSelectedListButton_MouseEnter" MouseLeave="RemovePropertyFromSelectedListButton_MouseLeave" Visibility="Hidden" Stretch="Fill" Grid.Column="1" Margin="10,145,26,0" Height="48" VerticalAlignment="Top" MouseLeftButtonDown="RemovePropertyFromSelectedListButton_Click"/>-->

            <!-- Circle Geo Search -->
            <Button x:Name="CircleSearchMapButton" Style="{StaticResource ButtonSyle}"
                    ToolTip="{x:Static resource:Resources.Circle_Search_Map}" 
                    Grid.Column="0"   
                    Click="CircleSearchMapButton_Click">
                <Grid>
                    <materialDesign:PackIcon Kind="SelectionEllipseArrowInside" Width="23" Height="23"/>
                    <materialDesign:PackIcon Kind="Circle" Width="13" Height="13" Margin="10 10 0 0" 
                                             Foreground="{DynamicResource MaterialDesignCardBackground}"/>
                    <materialDesign:PackIcon Kind="Search" Width="16" Height="16" Margin="11 11 0 0"/>

                </Grid>
            </Button>
            <Popup x:Name="CircleSearchPopup"
                   IsOpen="False" 
                   StaysOpen="True"
                   PlacementTarget="{Binding ElementName=innerControlsViewBox}" 
                   Placement="Relative" 
                   Width="300" 
                   Height="Auto" 
                   MaxHeight="650" 
                   MouseLeftButtonDown="CircleSearchPopup_MouseLeftButtonDown">
                <geoSeachControls:CircleSearchControl x:Name="circleSearchControl"
                                                      BorderBrush="{DynamicResource MaterialDesignCardBackground}"
                                                      BorderThickness="2"
                                                      SearchRequested="circleSearchControl_SearchRequested" 
                                                      Canceled="circleSearchControl_Canceled"/>
            </Popup>
            <!-- Polygon Geo Search -->
            <Button x:Name="PolygonSearchMapButton" Style="{StaticResource ButtonSyle}"
                    ToolTip="{x:Static resource:Resources.Polygon_Search_Map}" 
                    Grid.Column="1"                    
                    VerticalContentAlignment="Center" 
                    Click="PolygonSearchMapButton_Click">
                <Grid>
                    <materialDesign:PackIcon Kind="VectorPolygon" Width="23" Height="23"/>
                    <materialDesign:PackIcon Kind="Circle" Width="13" Height="13" Margin="10 10 0 0" 
                                             Foreground="{DynamicResource MaterialDesignCardBackground}"/>
                    <materialDesign:PackIcon Kind="Search" Width="16" Height="16" Margin="11 11 0 0"/>

                </Grid>
            </Button>
            <Popup x:Name="PolygonSearchPopup" 
                   IsOpen="False" 
                   StaysOpen="True" 
                   PlacementTarget="{Binding ElementName=innerControlsViewBox}" 
                   Placement="Relative" 
                   Width="300" 
                   Height="Auto" 
                   MaxHeight="650"
                   MouseLeftButtonDown="PolygonSearchPopup_MouseLeftButtonDown">
                <geoSeachControls:PolygonSearchControl x:Name="polygonSearchControl"
                                                       BorderBrush="{DynamicResource MaterialDesignCardBackground}"
                                                       BorderThickness="2" 
                                                       SearchRequested="polygonSearchControl_SearchRequested"
                                                       Canceled="polygonSearchControl_Canceled"/>
            </Popup>
            <!-- Route Geo Search -->
            <Button x:Name="RouteSearchMapButton" Style="{StaticResource ButtonSyle}"
                    ToolTip="{x:Static resource:Resources.Route_Search_Map}" 
                    Grid.Column="2"
                    VerticalContentAlignment="Center" 
                    Click="RouteSearchMapButton_Click">
                <Grid>
                    <materialDesign:PackIcon Kind="VectorPolyline" Width="23" Height="23"/>
                    <materialDesign:PackIcon Kind="Circle" Width="13" Height="13" Margin="10 10 0 0" 
                                             Foreground="{DynamicResource MaterialDesignCardBackground}"/>
                    <materialDesign:PackIcon Kind="Search" Width="16" Height="16" Margin="11 11 0 0"/>

                </Grid>
            </Button>
            <Popup x:Name="RouteSearchPopup" 
                   IsOpen="False" 
                   StaysOpen="True" 
                   PlacementTarget="{Binding ElementName=innerControlsViewBox}" 
                   Placement="Relative" 
                   Width="300" 
                   Height="Auto" 
                   MaxHeight="650" 
                   MouseLeftButtonDown="RouteSearchPopup_MouseLeftButtonDown" >
                <geoSeachControls:RouteSearchControl x:Name="routeSearchControl"
                                                     BorderBrush="{DynamicResource MaterialDesignCardBackground}"
                                                     BorderThickness="3" 
                                                     SearchRequested="routeSearchControl_SearchRequested" 
                                                     Canceled="routeSearchControl_Canceled"
                                                     BufferChanged="routeSearchControl_BufferChanged"/>
            </Popup>
            <!-- Remove map content -->
            <Button x:Name="ClearMapButton" Style="{StaticResource ButtonSyle}"
                    ToolTip="{x:Static resource:Resources.Clear_map_content}"
                    AllowDrop="True"
                    DragDrop.Drop="ClearMapButton_Drop"
                    Grid.Column="3"
                    FontSize="24"
                    VerticalContentAlignment="Center"                    
                    Click="ClearMapButton_Click">
                <materialDesign:PackIcon Kind="DeleteForeverOutline" Width="23" Height="23"/>
            </Button>


            <Menu Background="Transparent" Padding="4 2" Grid.Column="4" >
                <MenuItem Width="42" Height="35" Style="{DynamicResource MenuItemStyle1}"  >
                    <MenuItem.Header>
                        <materialDesign:PackIcon Foreground="{DynamicResource PrimaryHueMidBrush}" 
                                               Kind="CheckboxMarkedOutline" Width="23" Height="23" />
                    </MenuItem.Header>
                    <MenuItem Name="SelectAllObjectsMenuItem" 
                              Foreground="{DynamicResource MaterialDesignBody}"
                              FontSize="13"
                              Header="{x:Static resource:Resources.Select_All_Objects}"
                               Click="SelectAllObjectsMenuItem_Click"/>

                    <MenuItem Name="DeselectAllObjectsMenuItem" Header="{x:Static resource:Resources.Deselect_All_Objects}"
                              Foreground="{DynamicResource MaterialDesignBody}"
                              FontSize="13"
                              Click="DeselectAllObjectsMenuItem_Click"/>
                    <MenuItem  Name="InvertSelectionObjectsMenuItem" Header="{x:Static resource:Resources.Invert_Selection_Objects}"
                               Foreground="{DynamicResource MaterialDesignBody}"
                               FontSize="13"
                               Click="InvertSelectionObjectsMenuItem_Click"/>
                </MenuItem>
            </Menu>

            <Button x:Name="SnapshotButton" Style="{StaticResource ButtonSyle}"
                    ToolTip="{x:Static resource:Resources.Take_Snapshot}"
                    Grid.Column="5"
                    VerticalContentAlignment="Center"                    
                    Click="SnapshotButton_Click">
                <Button.Content>
                    <materialDesign:PackIcon Kind="CameraOutline" Width="23" Height="23"/>
                </Button.Content>
            </Button>
        </Grid>
        <controls:MapControl x:Name="mainMapControl" Grid.Row="1" Margin="3 0"
                             MouseMove="mainMapControl_MouseMove"                             
                             SnapshotRequested="mainMapControl_SnapshotRequested"
                             ObjectsAdded="MainMapControl_ObjectsAdded"
                             ObjectsRemoved="MainMapControl_ObjectsRemoved"
                             ObjectsSelectionChanged="MainMapControl_ObjectsSelectionChanged"
                             SimpleMarkerDoubleClick="MainMapControl_SimpleMarkerDoubleClick"/>
        <Viewbox x:Name="innerControlsViewBox" Grid.Row="1" Margin="5" SizeChanged="innerControlsViewBox_SizeChanged"/>
        <waiting:WaitingControl Grid.Row="0" Grid.RowSpan="3" x:Name="WaitingControl" 
                                                Message="Please wait..."/>
    </Grid>
</local:PresentationApplication>