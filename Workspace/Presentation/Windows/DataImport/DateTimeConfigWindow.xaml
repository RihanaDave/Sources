<Window x:Class="GPAS.Workspace.Presentation.Windows.DataImport.DateTimeConfigWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:propertiesValidation="clr-namespace:GPAS.PropertiesValidation;assembly=GPAS.PropertiesValidation"
        xmlns:converters="clr-namespace:GPAS.Workspace.Presentation.Controls.Common.Converters"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:GPAS.Workspace.Presentation.Windows.DataImport"
        ResizeMode="NoResize"
        FontSize="14"
        Height="350" Width="600"
        ShowInTaskbar="False"
        WindowStyle="None" Panel.ZIndex="500"
        WindowStartupLocation="CenterOwner"
        AllowsTransparency="True"
        Background="Transparent" >

    <Window.Resources>
        <converters:ValueEqualityWithParameterToVisibilityConverter x:Key="EqualityWithParameterToVisibilityConverter"/>
        <converters:ImportStatusToIsEnableConverter x:Key="ImportStatusToIsEnableConverter"/>

        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="CalendarTypeValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:CalendarType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <!--حاشیه دور پنجره-->
    <Border x:Name="MainBorder" CornerRadius="10" Background="{DynamicResource MaterialDesignCardBackground}"
            BorderBrush="{DynamicResource PrimaryHueMidBrush}" 
            BorderThickness="2" MouseLeftButtonDown="MainBorder_MouseLeftButtonDown">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Text="Date time configuration" Style="{StaticResource SecondHeader}"/>

            <Grid Grid.Column="0" Grid.Row="1" Margin="5 0"
                  IsEnabled="{Binding Property.OwnerObject.OwnerMap.OwnerDataSource.ImportStatus,
                RelativeSource={RelativeSource FindAncestor,AncestorType=Window},
                Converter={StaticResource ImportStatusToIsEnableConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBox Grid.Row="0" materialDesign:HintAssist.Hint="Sample value" Margin="5 10"
                         Foreground="{DynamicResource MaterialDesignBody}" IsReadOnly="True"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         Text="{Binding Property.SampleValue, 
                    RelativeSource={RelativeSource FindAncestor,AncestorType=Window}, UpdateSourceTrigger=PropertyChanged}"/>

                <ComboBox Grid.Row="1" materialDesign:HintAssist.Hint="Calendar" Name="CalendarCombobox"
                          Foreground="{DynamicResource MaterialDesignBody}" Margin="5 10" 
                          Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding Source={StaticResource CalendarTypeValues}}"
                          SelectedItem="{Binding Calendar, FallbackValue=Gregorian, UpdateSourceTrigger=PropertyChanged, 
                    RelativeSource={RelativeSource FindAncestor,AncestorType=Window}}"
                          >
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

                <ComboBox Grid.Row="2" materialDesign:HintAssist.Hint="Time zone" Name="TimeZoneComboBox"
                          Foreground="{DynamicResource MaterialDesignBody}" Margin="5 10" 
                          Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                          ItemsSource="{Binding TimeZoneInfoList, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                          DisplayMemberPath="DisplayName"
                          SelectedValue="{Binding Property.Configuration.TimeZone,
                    RelativeSource={RelativeSource FindAncestor,AncestorType=Window}, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ComboBox.ItemsPanel>
                </ComboBox>

                <TextBox Grid.Row="3" materialDesign:HintAssist.Hint="String format" Margin="5 10"
                         Foreground="{DynamicResource MaterialDesignBody}" Name="StringFormatTextBox"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         VerticalAlignment="Center" 
                         Text="{Binding Property.Configuration.StringFormat, 
                    RelativeSource={RelativeSource FindAncestor,AncestorType=Window}, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>

            <StackPanel Grid.Row="1" Grid.Column="1" Margin="5 0" VerticalAlignment="Center"
                        Visibility="{Binding Property.SampleValueValidationStatus.Status, 
                    RelativeSource={RelativeSource FindAncestor,AncestorType=Window},
                Converter={StaticResource EqualityWithParameterToVisibilityConverter},
                ConverterParameter={x:Static propertiesValidation:ValidationStatus.Valid}}">
                <materialDesign:PackIcon Kind="TickCircleOutline" Height="100" Width="100" Margin="10"
                                         Foreground="Green" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <TextBlock Text="Format is match" Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                           Foreground="Green" HorizontalAlignment="Center"/>
            </StackPanel>

            <StackPanel Grid.Row="1" Grid.Column="1" Margin="5 0" VerticalAlignment="Center"
                        Visibility="{Binding Property.SampleValueValidationStatus.Status, 
                    RelativeSource={RelativeSource FindAncestor,AncestorType=Window},
                Converter={StaticResource EqualityWithParameterToVisibilityConverter},
                ConverterParameter={x:Static propertiesValidation:ValidationStatus.Warning}}">
                <materialDesign:PackIcon Kind="TickCircleOutline" Height="100" Width="100" Margin="10"
                                         Foreground="Green" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <TextBlock Text="Format is match" Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                           Foreground="Green" HorizontalAlignment="Center"/>
            </StackPanel>

            <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"
                        Visibility="{Binding Property.SampleValueValidationStatus.Status, 
                RelativeSource={RelativeSource FindAncestor,AncestorType=Window},
                Converter={StaticResource EqualityWithParameterToVisibilityConverter},
                ConverterParameter={x:Static propertiesValidation:ValidationStatus.Invalid}}">
                <materialDesign:PackIcon Kind="Warning" Height="100" Width="100" Margin="10"
                                         Foreground="OrangeRed" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                <TextBlock Text="Format is not match" Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                           Foreground="OrangeRed" HorizontalAlignment="Center"/>
            </StackPanel>

            <Button Grid.Row="2" Grid.Column="1" Name="DoneButton" Margin="5" 
                    HorizontalAlignment="Right" Content="Done" Click="DoneButton_OnClick"/>
        </Grid>
    </Border>
</Window>
