<Window x:Class="GPAS.Workspace.Presentation.Windows.DataImport.GroupDataSourcesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:common="clr-namespace:GPAS.Workspace.Presentation.Controls.Common"
        xmlns:Commonconverters="clr-namespace:GPAS.Workspace.Presentation.Controls.Common.Converters"
        xmlns:userControlItem="clr-namespace:GPAS.Workspace.Presentation.Controls.DataImport"
        xmlns:converters="clr-namespace:GPAS.Workspace.Presentation.Controls.DataImport.Converters"
        xmlns:defectios="clr-namespace:GPAS.Workspace.Presentation.Controls.DataImport.Model"
        xmlns:converters1="clr-namespace:GPAS.Workspace.Presentation.Windows.DataImport.Converters"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        Loaded="GroupDataSourcesWindow_OnLoaded"
        Unloaded="GroupDataSourcesWindow_OnUnloaded"
        mc:Ignorable="d"   
        ShowInTaskbar="False"
        WindowStartupLocation="CenterOwner"
        Height="650" Width="1200" Title="Manage group">

    <Window.Resources>
        
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:CollectionCountIToVisibilityConverter x:Key="CollectionCountIToVisibilityConverter" 
                                                          ZeroCountValue="Visible" PositiveCountValue="Collapsed"/>
        <converters:DataSourcsCountToDataSourceContainerVisibilityConverter x:Key="DataSourcsCountToDataSourceContainerVisibilityConverter"/>
        <converters:SortTypeToBooleanConverter x:Key="SortTypeToBooleanConverter"/>
        <converters:ItemsNumberToTextConverter x:Key="ItemsNumberToTextConverter"/>
        <converters:DataSourceValidationToForgroundConverter x:Key="DataSourceValidationToForgroundConverter"/>
        <converters1:DataSourcesCountToBooleanConverter x:Key="CountToBooleanConverter"/>
        <converters:SelectedDataSourcesNumberToTextConverter x:Key="SelectedDataSourcesNumberToTextConverter"/>
        <converters:BooleanToBorderBrushConverter x:Key="BooleanToBorderBrushConverter"/>
        <converters:BooleanToForegrandConverter x:Key="BooleanToForegrandConverter"/>
        <materialDesign:BooleanToVisibilityConverter x:Key="RevertBooleanToVisibilityConverter" FalseValue="Visible" TrueValue="Collapsed"/>
        <Commonconverters:ImportStatusToIsEnableConverter x:Key="ImportStatusToIsEnableConverter"/>
            
        <Style TargetType="ToolTip">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        </Style>
        <!--قالب برای رادیو باتن ها در منوی سمت راست صفحه-->
        <Style x:Key="TabHeader" TargetType="RadioButton" BasedOn="{StaticResource MaterialDesignTabRadioButton}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="5 5"/>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}" x:Key="ButtonStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedDataSources.Count, FallbackValue=0}" Value="0">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource ButtonStyle}" x:Key="MoveToButtonStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=GroupsComboBox, Path=SelectedItem}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">5</system:Double>
        <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">5</system:Double>

    </Window.Resources>

    <Grid Name="MainGrid" Background="{DynamicResource MaterialDesignPaper}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" MinWidth="600"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*" MinWidth="300"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" Grid.Column="0" Margin="0 20 0 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="Title" Style="{StaticResource NormalTextBlock}"
                           Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                <TextBox Grid.Column="1" materialDesign:HintAssist.Hint="Please enter a title" 
                         Text="{Binding Title}" VerticalAlignment="Center" Margin="5" FontSize="14" 
                         Foreground="{DynamicResource MaterialDesignBody}"
                         IsEnabled="{Binding ImportStatus, Converter={StaticResource ImportStatusToIsEnableConverter}}"/>
                <materialDesign:PackIcon Grid.Column="2" Kind="Edit" Height="25" Width="25" 
                                             Foreground="{DynamicResource MaterialDesignBody}"/>
            </Grid>

            <Grid x:Name="ItemsGrid" Grid.Column="0" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Grid x:Name="UpGrid" Grid.Row="0" Background="{DynamicResource MaterialDesignCardBackground}" Margin="5"
                      IsEnabled="{Binding ImportStatus, Converter={StaticResource ImportStatusToIsEnableConverter}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <common:ButtonWithIcon Grid.Column="0" x:Name="RemoveButton" Click="RemoveButton_OnClick"
                                           Content="Remove" Icon="Trash" ContentMargin="5"
                                           ToolTip="Remove selected data sources"
                                           Style="{StaticResource ButtonStyle}"/>

                    <common:ButtonWithIcon Grid.Column="1" x:Name="UnGroupButton" Click="UnGroupButton_OnClick"
                                           Content="Ungroup" Icon="Ungroup" ContentMargin="5"
                                           ToolTip="Ungroup selected data sources"
                                           Style="{StaticResource ButtonStyle}"/>

                    <common:ButtonWithIcon Grid.Column="2" x:Name="MoveToButton" Click="MoveToButton_OnClick" 
                                           Content="Move to:" Icon="ArrowRightBoldHexagonOutline" ContentMargin="5"
                                           ToolTip="Move selected data sources to other group"
                                           Style="{StaticResource MoveToButtonStyle}"/>

                    <Border Grid.Column="3" BorderThickness="0.5" BorderBrush="{DynamicResource MaterialDesignBody}"
                            CornerRadius="5" Margin="5" Padding="5">
                        <ComboBox Foreground="{DynamicResource MaterialDesignBody}" BorderThickness="0" Padding="0" 
                                      materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource PrimaryHueMidBrush}" 
                                      materialDesign:TextFieldAssist.DecorationVisibility="Hidden" FontSize="14"
                                      Name="GroupsComboBox" DisplayMemberPath="Title" materialDesign:HintAssist.Hint="Select destination group"
                                      ItemsSource="{Binding OtherGroupsCollection, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                        </ComboBox>
                    </Border>
                </Grid>

                <TextBlock Grid.Row="1" Text="This group is empty" Style="{StaticResource MaterialDesignSubtitle2TextBlock}"
                               Foreground="{DynamicResource MaterialDesignBody}" Margin="5" HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Visibility="{Binding DataSourceCollection, Converter={StaticResource CollectionCountIToVisibilityConverter}}"/>

                <DataGrid Grid.Row="1" Name="DataSourceDataGrid" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          IsReadOnly="True" SelectionMode="Extended" CanUserAddRows="False" AutoGenerateColumns="False" 
                          ItemsSource="{Binding DataSourceCollection}" Margin="5"
                          SelectionChanged="DataSourceDataGrid_OnSelectionChanged">
                    <DataGrid.InputBindings>
                        <KeyBinding Key="Delete" Command="{Binding RemoveCommand, 
                            RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"/>
                    </DataGrid.InputBindings>
                    <DataGrid.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </DataGrid.ItemsPanel>
                    <DataGrid.Resources>
                        <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                            <Setter Property="Padding" Value="5" />
                            <Setter Property="FontSize" Value="13" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Setter Property="BorderThickness" Value="0" />
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Icon">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Image Source="{Binding SmallIcon}" Width="20" Height="20" Stretch="Uniform" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Data Source Name" SortMemberPath="Title">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Title }" VerticalAlignment="Center" Foreground="{Binding IsValid,Converter={StaticResource BooleanToForegrandConverter}}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Data Source Type" SortMemberPath="Type">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Type }" VerticalAlignment="Center" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="File Path" SortMemberPath="FileInfo.FullPath" Width="500">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FileInfo.FullPath }" VerticalAlignment="Center"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Defections"  SortMemberPath="Type" MinWidth="100" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button Name="DefectiosButton" Click="DefectiosButton_Click"  
                                            Padding="2" VerticalAlignment="Center" HorizontalAlignment="Left"
                                            Grid.Column="1" Height="22"
                                            Style="{StaticResource MaterialDesignFlatButton}"
                                            Visibility="{Binding IsValid, Converter={StaticResource RevertBooleanToVisibilityConverter}}">

                                        <materialDesign:PopupBox Name="DefectionsToolBar" StaysOpen="True" HorizontalAlignment="Left" 
                                                                 PopupMode="Click" PlacementMode="BottomAndAlignLeftEdges">
                                            <materialDesign:PopupBox.ToggleContent>
                                                <materialDesign:PackIcon Kind="BellAlert" 
                                                                         Foreground="OrangeRed" VerticalAlignment="Center"
                                                                         Width="18" Height="18"/>
                                            </materialDesign:PopupBox.ToggleContent>

                                            <StackPanel>
                                                <StackPanel Orientation="Horizontal" Margin="5">
                                                    <TextBlock Text="Defections" Margin="5" Opacity="0.7"
                                                                       Style="{StaticResource MaterialDesignBody2TextBlock}"/>
                                                </StackPanel>

                                                <ListView Name="DefectionsListView" Margin="10 5" >
                                                    <ListView.ItemContainerStyle>
                                                        <Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">
                                                            <Setter Property="Tag" Value="{Binding RelatedElement}"/>
                                                            <EventSetter Event="PreviewMouseDown" Handler="DefectionsListItemOnMouseDown"/>
                                                        </Style>
                                                    </ListView.ItemContainerStyle>
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <StackPanel Orientation="Horizontal">
                                                                <materialDesign:PackIcon Kind="{Binding Icon}" Height="20" Width="20"
                                                                         VerticalAlignment="Center"/>
                                                                <TextBlock Text="{Binding Message}" VerticalAlignment="Center" Margin="5 0"/>
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>
                                            </StackPanel>
                                        </materialDesign:PopupBox>

                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>

                <!--تعداد کل آیتم ها و آیتم‌های انتخاب شده-->
                <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="5" HorizontalAlignment="Left" >
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Name="DataSourcesCountTextBlock" Text="{Binding DataSourceCollection.Count}"/>
                    <TextBlock Text="{Binding ElementName=DataSourcesCountTextBlock, Path=Text, 
                    Converter={StaticResource ItemsNumberToTextConverter}}" />
                    <TextBlock Text="{Binding SelectedDataSources.Count,
                        Converter={StaticResource SelectedDataSourcesNumberToTextConverter}}" />
                </StackPanel>
            </Grid>

            <GridSplitter Grid.Column="1" Grid.Row="1" Margin="0 5" Width="4"
                              VerticalAlignment="Stretch" HorizontalAlignment="Center" />

            <Separator Grid.Column="1" Grid.Row="1" Margin="0 5">
                <Separator.LayoutTransform>
                    <RotateTransform Angle="90" />
                </Separator.LayoutTransform>
            </Separator>

            <Grid Name="PreviewGrid" Grid.Column="2" Grid.Row="1" Margin="5">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Background="{DynamicResource MaterialDesignCardBackground}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <RadioButton Name="PreviewHeaderRadioButton" Grid.Column="0"
                                         Content="Preview" IsChecked="True" Background="Transparent" >
                            <RadioButton.Style>
                                <Style BasedOn="{StaticResource TabHeader}" TargetType="RadioButton">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=SelectedDefectionType,
                                        RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                             Value="{x:Static defectios:DefectionType.PreviewHasAnError}">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource ItemListWarningBackgroundStoryboard}"/>
                                            </DataTrigger.EnterActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </RadioButton.Style>
                        </RadioButton>

                        <RadioButton Name="DetailsHeaderRadioButton" Grid.Column="1"
                                         Style="{StaticResource TabHeader}" Content="Details" IsChecked="False" />
                    </Grid>

                    <Grid Grid.Row="1" Background="Transparent">
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=SelectedDefectionType,
                                        RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Window}}"
                                             Value="{x:Static defectios:DefectionType.PreviewHasAnError}">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource ItemListWarningBackgroundStoryboard}"/>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <userControlItem:DataSourcePreviewUserControl x:Name="DataSourcePreviewUserControl"
                                                    Visibility="{Binding ElementName=PreviewHeaderRadioButton, Path=IsChecked,
                                Converter={StaticResource BooleanToVisibilityConverter}}" Margin="5"
                                                    DataSource="{Binding SelectedDataSource}"/>

                        <userControlItem:DataSourceDetailsUserControl x:Name="DataSourceDetailsUserControl"
                                                    Visibility="{Binding ElementName=DetailsHeaderRadioButton, Path=IsChecked,
                                Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    DataSource="{Binding SelectedDataSource}"/>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
