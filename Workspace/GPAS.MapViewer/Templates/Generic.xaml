<!--
    Based on Themed-, ER- & DynamicGraphXTemplates Templates from GraphX (v 2.0.2) Showcase Example
 -->
<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:local="clr-namespace:GPAS.MapViewer">

    
    <Style x:Key="FillPolygon" TargetType="{x:Type Path}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="Opacity" Value=".5"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Stroke" Value="Transparent" />
        <Setter Property="StrokeThickness" Value="0"/>
        <Setter Property="Fill" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Opacity" Value=".2"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
    </Style>

    <Style x:Key="FillPolygonSelect" TargetType="{x:Type Path}" BasedOn="{StaticResource FillPolygon}">
        <Setter Property="Fill" Value="YellowGreen"/>
        <Setter Property="Stroke" Value="Yellow" />
        <Setter Property="StrokeThickness" Value="3"/>
        <Setter Property="Opacity" Value=".3"/>
    </Style>

    <Style x:Key="EdgePolygon" TargetType="{x:Type Path}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Stroke" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Stroke" Value="DimGray" />
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="StrokeThickness" Value="3"/>
        <Setter Property="StrokeEndLineCap" Value="Triangle"/>
        <Setter Property="StrokeStartLineCap" Value="Triangle"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
    </Style>

    <Style x:Key="CrossEdgePolygon" TargetType="{x:Type Path}" BasedOn="{StaticResource EdgePolygon}">
        <Setter Property="Stroke" Value="Red" />
    </Style>

    <Style x:Key="CoincidentEdgePolygon" TargetType="{x:Type Path}" BasedOn="{StaticResource EdgePolygon}">
        <Setter Property="Stroke" Value="Red" />
    </Style>

    <Style x:Key="VerticesPolygon" TargetType="{x:Type Path}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Stroke" Value="{StaticResource PrimaryHueMidBrush}" />
                <Setter Property="StrokeThickness" Value="10"/>
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Stroke" Value="DimGray" />
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="StrokeThickness" Value="4"/>
        <Setter Property="StrokeEndLineCap" Value="Square"/>
        <Setter Property="StrokeStartLineCap" Value="Square"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
    </Style>

    <Style x:Key="VertexPolygonMagnet" TargetType="{x:Type Path}" BasedOn="{StaticResource VerticesPolygon}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Cursor" Value="SizeNESW" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Stroke" Value="Violet" />
        <Setter Property="StrokeThickness" Value="10"/>
        <Setter Property="Cursor" Value="SizeNESW" />
    </Style>
    <Style x:Key="VertexCrossPoint" TargetType="{x:Type Path}" BasedOn="{StaticResource VerticesPolygon}">
        <Setter Property="Stroke" Value="Cyan" />
        <Setter Property="StrokeThickness" Value="10"/>
        <Setter Property="StrokeEndLineCap" Value="Triangle"/>
        <Setter Property="StrokeStartLineCap" Value="Triangle"/>
    </Style>

    <Style x:Key="FillCircle"  TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="{StaticResource PrimaryHueMidBrush}"/>
        <Setter Property="Stroke" Value="{x:Null}" />
        <Setter Property="StrokeThickness" Value="0"/>
        <Setter Property="Opacity" Value=".3"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
    </Style>

    <Style x:Key="StrokeCircle"  TargetType="{x:Type Path}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Stroke" Value="{StaticResource PrimaryHueMidBrush}" />
                <Setter Property="Cursor" Value="SizeWE"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Fill" Value="{x:Null}"/>
        <Setter Property="Stroke" Value="DimGray" />
        <Setter Property="StrokeThickness" Value="3"/>
        <Setter Property="Opacity" Value=".5"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
    </Style>

    <Style x:Key="RadiusLineCircle"  TargetType="{x:Type Path}">
        <Setter Property="Stroke" Value="Gray" />
        <Setter Property="StrokeDashArray" Value="3"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
    </Style>

    <Style x:Key="StrokeCircleSelected"  TargetType="{x:Type Path}" BasedOn="{StaticResource StrokeCircle}">
        <Setter Property="Stroke" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Cursor" Value="SizeWE"/>
    </Style>    

    <Style x:Key="CenterPointCircle"  TargetType="{x:Type Path}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Stroke" Value="{DynamicResource PrimaryHueMidBrush}" />
                <Setter Property="Cursor" Value="SizeAll"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Stroke" Value="DimGray" />
        <Setter Property="StrokeThickness" Value="7"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
    </Style>

    <Style x:Key="CenterPointCircleSelected"  TargetType="{x:Type Path}" BasedOn="{StaticResource CenterPointCircle}">
        <Setter Property="Stroke" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="Cursor" Value="SizeAll"/>
    </Style>

    <Style x:Key="HaloRoute" TargetType="{x:Type Path}">
        <Setter Property="Stroke" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Opacity" Value=".6"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="StrokeEndLineCap" Value="Round"/>
        <Setter Property="StrokeStartLineCap" Value="Round"/>
        <Setter Property="StrokeLineJoin" Value="Round"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="NodesGeneralStyle">
        <Setter Property="Stroke" Value="DimGray"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="Data">
            <Setter.Value>
                <EllipseGeometry Center="0,0" RadiusX="5" RadiusY="5" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Path}" x:Key="NodesGeneralStyleSelecteded">
        <Setter Property="Stroke" Value="{DynamicResource PrimaryHueMidBrush}"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="Data">
            <Setter.Value>
                <EllipseGeometry Center="0,0" RadiusX="5" RadiusY="5" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LockPolygon" TargetType="{x:Type Path}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" Value="#77999999" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Stroke" Value="Gray" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Fill" Value="#77535353" />
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="StrokeEndLineCap" Value="Round"/>
        <Setter Property="StrokeStartLineCap" Value="Round"/>
        <Setter Property="StrokeLineJoin" Value="Round"/>
    </Style>

    <Style x:Key="LockCircle" TargetType="{x:Type Path}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" Value="#77999999" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Stroke" Value="Gray" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Fill" Value="#77535353" />
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="StrokeEndLineCap" Value="Round"/>
        <Setter Property="StrokeStartLineCap" Value="Round"/>
        <Setter Property="StrokeLineJoin" Value="Round"/>
    </Style>

    <Style x:Key="LockRoute" TargetType="{x:Type Path}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Stroke" Value="#77999999" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Stroke" Value="#77535353" />
        <Setter Property="StrokeThickness" Value="3" />
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Effect" Value="{x:Null}"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="StrokeEndLineCap" Value="Round"/>
        <Setter Property="StrokeStartLineCap" Value="Round"/>
        <Setter Property="StrokeLineJoin" Value="Round"/>
    </Style>

    <Style TargetType="{x:Type local:SimpleMarkerShape}">
        <Style.Setters>
            <Setter Property="IsHighlighted" Value="{Binding Source=local:SimpleMarker, Path=IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:SimpleMarkerShape}">
                            <Grid>
                                <Path Fill="DimGray" Style="{StaticResource NodesGeneralStyle}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:SimpleMarkerShape}">
                            <Grid>
                                <Path Fill="{DynamicResource  PrimaryHueMidBrush}" Style="{StaticResource NodesGeneralStyleSelecteded}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="Heated_Metal">
        <GradientStop Color="White" Offset="1.00000" />
        <!-- Hotter -->
        <GradientStop Color="Yellow" Offset="0.8" />
        <GradientStop Color="Red" Offset="0.6" />
        <GradientStop Color="Purple" Offset="0.4" />
        <GradientStop Color="Black" Offset="0.0" />
        <!-- Cooler -->
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Black_Aqua_White">
        <GradientStop Color="White" Offset="1.00000" />
        <!-- Hotter -->
        <GradientStop Color="Aqua" Offset="0.5" />
        <GradientStop Color="Black" Offset="0.0" />
        <!-- Cooler -->
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Blue_Red">
        <GradientStop Color="Red" Offset="1.00000" />
        <!-- Hotter -->
        <GradientStop Color="Blue" Offset="0.0" />
        <!-- Cooler -->
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Deep_Sea">
        <GradientStop Color="#FF00FAFA" Offset="1.00000" />
        <!-- Hotter -->
        <GradientStop Color="#FF17ADCB" Offset="0.9" />
        <GradientStop Color="#FF2E649E" Offset="0.75" />
        <GradientStop Color="#FF183567" Offset="0.6" />
        <GradientStop Color="Black" Offset="0.0" />
        <!-- Cooler -->
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Color_Spectrum">
        <GradientStop Color="Red" Offset="1.00000" />
        <!-- Hotter -->
        <GradientStop Color="Yellow" Offset="0.75" />
        <GradientStop Color="Green" Offset="0.5" />
        <GradientStop Color="Blue" Offset="0.25" />
        <GradientStop Color="Navy" Offset="0" />
        <!-- Cooler -->
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Incandescent">
        <GradientStop Color="White" Offset="1.00000" />
        <!-- Hotter -->
        <GradientStop Color="Yellow" Offset="0.66" />
        <GradientStop Color="DarkRed" Offset="0.33" />
        <GradientStop Color="Black" Offset="0.0" />
        <!-- Cooler -->
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Sunrise">
        <GradientStop Color="White" Offset="1.00000" />
        <!-- Hotter -->
        <GradientStop Color="Yellow" Offset="0.66" />
        <GradientStop Color="Red" Offset="0.0" />
        <!-- Cooler -->
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Visible_Spectrum">
        <GradientStop Color="Red" Offset="1.00000" />
        <!-- Hotter -->
        <GradientStop Color="Yellow" Offset="0.75" />
        <GradientStop Color="Lime" Offset="0.5" />
        <GradientStop Color="Blue" Offset="0.25" />
        <GradientStop Color="Magenta" Offset="0.0" />
        <!-- Cooler -->
    </LinearGradientBrush>

    <VisualBrush x:Name="PaletteBrush" x:Key="PaletteBrush">
        <VisualBrush.Visual>
            <Rectangle Width="256" Height="1" Fill="{DynamicResource Visible_Spectrum}" />
        </VisualBrush.Visual>
    </VisualBrush>
</ResourceDictionary>